{"version":3,"file":"OverlayScrollbars-9b821cbe.4e769de3.js","sources":["../../node_modules/.pnpm/@storybook+components@6.5.3/node_modules/@storybook/components/dist/esm/OverlayScrollbars-9b821cbe.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { c as commonjsGlobal, a as __rest } from './index-3ae04fda.js';\nimport React__default, { useRef, useEffect } from 'react';\nimport '@storybook/theming';\nimport '@storybook/csf';\nimport 'qs';\nimport '@storybook/client-logger';\nvar OverlayScrollbars$1 = {\n  exports: {}\n};\n/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\n\n(function (module) {\n  (function (global, factory) {\n    module.exports = factory(global, global.document, undefined);\n  })(typeof window !== 'undefined' ? window : commonjsGlobal, function (window, document, undefined$1) {\n    var PLUGINNAME = 'OverlayScrollbars';\n    var TYPES = {\n      o: 'object',\n      f: 'function',\n      a: 'array',\n      s: 'string',\n      b: 'boolean',\n      n: 'number',\n      u: 'undefined',\n      z: 'null' //d : 'date',\n      //e : 'error',\n      //r : 'regexp',\n      //y : 'symbol'\n\n    };\n    var LEXICON = {\n      c: 'class',\n      s: 'style',\n      i: 'id',\n      l: 'length',\n      p: 'prototype',\n      ti: 'tabindex',\n      oH: 'offsetHeight',\n      cH: 'clientHeight',\n      sH: 'scrollHeight',\n      oW: 'offsetWidth',\n      cW: 'clientWidth',\n      sW: 'scrollWidth',\n      hOP: 'hasOwnProperty',\n      bCR: 'getBoundingClientRect'\n    };\n\n    var VENDORS = function () {\n      //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\n      var jsCache = {};\n      var cssCache = {};\n      var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\n      var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\n\n      function firstLetterToUpper(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n      }\n\n      return {\n        _cssPrefixes: cssPrefixes,\n        _jsPrefixes: jsPrefixes,\n        _cssProperty: function _cssProperty(name) {\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var uppercasedName = firstLetterToUpper(name);\n          var elmStyle = document.createElement('div')[LEXICON.s];\n          var resultPossibilities;\n          var i = 0;\n          var v;\n          var currVendorWithoutDashes;\n\n          for (; i < cssPrefixes.length; i++) {\n            currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\n            resultPossibilities = [name, //transition\n            cssPrefixes[i] + name, //-webkit-transition\n            currVendorWithoutDashes + uppercasedName, //webkitTransition\n            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\n            ];\n\n            for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\n              if (elmStyle[resultPossibilities[v]] !== undefined$1) {\n                result = resultPossibilities[v];\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _cssPropertyValue: function _cssPropertyValue(property, values, suffix) {\n          var name = property + ' ' + values;\n          var result = cssCache[name];\n          if (cssCache[LEXICON.hOP](name)) return result;\n          var dummyStyle = document.createElement('div')[LEXICON.s];\n          var possbleValues = values.split(' ');\n          var preparedSuffix = suffix || '';\n          var i = 0;\n          var v = -1;\n          var prop;\n\n          for (; i < possbleValues[LEXICON.l]; i++) {\n            for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\n              prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\n              dummyStyle.cssText = property + ':' + prop + preparedSuffix;\n\n              if (dummyStyle[LEXICON.l]) {\n                result = prop;\n                break;\n              }\n            }\n          }\n\n          cssCache[name] = result;\n          return result;\n        },\n        _jsAPI: function _jsAPI(name, isInterface, fallback) {\n          var i = 0;\n          var result = jsCache[name];\n\n          if (!jsCache[LEXICON.hOP](name)) {\n            result = window[name];\n\n            for (; i < jsPrefixes[LEXICON.l]; i++) {\n              result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\n            }\n\n            jsCache[name] = result;\n          }\n\n          return result || fallback;\n        }\n      };\n    }();\n\n    var COMPATIBILITY = function () {\n      function windowSize(x) {\n        return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\n      }\n\n      function bind(func, thisObj) {\n        if (_typeof(func) != TYPES.f) {\n          throw \"Can't bind function!\"; // closest thing possible to the ECMAScript 5\n          // internal IsCallable function\n          //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var proto = LEXICON.p;\n        var aArgs = Array[proto].slice.call(arguments, 2);\n\n        var fNOP = function fNOP() {};\n\n        var fBound = function fBound() {\n          return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments)));\n        };\n\n        if (func[proto]) fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\n\n        fBound[proto] = new fNOP();\n        return fBound;\n      }\n\n      return {\n        /**\r\n         * Gets the current window width.\r\n         * @returns {Number|number} The current window width in pixel.\r\n         */\n        wW: bind(windowSize, 0, true),\n\n        /**\r\n         * Gets the current window height.\r\n         * @returns {Number|number} The current window height in pixel.\r\n         */\n        wH: bind(windowSize, 0),\n\n        /**\r\n         * Gets the MutationObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n         */\n        mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\n\n        /**\r\n         * Gets the ResizeObserver Object or undefined if not supported.\r\n         * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n         */\n        rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\n\n        /**\r\n         * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n         */\n        rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) {\n          return window.setTimeout(func, 1000 / 60);\n        }),\n\n        /**\r\n         * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n         * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n         */\n        cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) {\n          return window.clearTimeout(id);\n        }),\n\n        /**\r\n         * Gets the current time.\r\n         * @returns {number} The current time.\r\n         */\n        now: function now() {\n          return Date.now && Date.now() || new Date().getTime();\n        },\n\n        /**\r\n         * Stops the propagation of the given event.\r\n         * @param event The event of which the propagation shall be stoped.\r\n         */\n        stpP: function stpP(event) {\n          if (event.stopPropagation) event.stopPropagation();else event.cancelBubble = true;\n        },\n\n        /**\r\n         * Prevents the default action of the given event.\r\n         * @param event The event of which the default action shall be prevented.\r\n         */\n        prvD: function prvD(event) {\n          if (event.preventDefault && event.cancelable) event.preventDefault();else event.returnValue = false;\n        },\n\n        /**\r\n         * Gets the pageX and pageY values of the given mouse event.\r\n         * @param event The mouse event of which the pageX and pageX shall be got.\r\n         * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n         */\n        page: function page(event) {\n          event = event.originalEvent || event;\n          var strPage = 'page';\n          var strClient = 'client';\n          var strX = 'X';\n          var strY = 'Y';\n          var target = event.target || event.srcElement || document;\n          var eventDoc = target.ownerDocument || document;\n          var doc = eventDoc.documentElement;\n          var body = eventDoc.body; //if touch event return return pageX/Y of it\n\n          if (event.touches !== undefined$1) {\n            var touch = event.touches[0];\n            return {\n              x: touch[strPage + strX],\n              y: touch[strPage + strY]\n            };\n          } // Calculate pageX/Y if not native supported\n\n\n          if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\n            return {\n              x: event[strClient + strX] + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0),\n              y: event[strClient + strY] + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)\n            };\n          }\n\n          return {\n            x: event[strPage + strX],\n            y: event[strPage + strY]\n          };\n        },\n\n        /**\r\n         * Gets the clicked mouse button of the given mouse event.\r\n         * @param event The mouse event of which the clicked button shal be got.\r\n         * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n         */\n        mBtn: function mBtn(event) {\n          var button = event.button;\n          if (!event.which && button !== undefined$1) return button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;else return event.which;\n        },\n\n        /**\r\n         * Checks whether a item is in the given array and returns its index.\r\n         * @param item The item of which the position in the array shall be determined.\r\n         * @param arr The array.\r\n         * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n         */\n        inA: function inA(item, arr) {\n          for (var i = 0; i < arr[LEXICON.l]; i++) {\n            //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\n            try {\n              if (arr[i] === item) return i;\n            } catch (e) {}\n          }\n\n          return -1;\n        },\n\n        /**\r\n         * Returns true if the given value is a array.\r\n         * @param arr The potential array.\r\n         * @returns {boolean} True if the given value is a array, false otherwise.\r\n         */\n        isA: function isA(arr) {\n          var def = Array.isArray;\n          return def ? def(arr) : this.type(arr) == TYPES.a;\n        },\n\n        /**\r\n         * Determine the internal JavaScript [[Class]] of the given object.\r\n         * @param obj The object of which the type shall be determined.\r\n         * @returns {string} The type of the given object.\r\n         */\n        type: function type(obj) {\n          if (obj === undefined$1) return obj + '';\n          if (obj === null) return obj + '';\n          return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\n        },\n        bind: bind\n        /**\r\n         * Gets the vendor-prefixed CSS property by the given name.\r\n         * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n         * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n         * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n         * @param propName The unprefixed CSS property name.\r\n         * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n          cssProp: function(propName) {\r\n            return VENDORS._cssProperty(propName);\r\n        }\r\n        */\n\n      };\n    }();\n\n    var MATH = Math;\n    var JQUERY = window.jQuery;\n\n    var EASING = function () {\n      var _easingsMath = {\n        p: MATH.PI,\n        c: MATH.cos,\n        s: MATH.sin,\n        w: MATH.pow,\n        t: MATH.sqrt,\n        n: MATH.asin,\n        a: MATH.abs,\n        o: 1.70158\n      };\n      /*\r\n       x : current percent (0 - 1),\r\n       t : current time (duration * percent),\r\n       b : start value (from),\r\n       c : end value (to),\r\n       d : duration\r\n         easingName : function(x, t, b, c, d) { return easedValue; }\r\n       */\n\n      return {\n        swing: function swing(x, t, b, c, d) {\n          return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\n        },\n        linear: function linear(x, t, b, c, d) {\n          return x;\n        },\n        easeInQuad: function easeInQuad(x, t, b, c, d) {\n          return c * (t /= d) * t + b;\n        },\n        easeOutQuad: function easeOutQuad(x, t, b, c, d) {\n          return -c * (t /= d) * (t - 2) + b;\n        },\n        easeInOutQuad: function easeInOutQuad(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t + b : -c / 2 * (--t * (t - 2) - 1) + b;\n        },\n        easeInCubic: function easeInCubic(x, t, b, c, d) {\n          return c * (t /= d) * t * t + b;\n        },\n        easeOutCubic: function easeOutCubic(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t + 1) + b;\n        },\n        easeInOutCubic: function easeInOutCubic(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\n        },\n        easeInQuart: function easeInQuart(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t + b;\n        },\n        easeOutQuart: function easeOutQuart(x, t, b, c, d) {\n          return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n        },\n        easeInOutQuart: function easeInOutQuart(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n        },\n        easeInQuint: function easeInQuint(x, t, b, c, d) {\n          return c * (t /= d) * t * t * t * t + b;\n        },\n        easeOutQuint: function easeOutQuint(x, t, b, c, d) {\n          return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n        },\n        easeInOutQuint: function easeInOutQuint(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n        },\n        easeInSine: function easeInSine(x, t, b, c, d) {\n          return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\n        },\n        easeOutSine: function easeOutSine(x, t, b, c, d) {\n          return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\n        },\n        easeInOutSine: function easeInOutSine(x, t, b, c, d) {\n          return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\n        },\n        easeInExpo: function easeInExpo(x, t, b, c, d) {\n          return t == 0 ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\n        },\n        easeOutExpo: function easeOutExpo(x, t, b, c, d) {\n          return t == d ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\n        },\n        easeInOutExpo: function easeInOutExpo(x, t, b, c, d) {\n          if (t == 0) return b;\n          if (t == d) return b + c;\n          if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\n          return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\n        },\n        easeInCirc: function easeInCirc(x, t, b, c, d) {\n          return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\n        },\n        easeOutCirc: function easeOutCirc(x, t, b, c, d) {\n          return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\n        },\n        easeInOutCirc: function easeInOutCirc(x, t, b, c, d) {\n          return (t /= d / 2) < 1 ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\n        },\n        easeInElastic: function easeInElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n        },\n        easeOutElastic: function easeOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d) == 1) return b + c;\n          if (!p) p = d * .3;\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\n        },\n        easeInOutElastic: function easeInOutElastic(x, t, b, c, d) {\n          var s = _easingsMath.o;\n          var p = 0;\n          var a = c;\n          if (t == 0) return b;\n          if ((t /= d / 2) == 2) return b + c;\n          if (!p) p = d * (.3 * 1.5);\n\n          if (a < _easingsMath.a(c)) {\n            a = c;\n            s = p / 4;\n          } else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\n\n          if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\n          return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\n        },\n        easeInBack: function easeInBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * (t /= d) * t * ((s + 1) * t - s) + b;\n        },\n        easeOutBack: function easeOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n        },\n        easeInOutBack: function easeInOutBack(x, t, b, c, d, s) {\n          s = s || _easingsMath.o;\n          return (t /= d / 2) < 1 ? c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n        },\n        easeInBounce: function easeInBounce(x, t, b, c, d) {\n          return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\n        },\n        easeOutBounce: function easeOutBounce(x, t, b, c, d) {\n          var o = 7.5625;\n\n          if ((t /= d) < 1 / 2.75) {\n            return c * (o * t * t) + b;\n          } else if (t < 2 / 2.75) {\n            return c * (o * (t -= 1.5 / 2.75) * t + .75) + b;\n          } else if (t < 2.5 / 2.75) {\n            return c * (o * (t -= 2.25 / 2.75) * t + .9375) + b;\n          } else {\n            return c * (o * (t -= 2.625 / 2.75) * t + .984375) + b;\n          }\n        },\n        easeInOutBounce: function easeInOutBounce(x, t, b, c, d) {\n          return t < d / 2 ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\n        }\n      };\n      /*\r\n       *\r\n       * TERMS OF USE - EASING EQUATIONS\r\n       * \r\n       * Open source under the BSD License. \r\n       * \r\n       * Copyright Â© 2001 Robert Penner\r\n       * All rights reserved.\r\n       * \r\n       * Redistribution and use in source and binary forms, with or without modification, \r\n       * are permitted provided that the following conditions are met:\r\n       * \r\n       * Redistributions of source code must retain the above copyright notice, this list of \r\n       * conditions and the following disclaimer.\r\n       * Redistributions in binary form must reproduce the above copyright notice, this list \r\n       * of conditions and the following disclaimer in the documentation and/or other materials \r\n       * provided with the distribution.\r\n       * \r\n       * Neither the name of the author nor the names of contributors may be used to endorse \r\n       * or promote products derived from this software without specific prior written permission.\r\n       * \r\n       * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n       * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n       * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n       *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n       *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n       *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n       * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n       *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n       * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n       *\r\n       */\n    }();\n\n    var FRAMEWORK = function () {\n      var _rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n      var _strSpace = ' ';\n      var _strEmpty = '';\n      var _strScrollLeft = 'scrollLeft';\n      var _strScrollTop = 'scrollTop';\n      var _animations = [];\n      var _type = COMPATIBILITY.type;\n      var _cssNumber = {\n        animationIterationCount: true,\n        columnCount: true,\n        fillOpacity: true,\n        flexGrow: true,\n        flexShrink: true,\n        fontWeight: true,\n        lineHeight: true,\n        opacity: true,\n        order: true,\n        orphans: true,\n        widows: true,\n        zIndex: true,\n        zoom: true\n      };\n\n      function extend() {\n        var src,\n            copyIsArray,\n            copy,\n            name,\n            options,\n            clone,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments[LEXICON.l],\n            deep = false; // Handle a deep copy situation\n\n        if (_type(target) == TYPES.b) {\n          deep = target;\n          target = arguments[1] || {}; // skip the boolean and the target\n\n          i = 2;\n        } // Handle case when target is a string or something (possible in deep copy)\n\n\n        if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\n          target = {};\n        } // extend jQuery itself if only one argument is passed\n\n\n        if (length === i) {\n          target = FakejQuery;\n          --i;\n        }\n\n        for (; i < length; i++) {\n          // Only deal with non-null/undefined values\n          if ((options = arguments[i]) != null) {\n            // Extend the base object\n            for (name in options) {\n              src = target[name];\n              copy = options[name]; // Prevent never-ending loop\n\n              if (target === copy) {\n                continue;\n              } // Recurse if we're merging plain objects or arrays\n\n\n              if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\n                if (copyIsArray) {\n                  copyIsArray = false;\n                  clone = src && COMPATIBILITY.isA(src) ? src : [];\n                } else {\n                  clone = src && isPlainObject(src) ? src : {};\n                } // Never move original objects, clone them\n\n\n                target[name] = extend(deep, clone, copy); // Don't bring in undefined values\n              } else if (copy !== undefined$1) {\n                target[name] = copy;\n              }\n            }\n          }\n        } // Return the modified object\n\n\n        return target;\n      }\n\n      function inArray(item, arr, fromIndex) {\n        for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++) {\n          if (arr[i] === item) return i;\n        }\n\n        return -1;\n      }\n\n      function isFunction(obj) {\n        return _type(obj) == TYPES.f;\n      }\n\n      function isEmptyObject(obj) {\n        for (var name in obj) {\n          return false;\n        }\n\n        return true;\n      }\n\n      function isPlainObject(obj) {\n        if (!obj || _type(obj) != TYPES.o) return false;\n        var key;\n        var proto = LEXICON.p;\n        var hasOwnProperty = Object[proto].hasOwnProperty;\n        var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\n        var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\n\n        if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n          return false;\n        }\n\n        for (key in obj) {\n          /**/\n        }\n\n        return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\n      }\n\n      function _each(obj, callback) {\n        var i = 0;\n\n        if (isArrayLike(obj)) {\n          for (; i < obj[LEXICON.l]; i++) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        } else {\n          for (i in obj) {\n            if (callback.call(obj[i], i, obj[i]) === false) break;\n          }\n        }\n\n        return obj;\n      }\n\n      function isArrayLike(obj) {\n        var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\n\n        var t = _type(obj);\n\n        return isFunction(t) ? false : t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && length - 1 in obj;\n      }\n\n      function stripAndCollapse(value) {\n        var tokens = value.match(_rnothtmlwhite) || [];\n        return tokens.join(_strSpace);\n      }\n\n      function matches(elem, selector) {\n        var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\n        var i = nodeList[LEXICON.l];\n\n        while (i--) {\n          if (nodeList[i] == elem) return true;\n        }\n\n        return false;\n      }\n\n      function insertAdjacentElement(el, strategy, child) {\n        if (COMPATIBILITY.isA(child)) {\n          for (var i = 0; i < child[LEXICON.l]; i++) {\n            insertAdjacentElement(el, strategy, child[i]);\n          }\n        } else if (_type(child) == TYPES.s) el.insertAdjacentHTML(strategy, child);else el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\n      }\n\n      function setCSSVal(el, prop, val) {\n        try {\n          if (el[LEXICON.s][prop] !== undefined$1) el[LEXICON.s][prop] = parseCSSVal(prop, val);\n        } catch (e) {}\n      }\n\n      function parseCSSVal(prop, val) {\n        if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n) val += 'px';\n        return val;\n      }\n\n      function startNextAnimationInQ(animObj, removeFromQ) {\n        var index;\n        var nextAnim;\n        if (removeFromQ !== false) animObj.q.splice(0, 1);\n\n        if (animObj.q[LEXICON.l] > 0) {\n          nextAnim = animObj.q[0];\n\n          _animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\n        } else {\n          index = inArray(animObj, _animations);\n          if (index > -1) _animations.splice(index, 1);\n        }\n      }\n\n      function setAnimationValue(el, prop, value) {\n        if (prop === _strScrollLeft || prop === _strScrollTop) el[prop] = value;else setCSSVal(el, prop, value);\n      }\n\n      function _animate(el, props, options, easing, complete, guaranteedNext) {\n        var hasOptions = isPlainObject(options);\n        var from = {};\n        var to = {};\n        var i = 0;\n        var key;\n        var animObj;\n        var progress;\n        var step;\n        var specialEasing;\n        var duration;\n\n        if (hasOptions) {\n          easing = options.easing;\n          progress = options.progress;\n          step = options.step;\n          specialEasing = options.specialEasing;\n          complete = options.complete;\n          duration = options.duration;\n        } else duration = options;\n\n        specialEasing = specialEasing || {};\n        duration = duration || 400;\n        easing = easing || 'swing';\n        guaranteedNext = guaranteedNext || false;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          if (_animations[i].el === el) {\n            animObj = _animations[i];\n            break;\n          }\n        }\n\n        if (!animObj) {\n          animObj = {\n            el: el,\n            q: []\n          };\n\n          _animations.push(animObj);\n        }\n\n        for (key in props) {\n          if (key === _strScrollLeft || key === _strScrollTop) from[key] = el[key];else from[key] = FakejQuery(el).css(key);\n        }\n\n        for (key in from) {\n          if (from[key] !== props[key] && props[key] !== undefined$1) to[key] = props[key];\n        }\n\n        if (!isEmptyObject(to)) {\n          var timeNow;\n          var end;\n          var percent;\n          var fromVal;\n          var toVal;\n          var easedVal;\n          var timeStart;\n\n          var _frame;\n\n          var elapsed;\n          var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\n          var qObj = {\n            props: to,\n            duration: hasOptions ? options : duration,\n            easing: easing,\n            complete: complete\n          };\n\n          if (qPos === -1) {\n            qPos = animObj.q[LEXICON.l];\n            animObj.q.push(qObj);\n          }\n\n          if (qPos === 0) {\n            if (duration > 0) {\n              timeStart = COMPATIBILITY.now();\n\n              _frame = function frame() {\n                timeNow = COMPATIBILITY.now();\n                elapsed = timeNow - timeStart;\n                end = qObj.stop || elapsed >= duration;\n                percent = 1 - (MATH.max(0, timeStart + duration - timeNow) / duration || 0);\n\n                for (key in to) {\n                  fromVal = parseFloat(from[key]);\n                  toVal = parseFloat(to[key]);\n                  easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\n                  setAnimationValue(el, key, easedVal);\n\n                  if (isFunction(step)) {\n                    step(easedVal, {\n                      elem: el,\n                      prop: key,\n                      start: fromVal,\n                      now: easedVal,\n                      end: toVal,\n                      pos: percent,\n                      options: {\n                        easing: easing,\n                        speacialEasing: specialEasing,\n                        duration: duration,\n                        complete: complete,\n                        step: step\n                      },\n                      startTime: timeStart\n                    });\n                  }\n                }\n\n                if (isFunction(progress)) progress({}, percent, MATH.max(0, duration - elapsed));\n\n                if (end) {\n                  startNextAnimationInQ(animObj);\n                  if (isFunction(complete)) complete();\n                } else qObj.frame = COMPATIBILITY.rAF()(_frame);\n              };\n\n              qObj.frame = COMPATIBILITY.rAF()(_frame);\n            } else {\n              for (key in to) {\n                setAnimationValue(el, key, to[key]);\n              }\n\n              startNextAnimationInQ(animObj);\n            }\n          }\n        } else if (guaranteedNext) startNextAnimationInQ(animObj);\n      }\n\n      function _stop(el, clearQ, jumpToEnd) {\n        var animObj;\n        var qObj;\n        var key;\n        var i = 0;\n\n        for (; i < _animations[LEXICON.l]; i++) {\n          animObj = _animations[i];\n\n          if (animObj.el === el) {\n            if (animObj.q[LEXICON.l] > 0) {\n              qObj = animObj.q[0];\n              qObj.stop = true;\n              COMPATIBILITY.cAF()(qObj.frame);\n              animObj.q.splice(0, 1);\n              if (jumpToEnd) for (key in qObj.props) {\n                setAnimationValue(el, key, qObj.props[key]);\n              }\n              if (clearQ) animObj.q = [];else startNextAnimationInQ(animObj, false);\n            }\n\n            break;\n          }\n        }\n      }\n\n      function elementIsVisible(el) {\n        return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\n      }\n\n      function FakejQuery(selector) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var base = new FakejQuery();\n        var elements = selector;\n        var i = 0;\n        var elms;\n        var el;\n\n        if (_type(selector) == TYPES.s) {\n          elements = [];\n\n          if (selector.charAt(0) === '<') {\n            el = document.createElement('div');\n            el.innerHTML = selector;\n            elms = el.children;\n          } else {\n            elms = document.querySelectorAll(selector);\n          }\n\n          for (; i < elms[LEXICON.l]; i++) {\n            elements.push(elms[i]);\n          }\n        }\n\n        if (elements) {\n          if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self)) elements = [elements];\n\n          for (i = 0; i < elements[LEXICON.l]; i++) {\n            base[i] = elements[i];\n          }\n\n          base[LEXICON.l] = elements[LEXICON.l];\n        }\n\n        return base;\n      }\n\n      FakejQuery[LEXICON.p] = {\n        //EVENTS:\n        on: function on(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.addEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.addEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.attachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        off: function off(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          var eventNameLength = eventName[LEXICON.l];\n          var i = 0;\n          var el;\n          return this.each(function () {\n            el = this;\n\n            try {\n              if (el.removeEventListener) {\n                for (; i < eventNameLength; i++) {\n                  el.removeEventListener(eventName[i], handler);\n                }\n              } else if (el.detachEvent) {\n                for (; i < eventNameLength; i++) {\n                  el.detachEvent('on' + eventName[i], handler);\n                }\n              }\n            } catch (e) {}\n          });\n        },\n        one: function one(eventName, handler) {\n          eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\n          return this.each(function () {\n            var el = FakejQuery(this);\n            FakejQuery.each(eventName, function (i, oneEventName) {\n              var oneHandler = function oneHandler(e) {\n                handler.call(this, e);\n                el.off(oneEventName, oneHandler);\n              };\n\n              el.on(oneEventName, oneHandler);\n            });\n          });\n        },\n        trigger: function trigger(eventName) {\n          var el;\n          var event;\n          return this.each(function () {\n            el = this;\n\n            if (document.createEvent) {\n              event = document.createEvent('HTMLEvents');\n              event.initEvent(eventName, true, false);\n              el.dispatchEvent(event);\n            } else {\n              el.fireEvent('on' + eventName);\n            }\n          });\n        },\n        //DOM NODE INSERTING / REMOVING:\n        append: function append(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforeend', child);\n          });\n        },\n        prepend: function prepend(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterbegin', child);\n          });\n        },\n        before: function before(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'beforebegin', child);\n          });\n        },\n        after: function after(child) {\n          return this.each(function () {\n            insertAdjacentElement(this, 'afterend', child);\n          });\n        },\n        remove: function remove() {\n          return this.each(function () {\n            var el = this;\n            var parentNode = el.parentNode;\n            if (parentNode != null) parentNode.removeChild(el);\n          });\n        },\n        unwrap: function unwrap() {\n          var parents = [];\n          var i;\n          var el;\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (inArray(parent, parents) === -1) parents.push(parent);\n          });\n\n          for (i = 0; i < parents[LEXICON.l]; i++) {\n            el = parents[i];\n            parent = el.parentNode;\n\n            while (el.firstChild) {\n              parent.insertBefore(el.firstChild, el);\n            }\n\n            parent.removeChild(el);\n          }\n\n          return this;\n        },\n        wrapAll: function wrapAll(wrapperHTML) {\n          var i;\n          var nodes = this;\n          var wrapper = FakejQuery(wrapperHTML)[0];\n          var deepest = wrapper;\n          var parent = nodes[0].parentNode;\n          var previousSibling = nodes[0].previousSibling;\n\n          while (deepest.childNodes[LEXICON.l] > 0) {\n            deepest = deepest.childNodes[0];\n          }\n\n          for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++) {\n            deepest.appendChild(nodes[i]);\n          }\n\n          var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\n          parent.insertBefore(wrapper, nextSibling);\n          return this;\n        },\n        wrapInner: function wrapInner(wrapperHTML) {\n          return this.each(function () {\n            var el = FakejQuery(this);\n            var contents = el.contents();\n            if (contents[LEXICON.l]) contents.wrapAll(wrapperHTML);else el.append(wrapperHTML);\n          });\n        },\n        wrap: function wrap(wrapperHTML) {\n          return this.each(function () {\n            FakejQuery(this).wrapAll(wrapperHTML);\n          });\n        },\n        //DOM NODE MANIPULATION / INFORMATION:\n        css: function css(styles, val) {\n          var el;\n          var key;\n          var cptStyle;\n          var getCptStyle = window.getComputedStyle;\n\n          if (_type(styles) == TYPES.s) {\n            if (val === undefined$1) {\n              el = this[0];\n              cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles]; //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\n\n              return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\n            } else {\n              return this.each(function () {\n                setCSSVal(this, styles, val);\n              });\n            }\n          } else {\n            return this.each(function () {\n              for (key in styles) {\n                setCSSVal(this, key, styles[key]);\n              }\n            });\n          }\n        },\n        hasClass: function hasClass(className) {\n          var elem,\n              i = 0;\n          var classNamePrepared = _strSpace + className + _strSpace;\n          var classList;\n\n          while (elem = this[i++]) {\n            classList = elem.classList;\n            if (classList && classList.contains(className)) return true;else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1) return true;\n          }\n\n          return false;\n        },\n        addClass: function addClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.add(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    if (cur.indexOf(_strSpace + clazz + _strSpace) < 0) cur += clazz + _strSpace;\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        removeClass: function removeClass(className) {\n          var classes;\n          var elem;\n          var cur;\n          var curValue;\n          var clazz;\n          var finalValue;\n          var supportClassList;\n          var elmClassList;\n          var i = 0;\n          var v = 0;\n\n          if (className) {\n            classes = className.match(_rnothtmlwhite) || [];\n\n            while (elem = this[i++]) {\n              elmClassList = elem.classList;\n              if (supportClassList === undefined$1) supportClassList = elmClassList !== undefined$1;\n\n              if (supportClassList) {\n                while (clazz = classes[v++]) {\n                  elmClassList.remove(clazz);\n                }\n              } else {\n                curValue = elem.className + _strEmpty;\n                cur = elem.nodeType === 1 && _strSpace + stripAndCollapse(curValue) + _strSpace;\n\n                if (cur) {\n                  while (clazz = classes[v++]) {\n                    while (cur.indexOf(_strSpace + clazz + _strSpace) > -1) {\n                      cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\n                    }\n                  }\n\n                  finalValue = stripAndCollapse(cur);\n                  if (curValue !== finalValue) elem.className = finalValue;\n                }\n              }\n            }\n          }\n\n          return this;\n        },\n        hide: function hide() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'none';\n          });\n        },\n        show: function show() {\n          return this.each(function () {\n            this[LEXICON.s].display = 'block';\n          });\n        },\n        attr: function attr(attrName, value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el.getAttribute(attrName);\n            el.setAttribute(attrName, value);\n          }\n\n          return this;\n        },\n        removeAttr: function removeAttr(attrName) {\n          return this.each(function () {\n            this.removeAttribute(attrName);\n          });\n        },\n        offset: function offset() {\n          var el = this[0];\n          var rect = el[LEXICON.bCR]();\n          var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\n          var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\n          return {\n            top: rect.top + scrollTop,\n            left: rect.left + scrollLeft\n          };\n        },\n        position: function position() {\n          var el = this[0];\n          return {\n            top: el.offsetTop,\n            left: el.offsetLeft\n          };\n        },\n        scrollLeft: function scrollLeft(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollLeft];\n            el[_strScrollLeft] = value;\n          }\n\n          return this;\n        },\n        scrollTop: function scrollTop(value) {\n          var i = 0;\n          var el;\n\n          while (el = this[i++]) {\n            if (value === undefined$1) return el[_strScrollTop];\n            el[_strScrollTop] = value;\n          }\n\n          return this;\n        },\n        val: function val(value) {\n          var el = this[0];\n          if (!value) return el.value;\n          el.value = value;\n          return this;\n        },\n        //DOM TRAVERSAL / FILTERING:\n        first: function first() {\n          return this.eq(0);\n        },\n        last: function last() {\n          return this.eq(-1);\n        },\n        eq: function eq(index) {\n          return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\n        },\n        find: function find(selector) {\n          var children = [];\n          var i;\n          this.each(function () {\n            var el = this;\n            var ch = el.querySelectorAll(selector);\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              children.push(ch[i]);\n            }\n          });\n          return FakejQuery(children);\n        },\n        children: function children(selector) {\n          var children = [];\n          var el;\n          var ch;\n          var i;\n          this.each(function () {\n            ch = this.children;\n\n            for (i = 0; i < ch[LEXICON.l]; i++) {\n              el = ch[i];\n\n              if (selector) {\n                if (el.matches && el.matches(selector) || matches(el, selector)) children.push(el);\n              } else children.push(el);\n            }\n          });\n          return FakejQuery(children);\n        },\n        parent: function parent(selector) {\n          var parents = [];\n          var parent;\n          this.each(function () {\n            parent = this.parentNode;\n            if (selector ? FakejQuery(parent).is(selector) : true) parents.push(parent);\n          });\n          return FakejQuery(parents);\n        },\n        is: function is(selector) {\n          var el;\n          var i;\n\n          for (i = 0; i < this[LEXICON.l]; i++) {\n            el = this[i];\n            if (selector === ':visible') return elementIsVisible(el);\n            if (selector === ':hidden') return !elementIsVisible(el);\n            if (el.matches && el.matches(selector) || matches(el, selector)) return true;\n          }\n\n          return false;\n        },\n        contents: function contents() {\n          var contents = [];\n          var childs;\n          var i;\n          this.each(function () {\n            childs = this.childNodes;\n\n            for (i = 0; i < childs[LEXICON.l]; i++) {\n              contents.push(childs[i]);\n            }\n          });\n          return FakejQuery(contents);\n        },\n        each: function each(callback) {\n          return _each(this, callback);\n        },\n        //ANIMATION:\n        animate: function animate(props, duration, easing, complete) {\n          return this.each(function () {\n            _animate(this, props, duration, easing, complete);\n          });\n        },\n        stop: function stop(clearQ, jump) {\n          return this.each(function () {\n            _stop(this, clearQ, jump);\n          });\n        }\n      };\n      extend(FakejQuery, {\n        extend: extend,\n        inArray: inArray,\n        isEmptyObject: isEmptyObject,\n        isPlainObject: isPlainObject,\n        each: _each\n      });\n      return FakejQuery;\n    }();\n\n    var INSTANCES = function () {\n      var _targets = [];\n      var _instancePropertyString = '__overlayScrollbars__';\n      /**\r\n       * Register, unregister or get a certain (or all) instances.\r\n       * Register: Pass the target and the instance.\r\n       * Unregister: Pass the target and null.\r\n       * Get Instance: Pass the target from which the instance shall be got.\r\n       * Get Targets: Pass no arguments.\r\n       * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n       * @param instance The instance.\r\n       * @returns {*|void} Returns the instance from the given target.\r\n       */\n\n      return function (target, instance) {\n        var argLen = arguments[LEXICON.l];\n\n        if (argLen < 1) {\n          //return all targets\n          return _targets;\n        } else {\n          if (instance) {\n            //register instance\n            target[_instancePropertyString] = instance;\n\n            _targets.push(target);\n          } else {\n            var index = COMPATIBILITY.inA(target, _targets);\n\n            if (index > -1) {\n              if (argLen > 1) {\n                //unregister instance\n                delete target[_instancePropertyString];\n\n                _targets.splice(index, 1);\n              } else {\n                //get instance from target\n                return _targets[index][_instancePropertyString];\n              }\n            }\n          }\n        }\n      };\n    }();\n\n    var PLUGIN = function () {\n      var _plugin;\n\n      var _pluginsGlobals;\n\n      var _pluginsAutoUpdateLoop;\n\n      var _pluginsExtensions = [];\n\n      var _pluginsOptions = function () {\n        var type = COMPATIBILITY.type;\n        var possibleTemplateTypes = [TYPES.b, //boolean\n        TYPES.n, //number\n        TYPES.s, //string\n        TYPES.a, //array\n        TYPES.o, //object\n        TYPES.f, //function\n        TYPES.z //null\n        ];\n        var restrictedStringsSplit = ' ';\n        var restrictedStringsPossibilitiesSplit = ':';\n        var classNameAllowedValues = [TYPES.z, TYPES.s];\n        var numberAllowedValues = TYPES.n;\n        var booleanNullAllowedValues = [TYPES.z, TYPES.b];\n        var booleanTrueTemplate = [true, TYPES.b];\n        var booleanFalseTemplate = [false, TYPES.b];\n        var callbackTemplate = [null, [TYPES.z, TYPES.f]];\n        var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\n        var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\n        var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\n        var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\n        var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\n        var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\n        var optionsDefaultsAndTemplate = {\n          className: ['os-theme-dark', classNameAllowedValues],\n          //null || string\n          resize: ['none', resizeAllowedValues],\n          //none || both  || horizontal || vertical || n || b || h || v\n          sizeAutoCapable: booleanTrueTemplate,\n          //true || false\n          clipAlways: booleanTrueTemplate,\n          //true || false\n          normalizeRTL: booleanTrueTemplate,\n          //true || false\n          paddingAbsolute: booleanFalseTemplate,\n          //true || false\n          autoUpdate: [null, booleanNullAllowedValues],\n          //true || false || null\n          autoUpdateInterval: [33, numberAllowedValues],\n          //number\n          updateOnLoad: updateOnLoadTemplate,\n          //string || array || null\n          nativeScrollbarsOverlaid: {\n            showNativeScrollbars: booleanFalseTemplate,\n            //true || false\n            initialize: booleanTrueTemplate //true || false\n\n          },\n          overflowBehavior: {\n            x: ['scroll', overflowBehaviorAllowedValues],\n            //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n            y: ['scroll', overflowBehaviorAllowedValues] //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\n\n          },\n          scrollbars: {\n            visibility: ['auto', scrollbarsVisibilityAllowedValues],\n            //visible || hidden || auto || v || h || a\n            autoHide: ['never', scrollbarsAutoHideAllowedValues],\n            //never || scroll || leave || move || n || s || l || m\n            autoHideDelay: [800, numberAllowedValues],\n            //number\n            dragScrolling: booleanTrueTemplate,\n            //true || false\n            clickScrolling: booleanFalseTemplate,\n            //true || false\n            touchSupport: booleanTrueTemplate,\n            //true || false\n            snapHandle: booleanFalseTemplate //true || false\n\n          },\n          textarea: {\n            dynWidth: booleanFalseTemplate,\n            //true || false\n            dynHeight: booleanFalseTemplate,\n            //true || false\n            inheritedAttrs: inheritedAttrsTemplate //string || array || null\n\n          },\n          callbacks: {\n            onInitialized: callbackTemplate,\n            //null || function\n            onInitializationWithdrawn: callbackTemplate,\n            //null || function\n            onDestroyed: callbackTemplate,\n            //null || function\n            onScrollStart: callbackTemplate,\n            //null || function\n            onScroll: callbackTemplate,\n            //null || function\n            onScrollStop: callbackTemplate,\n            //null || function\n            onOverflowChanged: callbackTemplate,\n            //null || function\n            onOverflowAmountChanged: callbackTemplate,\n            //null || function\n            onDirectionChanged: callbackTemplate,\n            //null || function\n            onContentSizeChanged: callbackTemplate,\n            //null || function\n            onHostSizeChanged: callbackTemplate,\n            //null || function\n            onUpdated: callbackTemplate //null || function\n\n          }\n        };\n\n        var convert = function convert(template) {\n          var recursive = function recursive(obj) {\n            var key;\n            var val;\n            var valType;\n\n            for (key in obj) {\n              if (!obj[LEXICON.hOP](key)) continue;\n              val = obj[key];\n              valType = type(val);\n              if (valType == TYPES.a) obj[key] = val[template ? 1 : 0];else if (valType == TYPES.o) obj[key] = recursive(val);\n            }\n\n            return obj;\n          };\n\n          return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\n        };\n\n        return {\n          _defaults: convert(),\n          _template: convert(true),\n\n          /**\r\n           * Validates the passed object by the passed template.\r\n           * @param obj The object which shall be validated.\r\n           * @param template The template which defines the allowed values and types.\r\n           * @param writeErrors True if errors shall be logged to the console.\r\n           * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n           * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n           */\n          _validate: function _validate(obj, template, writeErrors, diffObj) {\n            var validatedOptions = {};\n            var validatedOptionsPrepared = {};\n            var objectCopy = FRAMEWORK.extend(true, {}, obj);\n            var inArray = FRAMEWORK.inArray;\n            var isEmptyObj = FRAMEWORK.isEmptyObject;\n\n            var checkObjectProps = function checkObjectProps(data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\n              for (var prop in template) {\n                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\n                  var isValid = false;\n                  var isDiff = false;\n                  var templateValue = template[prop];\n                  var templateValueType = type(templateValue);\n                  var templateIsComplex = templateValueType == TYPES.o;\n                  var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\n                  var dataDiffValue = diffData[prop];\n                  var dataValue = data[prop];\n                  var dataValueType = type(dataValue);\n                  var propPrefix = prevPropName ? prevPropName + '.' : '';\n                  var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\n                  var errorPossibleTypes = [];\n                  var errorRestrictedStrings = [];\n                  var restrictedStringValuesSplit;\n                  var restrictedStringValuesPossibilitiesSplit;\n                  var isRestrictedValue;\n                  var mainPossibility;\n                  var currType;\n                  var i;\n                  var v;\n                  var j;\n                  dataDiffValue = dataDiffValue === undefined$1 ? {} : dataDiffValue; //if the template has a object as value, it means that the options are complex (verschachtelt)\n\n                  if (templateIsComplex && dataValueType == TYPES.o) {\n                    validatedOptions[prop] = {};\n                    validatedOptionsPrepared[prop] = {};\n                    checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\n                    FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\n                      if (isEmptyObj(value[prop])) {\n                        delete value[prop];\n                      }\n                    });\n                  } else if (!templateIsComplex) {\n                    for (i = 0; i < templateTypes[LEXICON.l]; i++) {\n                      currType = templateTypes[i];\n                      templateValueType = type(currType); //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\n\n                      isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\n\n                      if (isRestrictedValue) {\n                        errorPossibleTypes.push(TYPES.s); //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\n\n                        restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\n                        errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\n\n                        for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\n                          //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\n                          restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\n                          mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\n\n                          for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\n                            //if any possibility matches with the dataValue, its valid\n                            if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\n                              isValid = true;\n                              break;\n                            }\n                          }\n\n                          if (isValid) break;\n                        }\n                      } else {\n                        errorPossibleTypes.push(currType);\n\n                        if (dataValueType === currType) {\n                          isValid = true;\n                          break;\n                        }\n                      }\n                    }\n\n                    if (isValid) {\n                      isDiff = dataValue !== dataDiffValue;\n                      if (isDiff) validatedOptions[prop] = dataValue;\n                      if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff) validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\n                    } else if (writeErrors) {\n                      console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" + \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" + (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\n                    }\n\n                    delete data[prop];\n                  }\n                }\n              }\n            };\n\n            checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared); //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\n\n            /*\r\n            if(keepForeignProps) {\r\n                FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n            }\r\n            */\n\n            if (!isEmptyObj(objectCopy) && writeErrors) console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\n            return {\n              _default: validatedOptions,\n              _prepared: validatedOptionsPrepared\n            };\n          }\n        };\n      }();\n      /**\r\n       * Initializes the object which contains global information about the plugin and each instance of it.\r\n       */\n\n\n      function initOverlayScrollbarsStatics() {\n        if (!_pluginsGlobals) _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\n        if (!_pluginsAutoUpdateLoop) _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\n      }\n      /**\r\n       * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @param defaultOptions\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsGlobals(defaultOptions) {\n        var _base = this;\n\n        var strOverflow = 'overflow';\n        var strHidden = 'hidden';\n        var strScroll = 'scroll';\n        var bodyElement = FRAMEWORK('body');\n        var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\n        var scrollbarDummyElement0 = scrollbarDummyElement[0];\n        var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\n        bodyElement.append(scrollbarDummyElement);\n        scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\n\n        var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\n        var nativeScrollbarIsOverlaid = {\n          x: nativeScrollbarSize.x === 0,\n          y: nativeScrollbarSize.y === 0\n        };\n\n        var msie = function () {\n          var ua = window.navigator.userAgent;\n          var strIndexOf = 'indexOf';\n          var strSubString = 'substring';\n          var msie = ua[strIndexOf]('MSIE ');\n          var trident = ua[strIndexOf]('Trident/');\n          var edge = ua[strIndexOf]('Edge/');\n          var rv = ua[strIndexOf]('rv:');\n          var result;\n          var parseIntFunc = parseInt; // IE 10 or older => return version number\n\n          if (msie > 0) result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10); // IE 11 => return version number\n          else if (trident > 0) result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10); // Edge (IE 12+) => return version number\n          else if (edge > 0) result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10); // other browser\n\n          return result;\n        }();\n\n        FRAMEWORK.extend(_base, {\n          defaultOptions: defaultOptions,\n          msie: msie,\n          autoUpdateLoop: false,\n          autoUpdateRecommended: !COMPATIBILITY.mO(),\n          nativeScrollbarSize: nativeScrollbarSize,\n          nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\n          nativeScrollbarStyling: function () {\n            var result = false;\n            scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\n\n            try {\n              result = scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\n            } catch (ex) {} //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\n            //and set overflow to scroll\n            //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\n            //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\n\n\n            return result;\n          }(),\n          overlayScrollbarDummySize: {\n            x: 30,\n            y: 30\n          },\n          cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\n          restrictedMeasuring: function () {\n            //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\n            //since 1.11.0 always false -> fixed via CSS (hopefully)\n            scrollbarDummyElement.css(strOverflow, strHidden);\n            var scrollSize = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            scrollbarDummyElement.css(strOverflow, 'visible');\n            var scrollSize2 = {\n              w: scrollbarDummyElement0[LEXICON.sW],\n              h: scrollbarDummyElement0[LEXICON.sH]\n            };\n            return scrollSize.w - scrollSize2.w !== 0 || scrollSize.h - scrollSize2.h !== 0;\n          }(),\n          rtlScrollBehavior: function () {\n            scrollbarDummyElement.css({\n              'overflow-y': strHidden,\n              'overflow-x': strScroll,\n              'direction': 'rtl'\n            }).scrollLeft(0);\n            var dummyContainerOffset = scrollbarDummyElement.offset();\n            var dummyContainerChildOffset = dummyContainerChild.offset(); //https://github.com/KingSora/OverlayScrollbars/issues/187\n\n            scrollbarDummyElement.scrollLeft(-999);\n            var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\n            return {\n              //origin direction = determines if the zero scroll position is on the left or right side\n              //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\n              //true = on the left side\n              //false = on the right side\n              i: dummyContainerOffset.left === dummyContainerChildOffset.left,\n              //negative = determines if the maximum scroll is positive or negative\n              //'n' means 'negate' (n === true means that the axis must be negated to be correct)\n              //true = negative\n              //false = positive\n              n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\n            };\n          }(),\n          supportTransform: !!VENDORS._cssProperty('transform'),\n          supportTransition: !!VENDORS._cssProperty('transition'),\n          supportPassiveEvents: function () {\n            var supportsPassive = false;\n\n            try {\n              window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: function get() {\n                  supportsPassive = true;\n                }\n              }));\n            } catch (e) {}\n\n            return supportsPassive;\n          }(),\n          supportResizeObserver: !!COMPATIBILITY.rO(),\n          supportMutationObserver: !!COMPATIBILITY.mO()\n        });\n        scrollbarDummyElement.removeAttr(LEXICON.s).remove(); //Catch zoom event:\n\n        (function () {\n          if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y) return;\n          var abs = MATH.abs;\n          var windowWidth = COMPATIBILITY.wW();\n          var windowHeight = COMPATIBILITY.wH();\n          var windowDpr = getWindowDPR();\n\n          var onResize = function onResize() {\n            if (INSTANCES().length > 0) {\n              var newW = COMPATIBILITY.wW();\n              var newH = COMPATIBILITY.wH();\n              var deltaW = newW - windowWidth;\n              var deltaH = newH - windowHeight;\n              if (deltaW === 0 && deltaH === 0) return;\n              var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\n              var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\n              var absDeltaW = abs(deltaW);\n              var absDeltaH = abs(deltaH);\n              var absDeltaWRatio = abs(deltaWRatio);\n              var absDeltaHRatio = abs(deltaHRatio);\n              var newDPR = getWindowDPR();\n              var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\n              var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\n              var dprChanged = newDPR !== windowDpr && windowDpr > 0;\n              var isZoom = deltaIsBigger && difference && dprChanged;\n              var oldScrollbarSize = _base.nativeScrollbarSize;\n              var newScrollbarSize;\n\n              if (isZoom) {\n                bodyElement.append(scrollbarDummyElement);\n                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\n                scrollbarDummyElement.remove();\n\n                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\n                  FRAMEWORK.each(INSTANCES(), function () {\n                    if (INSTANCES(this)) INSTANCES(this).update('zoom');\n                  });\n                }\n              }\n\n              windowWidth = newW;\n              windowHeight = newH;\n              windowDpr = newDPR;\n            }\n          };\n\n          function differenceIsBiggerThanOne(valOne, valTwo) {\n            var absValOne = abs(valOne);\n            var absValTwo = abs(valTwo);\n            return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\n          }\n\n          function getWindowDPR() {\n            var dDPI = window.screen.deviceXDPI || 0;\n            var sDPI = window.screen.logicalXDPI || 1;\n            return window.devicePixelRatio || dDPI / sDPI;\n          }\n\n          FRAMEWORK(window).on('resize', onResize);\n        })();\n\n        function calcNativeScrollbarSize(measureElement) {\n          return {\n            x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\n            y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\n          };\n        }\n      }\n      /**\r\n       * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsAutoUpdateLoop(globals) {\n        var _base = this;\n\n        var _inArray = FRAMEWORK.inArray;\n        var _getNow = COMPATIBILITY.now;\n        var _strAutoUpdate = 'autoUpdate';\n\n        var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\n\n        var _strLength = LEXICON.l;\n        var _loopingInstances = [];\n        var _loopingInstancesIntervalCache = [];\n        var _loopIsActive = false;\n        var _loopIntervalDefault = 33;\n        var _loopInterval = _loopIntervalDefault;\n\n        var _loopTimeOld = _getNow();\n\n        var _loopID;\n        /**\r\n         * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n         */\n\n\n        var loop = function loop() {\n          if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\n            _loopID = COMPATIBILITY.rAF()(function () {\n              loop();\n            });\n\n            var timeNew = _getNow();\n\n            var timeDelta = timeNew - _loopTimeOld;\n            var lowestInterval;\n            var instance;\n            var instanceOptions;\n            var instanceAutoUpdateAllowed;\n            var instanceAutoUpdateInterval;\n            var now;\n\n            if (timeDelta > _loopInterval) {\n              _loopTimeOld = timeNew - timeDelta % _loopInterval;\n              lowestInterval = _loopIntervalDefault;\n\n              for (var i = 0; i < _loopingInstances[_strLength]; i++) {\n                instance = _loopingInstances[i];\n\n                if (instance !== undefined$1) {\n                  instanceOptions = instance.options();\n                  instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\n                  instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\n                  now = _getNow();\n\n                  if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && now - _loopingInstancesIntervalCache[i] > instanceAutoUpdateInterval) {\n                    instance.update('auto');\n                    _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\n                  }\n\n                  lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\n                }\n              }\n\n              _loopInterval = lowestInterval;\n            }\n          } else {\n            _loopInterval = _loopIntervalDefault;\n          }\n        };\n        /**\r\n         * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.add = function (instance) {\n          if (_inArray(instance, _loopingInstances) === -1) {\n            _loopingInstances.push(instance);\n\n            _loopingInstancesIntervalCache.push(_getNow());\n\n            if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\n              _loopIsActive = true;\n              globals.autoUpdateLoop = _loopIsActive;\n              loop();\n            }\n          }\n        };\n        /**\r\n         * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n         * @param instance The instance which shall be updated in a loop automatically.\r\n         */\n\n\n        _base.remove = function (instance) {\n          var index = _inArray(instance, _loopingInstances);\n\n          if (index > -1) {\n            //remove from loopingInstances list\n            _loopingInstancesIntervalCache.splice(index, 1);\n\n            _loopingInstances.splice(index, 1); //correct update loop behavior\n\n\n            if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\n              _loopIsActive = false;\n              globals.autoUpdateLoop = _loopIsActive;\n\n              if (_loopID !== undefined$1) {\n                COMPATIBILITY.cAF()(_loopID);\n                _loopID = -1;\n              }\n            }\n          }\n        };\n      }\n      /**\r\n       * A object which manages the scrollbars visibility of the target element.\r\n       * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n       * @param options The custom options.\r\n       * @param extensions The custom extensions.\r\n       * @param globals\r\n       * @param autoUpdateLoop\r\n       * @returns {*}\r\n       * @constructor\r\n       */\n\n\n      function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\n        //shortcuts\n        var type = COMPATIBILITY.type;\n        var inArray = FRAMEWORK.inArray;\n        var each = FRAMEWORK.each; //make correct instanceof\n\n        var _base = new _plugin();\n\n        var _frameworkProto = FRAMEWORK[LEXICON.p]; //if passed element is no HTML element: skip and return\n\n        if (!isHTMLElement(pluginTargetElement)) return; //if passed element is already initialized: set passed options if there are any and return its instance\n\n        if (INSTANCES(pluginTargetElement)) {\n          var inst = INSTANCES(pluginTargetElement);\n          inst.options(options);\n          return inst;\n        } //globals:\n\n\n        var _nativeScrollbarIsOverlaid;\n\n        var _overlayScrollbarDummySize;\n\n        var _rtlScrollBehavior;\n\n        var _autoUpdateRecommended;\n\n        var _msieVersion;\n\n        var _nativeScrollbarStyling;\n\n        var _cssCalc;\n\n        var _nativeScrollbarSize;\n\n        var _supportTransition;\n\n        var _supportTransform;\n\n        var _supportPassiveEvents;\n\n        var _supportResizeObserver;\n\n        var _supportMutationObserver;\n\n        var _initialized;\n\n        var _destroyed;\n\n        var _isTextarea;\n\n        var _isBody;\n\n        var _documentMixed;\n\n        var _domExists; //general:\n\n\n        var _isBorderBox;\n\n        var _sizeAutoObserverAdded;\n\n        var _paddingX;\n\n        var _paddingY;\n\n        var _borderX;\n\n        var _borderY;\n\n        var _marginX;\n\n        var _marginY;\n\n        var _isRTL;\n\n        var _sleeping;\n\n        var _contentBorderSize = {};\n        var _scrollHorizontalInfo = {};\n        var _scrollVerticalInfo = {};\n        var _viewportSize = {};\n        var _nativeScrollbarMinSize = {}; //naming:\t\n\n        var _strMinusHidden = '-hidden';\n        var _strMarginMinus = 'margin-';\n        var _strPaddingMinus = 'padding-';\n        var _strBorderMinus = 'border-';\n        var _strTop = 'top';\n        var _strRight = 'right';\n        var _strBottom = 'bottom';\n        var _strLeft = 'left';\n        var _strMinMinus = 'min-';\n        var _strMaxMinus = 'max-';\n        var _strWidth = 'width';\n        var _strHeight = 'height';\n        var _strFloat = 'float';\n        var _strEmpty = '';\n        var _strAuto = 'auto';\n        var _strSync = 'sync';\n        var _strScroll = 'scroll';\n        var _strHundredPercent = '100%';\n        var _strX = 'x';\n        var _strY = 'y';\n        var _strDot = '.';\n        var _strSpace = ' ';\n        var _strScrollbar = 'scrollbar';\n        var _strMinusHorizontal = '-horizontal';\n        var _strMinusVertical = '-vertical';\n\n        var _strScrollLeft = _strScroll + 'Left';\n\n        var _strScrollTop = _strScroll + 'Top';\n\n        var _strMouseTouchDownEvent = 'mousedown touchstart';\n        var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\n        var _strMouseTouchMoveEvent = 'mousemove touchmove';\n        var _strMouseEnter = 'mouseenter';\n        var _strMouseLeave = 'mouseleave';\n        var _strKeyDownEvent = 'keydown';\n        var _strKeyUpEvent = 'keyup';\n        var _strSelectStartEvent = 'selectstart';\n        var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\n        var _strResizeObserverProperty = '__overlayScrollbarsRO__'; //class names:\t\n\n        var _cassNamesPrefix = 'os-';\n\n        var _classNameHTMLElement = _cassNamesPrefix + 'html';\n\n        var _classNameHostElement = _cassNamesPrefix + 'host';\n\n        var _classNameHostElementForeign = _classNameHostElement + '-foreign';\n\n        var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\n\n        var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\n\n        var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\n\n        var _classNameHostTransition = _classNameHostElement + '-transition';\n\n        var _classNameHostRTL = _classNameHostElement + '-rtl';\n\n        var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\n\n        var _classNameHostScrolling = _classNameHostElement + '-scrolling';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflow = _classNameHostElement + '-overflow';\n\n        var _classNameHostOverflowX = _classNameHostOverflow + '-x';\n\n        var _classNameHostOverflowY = _classNameHostOverflow + '-y';\n\n        var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\n\n        var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\n\n        var _classNamePaddingElement = _cassNamesPrefix + 'padding';\n\n        var _classNameViewportElement = _cassNamesPrefix + 'viewport';\n\n        var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\n\n        var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\n\n        var _classNameContentElement = _cassNamesPrefix + 'content';\n\n        var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\n\n        var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\n\n        var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\n\n        var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\n\n        var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\n\n        var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\n\n        var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\n\n        var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\n\n        var _classNameScrollbarTrack = _classNameScrollbar + '-track';\n\n        var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\n\n        var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\n\n        var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\n\n        var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\n\n        var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\n\n        var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\n\n        var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\n\n        var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\n\n        var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\n\n        var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\n\n        var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\n\n        var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\n\n        var _classNameDragging = _cassNamesPrefix + 'dragging';\n\n        var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\n\n        var _classNamesDynamicDestroy = [_classNameViewportNativeScrollbarsInvisible, _classNameViewportNativeScrollbarsOverlaid, _classNameScrollbarTrackOff, _classNameScrollbarHandleOff, _classNameScrollbarUnusable, _classNameScrollbarAutoHidden, _classNameScrollbarCornerResize, _classNameScrollbarCornerResizeB, _classNameScrollbarCornerResizeH, _classNameScrollbarCornerResizeV, _classNameDragging].join(_strSpace); //callbacks:\t\n\n\n        var _callbacksInitQeueue = []; //attrs viewport shall inherit from target\t\n\n        var _viewportAttrsFromTarget = [LEXICON.ti]; //options:\t\n\n        var _defaultOptions;\n\n        var _currentOptions;\n\n        var _currentPreparedOptions; //extensions:\t\n\n\n        var _extensions = {};\n        var _extensionsPrivateMethods = 'added removed on contract'; //update\t\n\n        var _lastUpdateTime;\n\n        var _swallowedUpdateHints = {};\n\n        var _swallowedUpdateTimeout;\n\n        var _swallowUpdateLag = 42;\n        var _updateOnLoadEventName = 'load';\n        var _updateOnLoadElms = []; //DOM elements:\t\n\n        var _windowElement;\n\n        var _documentElement;\n\n        var _htmlElement;\n\n        var _bodyElement;\n\n        var _targetElement; //the target element of this OverlayScrollbars object\t\n\n\n        var _hostElement; //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\n\n\n        var _sizeAutoObserverElement; //observes size auto changes\t\n\n\n        var _sizeObserverElement; //observes size and padding changes\t\n\n\n        var _paddingElement; //manages the padding\t\n\n\n        var _viewportElement; //is the viewport of our scrollbar model\t\n\n\n        var _contentElement; //the element which holds the content\t\n\n\n        var _contentArrangeElement; //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\n\n\n        var _contentGlueElement; //has always the size of the content element\t\n\n\n        var _textareaCoverElement; //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\n\n\n        var _scrollbarCornerElement;\n\n        var _scrollbarHorizontalElement;\n\n        var _scrollbarHorizontalTrackElement;\n\n        var _scrollbarHorizontalHandleElement;\n\n        var _scrollbarVerticalElement;\n\n        var _scrollbarVerticalTrackElement;\n\n        var _scrollbarVerticalHandleElement;\n\n        var _windowElementNative;\n\n        var _documentElementNative;\n\n        var _targetElementNative;\n\n        var _hostElementNative;\n\n        var _sizeAutoObserverElementNative;\n\n        var _sizeObserverElementNative;\n\n        var _paddingElementNative;\n\n        var _viewportElementNative;\n\n        var _contentElementNative; //Cache:\t\n\n\n        var _hostSizeCache;\n\n        var _contentScrollSizeCache;\n\n        var _arrangeContentSizeCache;\n\n        var _hasOverflowCache;\n\n        var _hideOverflowCache;\n\n        var _widthAutoCache;\n\n        var _heightAutoCache;\n\n        var _cssBoxSizingCache;\n\n        var _cssPaddingCache;\n\n        var _cssBorderCache;\n\n        var _cssMarginCache;\n\n        var _cssDirectionCache;\n\n        var _cssDirectionDetectedCache;\n\n        var _paddingAbsoluteCache;\n\n        var _clipAlwaysCache;\n\n        var _contentGlueSizeCache;\n\n        var _overflowBehaviorCache;\n\n        var _overflowAmountCache;\n\n        var _ignoreOverlayScrollbarHidingCache;\n\n        var _autoUpdateCache;\n\n        var _sizeAutoCapableCache;\n\n        var _contentElementScrollSizeChangeDetectedCache;\n\n        var _hostElementSizeChangeDetectedCache;\n\n        var _scrollbarsVisibilityCache;\n\n        var _scrollbarsAutoHideCache;\n\n        var _scrollbarsClickScrollingCache;\n\n        var _scrollbarsDragScrollingCache;\n\n        var _resizeCache;\n\n        var _normalizeRTLCache;\n\n        var _classNameCache;\n\n        var _oldClassName;\n\n        var _textareaAutoWrappingCache;\n\n        var _textareaInfoCache;\n\n        var _textareaSizeCache;\n\n        var _textareaDynHeightCache;\n\n        var _textareaDynWidthCache;\n\n        var _bodyMinSizeCache;\n\n        var _updateAutoCache = {}; //MutationObserver:\t\n\n        var _mutationObserverHost;\n\n        var _mutationObserverContent;\n\n        var _mutationObserverHostCallback;\n\n        var _mutationObserverContentCallback;\n\n        var _mutationObserversConnected;\n\n        var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\n\n        var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget); //events:\t\n\n\n        var _destroyEvents = []; //textarea:\t\n\n        var _textareaHasFocus; //scrollbars:\t\n\n\n        var _scrollbarsAutoHideTimeoutId;\n\n        var _scrollbarsAutoHideMoveTimeoutId;\n\n        var _scrollbarsAutoHideDelay;\n\n        var _scrollbarsAutoHideNever;\n\n        var _scrollbarsAutoHideScroll;\n\n        var _scrollbarsAutoHideMove;\n\n        var _scrollbarsAutoHideLeave;\n\n        var _scrollbarsHandleHovered;\n\n        var _scrollbarsHandlesDefineScrollPos; //resize\t\n\n\n        var _resizeNone;\n\n        var _resizeBoth;\n\n        var _resizeHorizontal;\n\n        var _resizeVertical; //==== Event Listener ====//\t\n\n        /**\t\r\n         * Adds or removes a event listener from the given element. \t\r\n         * @param element The element to which the event listener shall be applied or removed.\t\r\n         * @param eventNames The name(s) of the events.\t\r\n         * @param listener The method which shall be called.\t\r\n         * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n         * @param passiveOrOptions The options for the event.\r\n         */\n\n\n        function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\n          var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\n          var method = remove ? 'removeEventListener' : 'addEventListener';\n          var onOff = remove ? 'off' : 'on';\n          var events = collected ? false : eventNames.split(_strSpace);\n          var i = 0;\n          var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\n          var passive = _supportPassiveEvents && (passiveOrOptionsIsObj ? passiveOrOptions._passive : passiveOrOptions) || false;\n          var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\n          var nativeParam = _supportPassiveEvents ? {\n            passive: passive,\n            capture: capture\n          } : capture;\n\n          if (collected) {\n            for (; i < eventNames[LEXICON.l]; i++) {\n              setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\n            }\n          } else {\n            for (; i < events[LEXICON.l]; i++) {\n              if (_supportPassiveEvents) {\n                element[0][method](events[i], listener, nativeParam);\n              } else {\n                element[onOff](events[i], listener);\n              }\n            }\n          }\n        }\n\n        function addDestroyEventListener(element, eventNames, listener, passive) {\n          setupResponsiveEventListener(element, eventNames, listener, false, passive);\n\n          _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\n        } //==== Resize Observer ====//\n\n        /**\r\n         * Adds or removes a resize observer from the given element.\r\n         * @param targetElement The element to which the resize observer shall be added or removed.\r\n         * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n         */\n\n\n        function setupResizeObserver(targetElement, onElementResizedCallback) {\n          if (targetElement) {\n            var resizeObserver = COMPATIBILITY.rO();\n            var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\n            var strChildNodes = 'childNodes';\n            var constScroll = 3333333;\n\n            var callback = function callback() {\n              targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\n\n              onElementResizedCallback();\n            }; //add resize observer:\n\n\n            if (onElementResizedCallback) {\n              if (_supportResizeObserver) {\n                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\n                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\n                observer.observe(element);\n              } else {\n                if (_msieVersion > 9 || !_autoUpdateRecommended) {\n                  targetElement.prepend(generateDiv(_classNameResizeObserverElement, generateDiv({\n                    c: _classNameResizeObserverItemElement,\n                    dir: 'ltr'\n                  }, generateDiv(_classNameResizeObserverItemElement, generateDiv(_classNameResizeObserverItemFinalElement)) + generateDiv(_classNameResizeObserverItemElement, generateDiv({\n                    c: _classNameResizeObserverItemFinalElement,\n                    style: 'width: 200%; height: 200%'\n                  })))));\n                  var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\n                  var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\n                  var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\n                  var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\n                  var widthCache = observerElement[LEXICON.oW];\n                  var heightCache = observerElement[LEXICON.oH];\n                  var isDirty;\n                  var rAFId;\n                  var currWidth;\n                  var currHeight;\n                  var factor = 2;\n                  var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\n\n                  var reset = function reset() {\n                    /*\r\n                     var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                     var expandChildCSS = {};\r\n                     expandChildCSS[_strWidth] = sizeResetWidth;\r\n                     expandChildCSS[_strHeight] = sizeResetHeight;\r\n                     expandElementChild.css(expandChildCSS);\r\n                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                     */\n                    expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n\n                    shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\n                  };\n\n                  var onResized = function onResized() {\n                    rAFId = 0;\n                    if (!isDirty) return;\n                    widthCache = currWidth;\n                    heightCache = currHeight;\n                    callback();\n                  };\n\n                  var onScroll = function onScroll(event) {\n                    currWidth = observerElement[LEXICON.oW];\n                    currHeight = observerElement[LEXICON.oH];\n                    isDirty = currWidth != widthCache || currHeight != heightCache;\n\n                    if (event && isDirty && !rAFId) {\n                      COMPATIBILITY.cAF()(rAFId);\n                      rAFId = COMPATIBILITY.rAF()(onResized);\n                    } else if (!event) onResized();\n\n                    reset();\n\n                    if (event) {\n                      COMPATIBILITY.prvD(event);\n                      COMPATIBILITY.stpP(event);\n                    }\n\n                    return false;\n                  };\n\n                  var expandChildCSS = {};\n                  var observerElementCSS = {};\n                  setTopRightBottomLeft(observerElementCSS, _strEmpty, [-((nativeScrollbarSize.y + 1) * factor), nativeScrollbarSize.x * -factor, nativeScrollbarSize.y * -factor, -((nativeScrollbarSize.x + 1) * factor)]);\n                  FRAMEWORK(observerElement).css(observerElementCSS);\n                  expandElement.on(_strScroll, onScroll);\n                  shrinkElement.on(_strScroll, onScroll);\n                  targetElement.on(strAnimationStartEvent, function () {\n                    onScroll(false);\n                  }); //lets assume that the divs will never be that large and a constant value is enough\n\n                  expandChildCSS[_strWidth] = constScroll;\n                  expandChildCSS[_strHeight] = constScroll;\n                  expandElementChild.css(expandChildCSS);\n                  reset();\n                } else {\n                  var attachEvent = _documentElementNative.attachEvent;\n                  var isIE = _msieVersion !== undefined$1;\n\n                  if (attachEvent) {\n                    targetElement.prepend(generateDiv(_classNameResizeObserverElement));\n                    findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\n                  } else {\n                    var obj = _documentElementNative.createElement(TYPES.o);\n\n                    obj.setAttribute(LEXICON.ti, '-1');\n                    obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\n\n                    obj.onload = function () {\n                      var wnd = this.contentDocument.defaultView;\n                      wnd.addEventListener('resize', callback);\n                      wnd.document.documentElement.style.display = 'none';\n                    };\n\n                    obj.type = 'text/html';\n                    if (isIE) targetElement.prepend(obj);\n                    obj.data = 'about:blank';\n                    if (!isIE) targetElement.prepend(obj);\n                    targetElement.on(strAnimationStartEvent, callback);\n                  }\n                }\n              }\n\n              if (targetElement[0] === _sizeObserverElementNative) {\n                var directionChanged = function directionChanged() {\n                  var dir = _hostElement.css('direction');\n\n                  var css = {};\n                  var scrollLeftValue = 0;\n                  var result = false;\n\n                  if (dir !== _cssDirectionDetectedCache) {\n                    if (dir === 'ltr') {\n                      css[_strLeft] = 0;\n                      css[_strRight] = _strAuto;\n                      scrollLeftValue = constScroll;\n                    } else {\n                      css[_strLeft] = _strAuto;\n                      css[_strRight] = 0;\n                      scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\n                    } //execution order is important for IE!!!\n\n\n                    _sizeObserverElement.children().eq(0).css(css);\n\n                    _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\n\n                    _cssDirectionDetectedCache = dir;\n                    result = true;\n                  }\n\n                  return result;\n                };\n\n                directionChanged();\n                addDestroyEventListener(targetElement, _strScroll, function (event) {\n                  if (directionChanged()) update();\n                  COMPATIBILITY.prvD(event);\n                  COMPATIBILITY.stpP(event);\n                  return false;\n                });\n              }\n            } //remove resize observer:\n            else {\n              if (_supportResizeObserver) {\n                var element = targetElement.contents()[0];\n                var resizeObserverObj = element[_strResizeObserverProperty];\n\n                if (resizeObserverObj) {\n                  resizeObserverObj.disconnect();\n                  delete element[_strResizeObserverProperty];\n                }\n              } else {\n                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\n              }\n            }\n          }\n        }\n        /**\r\n         * Freezes or unfreezes the given resize observer.\r\n         * @param targetElement The element to which the target resize observer is applied.\r\n         * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n         \r\n        function freezeResizeObserver(targetElement, freeze) {\r\n            if (targetElement !== undefined) {\r\n                if(freeze) {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].unobserve(element);\r\n                    }\r\n                    else {\r\n                        targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                        var w = targetElement.css(_strWidth);\r\n                        var h = targetElement.css(_strHeight);\r\n                        var css = {};\r\n                        css[_strWidth] = w;\r\n                        css[_strHeight] = h;\r\n                        targetElement.css(css);\r\n                    }\r\n                }\r\n                else {\r\n                    if (_supportResizeObserver) {\r\n                        var element = targetElement.contents()[0];\r\n                        element[_strResizeObserverProperty].observe(element);\r\n                    }\r\n                    else {\r\n                        var css = { };\r\n                        css[_strHeight] = _strEmpty;\r\n                        css[_strWidth] = _strEmpty;\r\n                        targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        */\n        //==== Mutation Observers ====//\n\n        /**\r\n         * Creates MutationObservers for the host and content Element if they are supported.\r\n         */\n\n\n        function createMutationObservers() {\n          if (_supportMutationObserver) {\n            var mutationObserverContentLag = 11;\n            var mutationObserver = COMPATIBILITY.mO();\n            var contentLastUpdate = COMPATIBILITY.now();\n            var mutationTarget;\n            var mutationAttrName;\n            var mutationIsClass;\n            var oldMutationVal;\n            var newClassVal;\n            var hostClassNameRegex;\n            var contentTimeout;\n            var now;\n            var sizeAuto;\n            var action;\n\n            _mutationObserverHostCallback = function _mutationObserverHostCallback(mutations) {\n              var doUpdate = false;\n              var doUpdateForce = false;\n              var mutation;\n              var mutatedAttrs = [];\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  mutationTarget = mutation.target;\n                  mutationAttrName = mutation.attributeName;\n                  mutationIsClass = mutationAttrName === LEXICON.c;\n                  oldMutationVal = mutation.oldValue;\n                  newClassVal = mutationTarget.className;\n\n                  if (_domExists && mutationIsClass && !doUpdateForce) {\n                    // if old class value contains _classNameHostElementForeign and new class value doesn't\n                    if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\n                      hostClassNameRegex = createHostClassNameRegExp(true);\n                      _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\n                        return name.match(hostClassNameRegex);\n                      })).join(_strSpace);\n                      doUpdate = doUpdateForce = true;\n                    }\n                  }\n\n                  if (!doUpdate) {\n                    doUpdate = mutationIsClass ? hostClassNamesChanged(oldMutationVal, newClassVal) : mutationAttrName === LEXICON.s ? oldMutationVal !== mutationTarget[LEXICON.s].cssText : true;\n                  }\n\n                  mutatedAttrs.push(mutationAttrName);\n                });\n                updateViewportAttrsFromTarget(mutatedAttrs);\n                if (doUpdate) _base.update(doUpdateForce || _strAuto);\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverContentCallback = function _mutationObserverContentCallback(mutations) {\n              var doUpdate = false;\n              var mutation;\n\n              if (_initialized && !_sleeping) {\n                each(mutations, function () {\n                  mutation = this;\n                  doUpdate = isUnknownMutation(mutation);\n                  return !doUpdate;\n                });\n\n                if (doUpdate) {\n                  now = COMPATIBILITY.now();\n                  sizeAuto = _heightAutoCache || _widthAutoCache;\n\n                  action = function action() {\n                    if (!_destroyed) {\n                      contentLastUpdate = now; //if cols, rows or wrap attr was changed\n\n                      if (_isTextarea) textareaUpdate();\n                      if (sizeAuto) update();else _base.update(_strAuto);\n                    }\n                  };\n\n                  clearTimeout(contentTimeout);\n                  if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto) action();else contentTimeout = setTimeout(action, mutationObserverContentLag);\n                }\n              }\n\n              return doUpdate;\n            };\n\n            _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\n            _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\n          }\n        }\n        /**\r\n         * Connects the MutationObservers if they are supported.\r\n         */\n\n\n        function connectMutationObservers() {\n          if (_supportMutationObserver && !_mutationObserversConnected) {\n            _mutationObserverHost.observe(_hostElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              attributeFilter: _mutationObserverAttrsHost\n            });\n\n            _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\n              attributes: true,\n              attributeOldValue: true,\n              subtree: !_isTextarea,\n              childList: !_isTextarea,\n              characterData: !_isTextarea,\n              attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\n            });\n\n            _mutationObserversConnected = true;\n          }\n        }\n        /**\r\n         * Disconnects the MutationObservers if they are supported.\r\n         */\n\n\n        function disconnectMutationObservers() {\n          if (_supportMutationObserver && _mutationObserversConnected) {\n            _mutationObserverHost.disconnect();\n\n            _mutationObserverContent.disconnect();\n\n            _mutationObserversConnected = false;\n          }\n        } //==== Events of elements ====//\n\n        /**\r\n         * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n         * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n         * If there are any size changes, the update method gets called.\r\n         */\n\n\n        function hostOnResized() {\n          if (!_sleeping) {\n            var changed;\n            var hostSize = {\n              w: _sizeObserverElementNative[LEXICON.sW],\n              h: _sizeObserverElementNative[LEXICON.sH]\n            };\n            changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\n            _hostElementSizeChangeDetectedCache = hostSize;\n            if (changed) update({\n              _hostSizeChanged: true\n            });\n          }\n        }\n        /**\r\n         * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseEnter() {\n          if (_scrollbarsAutoHideLeave) refreshScrollbarsAutoHide(true);\n        }\n        /**\r\n         * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n         */\n\n\n        function hostOnMouseLeave() {\n          if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging)) refreshScrollbarsAutoHide(false);\n        }\n        /**\r\n         * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n         */\n\n\n        function hostOnMouseMove() {\n          if (_scrollbarsAutoHideMove) {\n            refreshScrollbarsAutoHide(true);\n            clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\n            _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\n              if (_scrollbarsAutoHideMove && !_destroyed) refreshScrollbarsAutoHide(false);\n            }, 100);\n          }\n        }\n        /**\r\n         * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n         * @param event The select start event.\r\n         */\n\n\n        function documentOnSelectStart(event) {\n          COMPATIBILITY.prvD(event);\n          return false;\n        }\n        /**\t\r\n         * A callback which will be called after a element has loaded.\t\r\n         */\n\n\n        function updateOnLoadCallback(event) {\n          var elm = FRAMEWORK(event.target);\n          eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n            if (elm.is(updateOnLoadSelector)) {\n              update({\n                _contentSizeChanged: true\n              });\n            }\n          });\n        }\n        /**\r\n        * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n        * @param destroy Indicates whether the events shall be added or removed.\r\n        */\n\n\n        function setupHostMouseTouchEvents(destroy) {\n          if (!destroy) setupHostMouseTouchEvents(true);\n          setupResponsiveEventListener(_hostElement, _strMouseTouchMoveEvent.split(_strSpace)[0], hostOnMouseMove, !_scrollbarsAutoHideMove || destroy, true);\n          setupResponsiveEventListener(_hostElement, [_strMouseEnter, _strMouseLeave], [hostOnMouseEnter, hostOnMouseLeave], !_scrollbarsAutoHideLeave || destroy, true); //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\n\n          if (!_initialized && !destroy) _hostElement.one('mouseover', hostOnMouseEnter);\n        } //==== Update Detection ====//\n\n        /**\r\n         * Measures the min width and min height of the body element and refreshes the related cache.\r\n         * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n         */\n\n\n        function bodyMinSizeChanged() {\n          var bodyMinSize = {};\n\n          if (_isBody && _contentArrangeElement) {\n            bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\n            bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\n            bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\n            bodyMinSize.f = true; //flag for \"measured at least once\"\n          }\n\n          _bodyMinSizeCache = bodyMinSize;\n          return !!bodyMinSize.c;\n        }\n        /**\r\n         * Returns true if the class names really changed (new class without plugin host prefix)\r\n         * @param oldClassNames The old ClassName string or array.\r\n         * @param newClassNames The new ClassName string or array.\r\n         * @returns {boolean} True if the class names has really changed, false otherwise.\r\n         */\n\n\n        function hostClassNamesChanged(oldClassNames, newClassNames) {\n          var currClasses = _typeof(newClassNames) == TYPES.s ? newClassNames.split(_strSpace) : [];\n          var oldClasses = _typeof(oldClassNames) == TYPES.s ? oldClassNames.split(_strSpace) : [];\n          var diff = getArrayDifferences(oldClasses, currClasses); // remove none theme from diff list to prevent update\n\n          var idx = inArray(_classNameThemeNone, diff);\n          var i;\n          var regex;\n          if (idx > -1) diff.splice(idx, 1);\n\n          if (diff[LEXICON.l] > 0) {\n            regex = createHostClassNameRegExp(true, true);\n\n            for (i = 0; i < diff.length; i++) {\n              if (!diff[i].match(regex)) {\n                return true;\n              }\n            }\n          }\n\n          return false;\n        }\n        /**\r\n         * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n         * @param mutation The mutation which shall be checked.\r\n         * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n         */\n\n\n        function isUnknownMutation(mutation) {\n          var attributeName = mutation.attributeName;\n          var mutationTarget = mutation.target;\n          var mutationType = mutation.type;\n          var strClosest = 'closest';\n          if (mutationTarget === _contentElementNative) return attributeName === null;\n\n          if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\n            //ignore className changes by the plugin\t\n            if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement)) return hostClassNamesChanged(mutation.oldValue, mutationTarget.className); //only do it of browser support it natively\t\n\n            if (_typeof(mutationTarget[strClosest]) != TYPES.f) return true;\n            if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null || mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null) return false;\n          }\n\n          return true;\n        }\n        /**\r\n         * Returns true if the content size was changed since the last time this method was called.\r\n         * @returns {boolean} True if the content size was changed, false otherwise.\r\n         */\n\n\n        function updateAutoContentSizeChanged() {\n          if (_sleeping) return false;\n          var contentMeasureElement = getContentMeasureElement();\n          var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\n          var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\n          var css = {};\n          var float;\n          var bodyMinSizeC;\n          var changed;\n          var contentElementScrollSize;\n\n          if (setCSS) {\n            float = _contentElement.css(_strFloat);\n            css[_strFloat] = _isRTL ? _strRight : _strLeft;\n            css[_strWidth] = _strAuto;\n\n            _contentElement.css(css);\n          }\n\n          contentElementScrollSize = {\n            w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\n            h: contentMeasureElement[LEXICON.sH] + textareaValueLength\n          };\n\n          if (setCSS) {\n            css[_strFloat] = float;\n            css[_strWidth] = _strHundredPercent;\n\n            _contentElement.css(css);\n          }\n\n          bodyMinSizeC = bodyMinSizeChanged();\n          changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\n          _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\n          return changed || bodyMinSizeC;\n        }\n        /**\r\n         * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n         * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n         */\n\n\n        function meaningfulAttrsChanged() {\n          if (_sleeping || _mutationObserversConnected) return;\n          var elem;\n          var curr;\n          var cache;\n          var changedAttrs = [];\n          var checks = [{\n            _elem: _hostElement,\n            _attrs: _mutationObserverAttrsHost.concat(':visible')\n          }, {\n            _elem: _isTextarea ? _targetElement : undefined$1,\n            _attrs: _mutationObserverAttrsTextarea\n          }];\n          each(checks, function (index, check) {\n            elem = check._elem;\n\n            if (elem) {\n              each(check._attrs, function (index, attr) {\n                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\n                cache = _updateAutoCache[attr];\n\n                if (checkCache(curr, cache)) {\n                  changedAttrs.push(attr);\n                }\n\n                _updateAutoCache[attr] = curr;\n              });\n            }\n          });\n          updateViewportAttrsFromTarget(changedAttrs);\n          return changedAttrs[LEXICON.l] > 0;\n        }\n        /**\r\n         * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n         * @param propertyName The CSS property name.\r\n         * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n         */\n\n\n        function isSizeAffectingCSSProperty(propertyName) {\n          if (!_initialized) return true;\n          var flexGrow = 'flex-grow';\n          var flexShrink = 'flex-shrink';\n          var flexBasis = 'flex-basis';\n          var affectingPropsX = [_strWidth, _strMinMinus + _strWidth, _strMaxMinus + _strWidth, _strMarginMinus + _strLeft, _strMarginMinus + _strRight, _strLeft, _strRight, 'font-weight', 'word-spacing', flexGrow, flexShrink, flexBasis];\n          var affectingPropsXContentBox = [_strPaddingMinus + _strLeft, _strPaddingMinus + _strRight, _strBorderMinus + _strLeft + _strWidth, _strBorderMinus + _strRight + _strWidth];\n          var affectingPropsY = [_strHeight, _strMinMinus + _strHeight, _strMaxMinus + _strHeight, _strMarginMinus + _strTop, _strMarginMinus + _strBottom, _strTop, _strBottom, 'line-height', flexGrow, flexShrink, flexBasis];\n          var affectingPropsYContentBox = [_strPaddingMinus + _strTop, _strPaddingMinus + _strBottom, _strBorderMinus + _strTop + _strWidth, _strBorderMinus + _strBottom + _strWidth];\n          var _strS = 's';\n          var _strVS = 'v-s';\n          var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\n          var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\n          var sizeIsAffected = false;\n\n          var checkPropertyName = function checkPropertyName(arr, name) {\n            for (var i = 0; i < arr[LEXICON.l]; i++) {\n              if (arr[i] === name) return true;\n            }\n\n            return false;\n          };\n\n          if (checkY) {\n            sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\n          }\n\n          if (checkX && !sizeIsAffected) {\n            sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\n            if (!sizeIsAffected && !_isBorderBox) sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\n          }\n\n          return sizeIsAffected;\n        } //==== Update ====//\n\n        /**\r\n         * Sets the attribute values of the viewport element to the values from the target element.\r\n         * The value of a attribute is only set if the attribute is whitelisted.\r\n         * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n         */\n\n\n        function updateViewportAttrsFromTarget(attrs) {\n          attrs = attrs || _viewportAttrsFromTarget;\n          each(attrs, function (index, attr) {\n            if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\n              var targetAttr = _targetElement.attr(attr);\n\n              if (type(targetAttr) == TYPES.s) {\n                _viewportElement.attr(attr, targetAttr);\n              } else {\n                _viewportElement.removeAttr(attr);\n              }\n            }\n          });\n        }\n        /**\r\n         * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n         */\n\n\n        function textareaUpdate() {\n          if (!_sleeping) {\n            var wrapAttrOff = !_textareaAutoWrappingCache;\n            var minWidth = _viewportSize.w;\n            var minHeight = _viewportSize.h;\n            var css = {};\n            var doMeasure = _widthAutoCache || wrapAttrOff;\n            var origWidth;\n            var width;\n            var origHeight;\n            var height; //reset min size\n\n            css[_strMinMinus + _strWidth] = _strEmpty;\n            css[_strMinMinus + _strHeight] = _strEmpty; //set width auto\n\n            css[_strWidth] = _strAuto;\n\n            _targetElement.css(css); //measure width\n\n\n            origWidth = _targetElementNative[LEXICON.oW];\n            width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\n            /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\n            //set measured width\n\n            css[_strWidth] = _widthAutoCache ? _strAuto\n            /*width*/\n            : _strHundredPercent;\n            css[_strMinMinus + _strWidth] = _strHundredPercent; //set height auto\n\n            css[_strHeight] = _strAuto;\n\n            _targetElement.css(css); //measure height\n\n\n            origHeight = _targetElementNative[LEXICON.oH];\n            height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1); //append correct size values\n\n            css[_strWidth] = width;\n            css[_strHeight] = height;\n\n            _textareaCoverElement.css(css); //apply min width / min height to prevent textarea collapsing\n\n\n            css[_strMinMinus + _strWidth] = minWidth\n            /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/\n            ;\n            css[_strMinMinus + _strHeight] = minHeight\n            /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/\n            ;\n\n            _targetElement.css(css);\n\n            return {\n              _originalWidth: origWidth,\n              _originalHeight: origHeight,\n              _dynamicWidth: width,\n              _dynamicHeight: height\n            };\n          }\n        }\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param updateHints A objects which contains hints for this update:\r\n         * {\r\n         *   _hostSizeChanged : boolean,\r\n         *   _contentSizeChanged : boolean,\r\n         *   _force : boolean,                             == preventSwallowing\r\n         *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n        *  }\r\n         */\n\n\n        function update(updateHints) {\n          clearTimeout(_swallowedUpdateTimeout);\n          updateHints = updateHints || {};\n          _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\n          _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\n          _swallowedUpdateHints._force |= updateHints._force;\n          var now = COMPATIBILITY.now();\n          var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\n          var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\n          var force = !!_swallowedUpdateHints._force;\n          var changedOptions = updateHints._changedOptions;\n          var swallow = _initialized && !_destroyed && !force && !changedOptions && now - _lastUpdateTime < _swallowUpdateLag && !_heightAutoCache && !_widthAutoCache;\n          var displayIsHidden;\n          if (swallow) _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag); //abort update due to:\n          //destroyed\n          //swallowing\n          //sleeping\n          //host is hidden or has false display\n\n          if (_destroyed || swallow || _sleeping && !changedOptions || _initialized && !force && (displayIsHidden = _hostElement.is(':hidden')) || _hostElement.css('display') === 'inline') return;\n          _lastUpdateTime = now;\n          _swallowedUpdateHints = {}; //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\n\n          if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n            //native scrollbars are hidden, so change the values to zero\n            _nativeScrollbarSize.x = 0;\n            _nativeScrollbarSize.y = 0;\n          } else {\n            //refresh native scrollbar size (in case of zoom)\n            _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          } // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\n          // The calculation: [scrollbar size +3 *3]\n          // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\n          // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\n\n\n          _nativeScrollbarMinSize = {\n            x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\n            y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\n          };\n          changedOptions = changedOptions || {}; //freezeResizeObserver(_sizeObserverElement, true);\n          //freezeResizeObserver(_sizeAutoObserverElement, true);\n\n          var checkCacheAutoForce = function checkCacheAutoForce() {\n            return checkCache.apply(this, [].slice.call(arguments).concat([force]));\n          }; //save current scroll offset\n\n\n          var currScroll = {\n            x: _viewportElement[_strScrollLeft](),\n            y: _viewportElement[_strScrollTop]()\n          };\n          var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\n          var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea; //scrollbars visibility:\n\n          var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\n          var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache); //scrollbars autoHide:\n\n          var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\n          var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache); //scrollbars click scrolling\n\n          var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\n          var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache); //scrollbars drag scrolling\n\n          var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\n          var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache); //className\n\n          var className = _currentPreparedOptions.className;\n          var classNameChanged = checkCacheAutoForce(className, _classNameCache); //resize\n\n          var resize = _currentPreparedOptions.resize;\n          var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\n          //paddingAbsolute\n\n          var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\n          var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache); //clipAlways\n\n          var clipAlways = _currentPreparedOptions.clipAlways;\n          var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache); //sizeAutoCapable\n\n          var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\n\n          var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache); //showNativeScrollbars\n\n          var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\n          var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache); //autoUpdate\n\n          var autoUpdate = _currentPreparedOptions.autoUpdate;\n          var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache); //overflowBehavior\n\n          var overflowBehavior = _currentPreparedOptions.overflowBehavior;\n          var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force); //dynWidth:\n\n          var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\n          var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth); //dynHeight:\n\n          var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\n          var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight); //scrollbars visibility\n\n          _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\n          _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\n          _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\n          _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l'; //scrollbars autoHideDelay\n\n          _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay; //old className\n\n          _oldClassName = _classNameCache; //resize\n\n          _resizeNone = resize === 'n';\n          _resizeBoth = resize === 'b';\n          _resizeHorizontal = resize === 'h';\n          _resizeVertical = resize === 'v'; //normalizeRTL\n\n          _normalizeRTLCache = _currentPreparedOptions.normalizeRTL; //ignore overlay scrollbar hiding\n\n          ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y; //refresh options cache\n\n          _scrollbarsVisibilityCache = scrollbarsVisibility;\n          _scrollbarsAutoHideCache = scrollbarsAutoHide;\n          _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\n          _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\n          _classNameCache = className;\n          _resizeCache = resize;\n          _paddingAbsoluteCache = paddingAbsolute;\n          _clipAlwaysCache = clipAlways;\n          _sizeAutoCapableCache = sizeAutoCapable;\n          _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\n          _autoUpdateCache = autoUpdate;\n          _overflowBehaviorCache = extendDeep({}, overflowBehavior);\n          _textareaDynWidthCache = textareaDynWidth;\n          _textareaDynHeightCache = textareaDynHeight;\n          _hasOverflowCache = _hasOverflowCache || {\n            x: false,\n            y: false\n          }; //set correct class name to the host element\n\n          if (classNameChanged) {\n            removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\n            addClass(_hostElement, className !== undefined$1 && className !== null && className.length > 0 ? className : _classNameThemeNone);\n          } //set correct auto Update\n\n\n          if (autoUpdateChanged) {\n            if (autoUpdate === true || autoUpdate === null && _autoUpdateRecommended) {\n              disconnectMutationObservers();\n              autoUpdateLoop.add(_base);\n            } else {\n              autoUpdateLoop.remove(_base);\n              connectMutationObservers();\n            }\n          } //activate or deactivate size auto capability\n\n\n          if (sizeAutoCapableChanged) {\n            if (sizeAutoCapable) {\n              if (_contentGlueElement) {\n                _contentGlueElement.show();\n              } else {\n                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\n\n                _paddingElement.before(_contentGlueElement);\n              }\n\n              if (_sizeAutoObserverAdded) {\n                _sizeAutoObserverElement.show();\n              } else {\n                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\n                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\n\n                _contentGlueElement.before(_sizeAutoObserverElement);\n\n                var oldSize = {\n                  w: -1,\n                  h: -1\n                };\n                setupResizeObserver(_sizeAutoObserverElement, function () {\n                  var newSize = {\n                    w: _sizeAutoObserverElementNative[LEXICON.oW],\n                    h: _sizeAutoObserverElementNative[LEXICON.oH]\n                  };\n\n                  if (checkCache(newSize, oldSize)) {\n                    if (_initialized && _heightAutoCache && newSize.h > 0 || _widthAutoCache && newSize.w > 0) {\n                      update();\n                    } else if (_initialized && !_heightAutoCache && newSize.h === 0 || !_widthAutoCache && newSize.w === 0) {\n                      update();\n                    }\n                  }\n\n                  oldSize = newSize;\n                });\n                _sizeAutoObserverAdded = true; //fix heightAuto detector bug if height is fixed but contentHeight is 0.\n                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\n\n                if (_cssCalc !== null) _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\n              }\n            } else {\n              if (_sizeAutoObserverAdded) _sizeAutoObserverElement.hide();\n              if (_contentGlueElement) _contentGlueElement.hide();\n            }\n          } //if force, update all resizeObservers too\n\n\n          if (force) {\n            _sizeObserverElement.find('*').trigger(_strScroll);\n\n            if (_sizeAutoObserverAdded) _sizeAutoObserverElement.find('*').trigger(_strScroll);\n          } //display hidden:\n\n\n          displayIsHidden = displayIsHidden === undefined$1 ? _hostElement.is(':hidden') : displayIsHidden; //textarea AutoWrapping:\n\n          var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\n          var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache); //detect direction:\n\n          var cssDirection = _hostElement.css('direction');\n\n          var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache); //detect box-sizing:\n\n          var boxSizing = _hostElement.css('box-sizing');\n\n          var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache); //detect padding:\n\n          var padding = getTopRightBottomLeftHost(_strPaddingMinus); //width + height auto detecting var:\n\n          var sizeAutoObserverElementBCRect; //exception occurs in IE8 sometimes (unknown exception)\n\n          try {\n            sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\n          } catch (ex) {\n            return;\n          }\n\n          _isRTL = cssDirection === 'rtl';\n          _isBorderBox = boxSizing === 'border-box';\n          var isRTLLeft = _isRTL ? _strLeft : _strRight;\n          var isRTLRight = _isRTL ? _strRight : _strLeft; //detect width auto:\n\n          var widthAutoResizeDetection = false;\n          var widthAutoObserverDetection = _sizeAutoObserverAdded && _hostElement.css(_strFloat) !== 'none'\n          /*|| _isTextarea */\n          ? MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0 && (!paddingAbsolute ? _hostElementNative[LEXICON.cW] - _paddingX > 0 : true) : false;\n\n          if (sizeAutoCapable && !widthAutoObserverDetection) {\n            var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\n\n            var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\n\n            _contentGlueElement.css(_strWidth, _strAuto);\n\n            var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n\n            if (!widthAutoResizeDetection) {\n              _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\n\n              tmpNewHostWidth = _hostElementNative[LEXICON.oW];\n\n              _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\n\n              widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\n            }\n          }\n\n          var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\n          var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\n          var wasWidthAuto = !widthAuto && _widthAutoCache; //detect height auto:\n\n          var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0\n          /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */\n          : false;\n          var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\n          var wasHeightAuto = !heightAuto && _heightAutoCache; //detect border:\n          //we need the border only if border box and auto size\n\n          var updateBorderX = widthAuto && _isBorderBox || !_isBorderBox;\n          var updateBorderY = heightAuto && _isBorderBox || !_isBorderBox;\n          var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY); //detect margin:\n\n          var margin = getTopRightBottomLeftHost(_strMarginMinus); //vars to apply correct css\n\n          var contentElementCSS = {};\n          var contentGlueElementCSS = {}; //funcs\n\n          var getHostSize = function getHostSize() {\n            //has to be clientSize because offsetSize respect borders\n            return {\n              w: _hostElementNative[LEXICON.cW],\n              h: _hostElementNative[LEXICON.cH]\n            };\n          };\n\n          var getViewportSize = function getViewportSize() {\n            //viewport size is padding container because it never has padding, margin and a border\n            //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\n            //if this happens add the difference to the viewportSize to compensate the rounding error\n            return {\n              w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\n              h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\n            };\n          }; //set info for padding\n\n\n          var paddingAbsoluteX = _paddingX = padding.l + padding.r;\n          var paddingAbsoluteY = _paddingY = padding.t + padding.b;\n          paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\n          paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\n          padding.c = checkCacheAutoForce(padding, _cssPaddingCache); //set info for border\n\n          _borderX = border.l + border.r;\n          _borderY = border.t + border.b;\n          border.c = checkCacheAutoForce(border, _cssBorderCache); //set info for margin\n\n          _marginX = margin.l + margin.r;\n          _marginY = margin.t + margin.b;\n          margin.c = checkCacheAutoForce(margin, _cssMarginCache); //refresh cache\n\n          _textareaAutoWrappingCache = textareaAutoWrapping;\n          _cssDirectionCache = cssDirection;\n          _cssBoxSizingCache = boxSizing;\n          _widthAutoCache = widthAuto;\n          _heightAutoCache = heightAuto;\n          _cssPaddingCache = padding;\n          _cssBorderCache = border;\n          _cssMarginCache = margin; //IEFix direction changed\n\n          if (cssDirectionChanged && _sizeAutoObserverAdded) _sizeAutoObserverElement.css(_strFloat, isRTLRight); //apply padding:\n\n          if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\n            var paddingElementCSS = {};\n            var textareaCSS = {};\n            var paddingValues = [padding.t, padding.r, padding.b, padding.l];\n            setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\n\n            if (paddingAbsolute) {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\n            } else {\n              setTopRightBottomLeft(paddingElementCSS, _strEmpty);\n              setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\n            }\n\n            _paddingElement.css(paddingElementCSS);\n\n            _targetElement.css(textareaCSS);\n          } //viewport size is padding container because it never has padding, margin and a border.\n\n\n          _viewportSize = getViewportSize(); //update Textarea\n\n          var textareaSize = _isTextarea ? textareaUpdate() : false;\n\n          var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\n\n          var textareaDynOrigSize = _isTextarea && textareaSize ? {\n            w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\n            h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\n          } : {};\n          _textareaSizeCache = textareaSize; //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\n\n          if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\n            contentElementCSS[_strHeight] = _strAuto;\n          } else if (heightAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strHeight] = _strHundredPercent;\n          }\n\n          if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\n            contentElementCSS[_strWidth] = _strAuto;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\n          } else if (widthAutoChanged || paddingAbsoluteChanged) {\n            contentElementCSS[_strWidth] = _strHundredPercent;\n            contentElementCSS[_strFloat] = _strEmpty;\n            contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\n          }\n\n          if (widthAuto) {\n            //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\n            contentGlueElementCSS[_strWidth] = _strAuto;\n            contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\n            contentElementCSS[_strFloat] = isRTLRight;\n          } else {\n            contentGlueElementCSS[_strWidth] = _strEmpty;\n          }\n\n          if (heightAuto) {\n            //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\n            contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\n          } else {\n            contentGlueElementCSS[_strHeight] = _strEmpty;\n          }\n\n          if (sizeAutoCapable) _contentGlueElement.css(contentGlueElementCSS);\n\n          _contentElement.css(contentElementCSS); //CHECKPOINT HERE ~\n\n\n          contentElementCSS = {};\n          contentGlueElementCSS = {}; //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\n\n          if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\n            var strOverflow = 'overflow';\n            var strOverflowX = strOverflow + '-x';\n            var strOverflowY = strOverflow + '-y';\n            var strHidden = 'hidden';\n            var strVisible = 'visible'; //Reset the viewport (very important for natively overlaid scrollbars and zoom change\n            //don't change the overflow prop as it is very expensive and affects performance !A LOT!\n\n            if (!_nativeScrollbarStyling) {\n              var viewportElementResetCSS = {};\n              var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y : 0;\n              var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? _nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x : 0;\n              setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\n\n              _viewportElement.css(viewportElementResetCSS);\n            } //measure several sizes:\n\n\n            var contentMeasureElement = getContentMeasureElement(); //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\n\n            var contentSize = {\n              //use clientSize because natively overlaidScrollbars add borders\n              w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\n              h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\n            };\n            var scrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            }; //apply the correct viewport style and measure viewport size\n\n            if (!_nativeScrollbarStyling) {\n              viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\n              viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\n\n              _viewportElement.css(viewportElementResetCSS);\n            }\n\n            _viewportSize = getViewportSize(); //measure and correct several sizes\n\n            var hostSize = getHostSize();\n            var hostAbsoluteRectSize = {\n              w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\n              h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\n            };\n            var contentGlueSize = {\n              //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\n              //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\n              w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\n              h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\n            };\n            contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\n            _contentGlueSizeCache = contentGlueSize; //apply correct contentGlue size\n\n            if (sizeAutoCapable) {\n              //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\n              if (contentGlueSize.c || heightAuto || widthAuto) {\n                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\n                contentGlueElementCSS[_strHeight] = contentGlueSize.h; //textarea-sizes are already calculated correctly at this point\n\n                if (!_isTextarea) {\n                  contentSize = {\n                    //use clientSize because natively overlaidScrollbars add borders\n                    w: contentMeasureElement[LEXICON.cW],\n                    h: contentMeasureElement[LEXICON.cH]\n                  };\n                }\n              }\n\n              var textareaCoverCSS = {};\n\n              var setContentGlueElementCSSfunction = function setContentGlueElementCSSfunction(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var wh = scrollbarVars._w_h;\n                var strWH = scrollbarVars._width_height;\n                var autoSize = horizontal ? widthAuto : heightAuto;\n                var borderSize = horizontal ? _borderX : _borderY;\n                var paddingSize = horizontal ? _paddingX : _paddingY;\n                var marginSize = horizontal ? _marginX : _marginY;\n                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize); //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\n\n                if (!autoSize || !autoSize && border.c) contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1; //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\n\n                if (autoSize && contentSize[wh] < viewportSize && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\n                  if (_isTextarea) textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\n                  contentGlueElementCSS[strWH] -= 1;\n                } //make sure content glue size is at least 1\n\n\n                if (contentSize[wh] > 0) contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\n              };\n\n              setContentGlueElementCSSfunction(true);\n              setContentGlueElementCSSfunction(false);\n              if (_isTextarea) _textareaCoverElement.css(textareaCoverCSS);\n\n              _contentGlueElement.css(contentGlueElementCSS);\n            }\n\n            if (widthAuto) contentElementCSS[_strWidth] = _strHundredPercent;\n            if (widthAuto && !_isBorderBox && !_mutationObserversConnected) contentElementCSS[_strFloat] = 'none'; //apply and reset content style\n\n            _contentElement.css(contentElementCSS);\n\n            contentElementCSS = {}; //measure again, but this time all correct sizes:\n\n            var contentScrollSize = {\n              w: contentMeasureElement[LEXICON.sW],\n              h: contentMeasureElement[LEXICON.sH]\n            };\n            contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\n            _contentScrollSizeCache = contentScrollSize; //refresh viewport size after correct measuring\n\n            _viewportSize = getViewportSize();\n            hostSize = getHostSize();\n            hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\n            _hostSizeCache = hostSize;\n            var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\n            var previousOverflowAmount = _overflowAmountCache;\n            var overflowBehaviorIsVS = {};\n            var overflowBehaviorIsVH = {};\n            var overflowBehaviorIsS = {};\n            var overflowAmount = {};\n            var hasOverflow = {};\n            var hideOverflow = {};\n            var canScroll = {};\n\n            var viewportRect = _paddingElementNative[LEXICON.bCR]();\n\n            var setOverflowVariables = function setOverflowVariables(horizontal) {\n              var scrollbarVars = getScrollbarVars(horizontal);\n              var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n              var xyI = scrollbarVarsInverted._x_y;\n              var xy = scrollbarVars._x_y;\n              var wh = scrollbarVars._w_h;\n              var widthHeight = scrollbarVars._width_height;\n              var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\n              var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\n              var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\n              overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\n              overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\n              overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\n              overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\n              overflowAmount[xy] *= hideOverflowForceTextarea || checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1 ? 0 : 1;\n              hasOverflow[xy] = overflowAmount[xy] > 0; //hideOverflow:\n              //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\n              //xs || ys : true === overflow is hidden by \"overflow: scroll\"\n\n              hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI] : hasOverflow[xy];\n              hideOverflow[xy + 's'] = hideOverflow[xy] ? overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy] : false;\n              canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\n            };\n\n            setOverflowVariables(true);\n            setOverflowVariables(false);\n            overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\n            _overflowAmountCache = overflowAmount;\n            hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\n            _hasOverflowCache = hasOverflow;\n            hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\n            _hideOverflowCache = hideOverflow; //if native scrollbar is overlay at x OR y axis, prepare DOM\n\n            if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\n              var borderDesign = 'px solid transparent';\n              var contentArrangeElementCSS = {};\n              var arrangeContent = {};\n              var arrangeChanged = force;\n              var setContentElementCSS;\n\n              if (hasOverflow.x || hasOverflow.y) {\n                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\n                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\n                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\n                _arrangeContentSizeCache = arrangeContent;\n              }\n\n              if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\n                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\n\n                setContentElementCSS = function setContentElementCSS(horizontal) {\n                  var scrollbarVars = getScrollbarVars(horizontal);\n                  var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                  var xy = scrollbarVars._x_y;\n                  var strDirection = horizontal ? _strBottom : isRTLLeft;\n                  var invertedAutoSize = horizontal ? heightAuto : widthAuto;\n\n                  if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\n                    contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy] : _strEmpty;\n                    contentElementCSS[_strBorderMinus + strDirection] = (horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding ? _overlayScrollbarDummySize[xy] + borderDesign : _strEmpty;\n                  } else {\n                    arrangeContent[scrollbarVarsInverted._w_h] = contentElementCSS[_strMarginMinus + strDirection] = contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\n                    arrangeChanged = true;\n                  }\n                };\n\n                if (_nativeScrollbarStyling) {\n                  addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding);\n                } else {\n                  setContentElementCSS(true);\n                  setContentElementCSS(false);\n                }\n              }\n\n              if (ignoreOverlayScrollbarHiding) {\n                arrangeContent.w = arrangeContent.h = _strEmpty;\n                arrangeChanged = true;\n              }\n\n              if (arrangeChanged && !_nativeScrollbarStyling) {\n                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\n                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\n\n                if (!_contentArrangeElement) {\n                  _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\n\n                  _viewportElement.prepend(_contentArrangeElement);\n                }\n\n                _contentArrangeElement.css(contentArrangeElementCSS);\n              }\n\n              _contentElement.css(contentElementCSS);\n            }\n\n            var viewportElementCSS = {};\n            var paddingElementCSS = {};\n            var setViewportCSS;\n\n            if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\n              viewportElementCSS[isRTLRight] = _strEmpty;\n\n              setViewportCSS = function setViewportCSS(horizontal) {\n                var scrollbarVars = getScrollbarVars(horizontal);\n                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\n                var xy = scrollbarVars._x_y;\n                var XY = scrollbarVars._X_Y;\n                var strDirection = horizontal ? _strBottom : isRTLLeft;\n\n                var reset = function reset() {\n                  viewportElementCSS[strDirection] = _strEmpty;\n                  _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\n                };\n\n                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\n                  viewportElementCSS[strOverflow + XY] = _strScroll;\n\n                  if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\n                    reset();\n                  } else {\n                    viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\n                    _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\n                  }\n                } else {\n                  viewportElementCSS[strOverflow + XY] = _strEmpty;\n                  reset();\n                }\n              };\n\n              setViewportCSS(true);\n              setViewportCSS(false); // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \n              // make viewport element greater in size (Firefox hide Scrollbars fix)\n              // because firefox starts hiding scrollbars on too small elements\n              // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\n              // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\n\n              if (!_nativeScrollbarStyling && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y) && (hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x || hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y)) {\n                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\n                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\n                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\n                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\n              } else {\n                viewportElementCSS[_strPaddingMinus + _strTop] = viewportElementCSS[_strMarginMinus + _strTop] = viewportElementCSS[_strPaddingMinus + isRTLRight] = viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\n              }\n\n              viewportElementCSS[_strPaddingMinus + isRTLLeft] = viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty; //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\n\n              if (hasOverflow.x && hideOverflow.x || hasOverflow.y && hideOverflow.y || hideOverflowForceTextarea) {\n                //only hide if is Textarea\n                if (_isTextarea && hideOverflowForceTextarea) {\n                  paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = strHidden;\n                }\n              } else {\n                if (!clipAlways || overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y) {\n                  //only un-hide if Textarea\n                  if (_isTextarea) {\n                    paddingElementCSS[strOverflowX] = paddingElementCSS[strOverflowY] = _strEmpty;\n                  }\n\n                  viewportElementCSS[strOverflowX] = viewportElementCSS[strOverflowY] = strVisible;\n                }\n              }\n\n              _paddingElement.css(paddingElementCSS);\n\n              _viewportElement.css(viewportElementCSS);\n\n              viewportElementCSS = {}; //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\n\n              if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\n                var elementStyle = _contentElementNative[LEXICON.s];\n                elementStyle.webkitTransform = 'scale(1)';\n                elementStyle.display = 'run-in';\n                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\n\n                elementStyle.webkitTransform = _strEmpty;\n              }\n              /*\r\n              //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n              if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                  _hostElement.hide();\r\n                  var dump = _hostElementNative[LEXICON.oH];\r\n                  _hostElement.show();\r\n              }\r\n              */\n\n            } //change to direction RTL and width auto Bugfix in Webkit\n            //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\n\n\n            contentElementCSS = {};\n\n            if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\n              if (_isRTL && widthAuto) {\n                var floatTmp = _contentElement.css(_strFloat);\n\n                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\n\n                _contentElement.css(_strFloat, floatTmp);\n\n                var posLeftWithFloat = MATH.round(_contentElement.position().left);\n                if (posLeftWithoutFloat !== posLeftWithFloat) contentElementCSS[_strLeft] = posLeftWithoutFloat;\n              } else {\n                contentElementCSS[_strLeft] = _strEmpty;\n              }\n            }\n\n            _contentElement.css(contentElementCSS); //handle scroll position\n\n\n            if (_isTextarea && contentSizeChanged) {\n              var textareaInfo = getTextareaInfo();\n\n              if (textareaInfo) {\n                var textareaRowsChanged = _textareaInfoCache === undefined$1 ? true : textareaInfo._rows !== _textareaInfoCache._rows;\n                var cursorRow = textareaInfo._cursorRow;\n                var cursorCol = textareaInfo._cursorColumn;\n                var widestRow = textareaInfo._widestRow;\n                var lastRow = textareaInfo._rows;\n                var lastCol = textareaInfo._columns;\n                var cursorPos = textareaInfo._cursorPosition;\n                var cursorMax = textareaInfo._cursorMax;\n                var cursorIsLastPosition = cursorPos >= cursorMax && _textareaHasFocus;\n                var textareaScrollAmount = {\n                  x: !textareaAutoWrapping && cursorCol === lastCol && cursorRow === widestRow ? _overflowAmountCache.x : -1,\n                  y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? currScroll.y === previousOverflowAmount.y : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\n                };\n                currScroll.x = textareaScrollAmount.x > -1 ? _isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\n\n                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\n              }\n\n              _textareaInfoCache = textareaInfo;\n            }\n\n            if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache) currScroll.x += _contentBorderSize.w || 0;\n            if (widthAuto) _hostElement[_strScrollLeft](0);\n            if (heightAuto) _hostElement[_strScrollTop](0);\n\n            _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y); //scrollbars management:\n\n\n            var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\n            var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\n            var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\n\n            var refreshScrollbarsVisibility = function refreshScrollbarsVisibility(showX, showY) {\n              showY = showY === undefined$1 ? showX : showY;\n              refreshScrollbarAppearance(true, showX, canScroll.x);\n              refreshScrollbarAppearance(false, showY, canScroll.y);\n            }; //manage class name which indicates scrollable overflow\n\n\n            addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\n            addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\n            addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y); //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\n\n            if (cssDirectionChanged && !_isBody) {\n              addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\n            } //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\n\n\n            if (_isBody) addClass(_hostElement, _classNameHostResizeDisabled);\n\n            if (resizeChanged) {\n              addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\n              addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\n            } //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\n\n\n            if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\n              if (ignoreOverlayScrollbarHiding) {\n                if (ignoreOverlayScrollbarHidingChanged) {\n                  removeClass(_hostElement, _classNameHostScrolling);\n\n                  if (ignoreOverlayScrollbarHiding) {\n                    refreshScrollbarsVisibility(false);\n                  }\n                }\n              } else if (scrollbarsVisibilityAuto) {\n                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\n              } else if (scrollbarsVisibilityVisible) {\n                refreshScrollbarsVisibility(true);\n              } else if (scrollbarsVisibilityHidden) {\n                refreshScrollbarsVisibility(false);\n              }\n            } //manage the scrollbars auto hide feature (auto hide them after specific actions)\n\n\n            if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\n              setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\n              refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\n            } //manage scrollbars handle length & offset - don't remove!\n\n\n            if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\n              refreshScrollbarHandleLength(true);\n              refreshScrollbarHandleOffset(true);\n              refreshScrollbarHandleLength(false);\n              refreshScrollbarHandleOffset(false);\n            } //manage interactivity\n\n\n            if (scrollbarsClickScrollingChanged) refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\n            if (scrollbarsDragScrollingChanged) refreshScrollbarsInteractive(false, scrollbarsDragScrolling); //callbacks:\n\n            dispatchCallback('onDirectionChanged', {\n              isRTL: _isRTL,\n              dir: cssDirection\n            }, cssDirectionChanged);\n            dispatchCallback('onHostSizeChanged', {\n              width: _hostSizeCache.w,\n              height: _hostSizeCache.h\n            }, hostSizeChanged);\n            dispatchCallback('onContentSizeChanged', {\n              width: _contentScrollSizeCache.w,\n              height: _contentScrollSizeCache.h\n            }, contentSizeChanged);\n            dispatchCallback('onOverflowChanged', {\n              x: hasOverflow.x,\n              y: hasOverflow.y,\n              xScrollable: hideOverflow.xs,\n              yScrollable: hideOverflow.ys,\n              clipped: hideOverflow.x || hideOverflow.y\n            }, hasOverflow.c || hideOverflow.c);\n            dispatchCallback('onOverflowAmountChanged', {\n              x: overflowAmount.x,\n              y: overflowAmount.y\n            }, overflowAmount.c);\n          } //fix body min size\n\n\n          if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\n            //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\n            if (!_bodyMinSizeCache.f) bodyMinSizeChanged();\n            if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x) _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\n            if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y) _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\n            _bodyMinSizeCache.c = false;\n          }\n\n          if (_initialized && changedOptions.updateOnLoad) {\n            updateElementsOnLoad();\n          } //freezeResizeObserver(_sizeObserverElement, false);\n          //freezeResizeObserver(_sizeAutoObserverElement, false);\n\n\n          dispatchCallback('onUpdated', {\n            forced: force\n          });\n        }\n        /**\r\n         * Updates the found elements of which the load event shall be handled.\r\n         */\n\n\n        function updateElementsOnLoad() {\n          if (!_isTextarea) {\n            eachUpdateOnLoad(function (i, updateOnLoadSelector) {\n              _contentElement.find(updateOnLoadSelector).each(function (i, el) {\n                // if element doesn't have a updateOnLoadCallback applied\n                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\n                  _updateOnLoadElms.push(el);\n\n                  FRAMEWORK(el).off(_updateOnLoadEventName, updateOnLoadCallback).on(_updateOnLoadEventName, updateOnLoadCallback);\n                }\n              });\n            });\n          }\n        } //==== Options ====//\n\n        /**\r\n         * Sets new options but doesn't call the update method.\r\n         * @param newOptions The object which contains the new options.\r\n         * @returns {*} A object which contains the changed options.\r\n         */\n\n\n        function setOptions(newOptions) {\n          var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions);\n\n          _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\n          _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\n          return validatedOpts._prepared;\n        } //==== Structure ====//\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n        /**\r\n         * Builds or destroys the wrapper and helper DOM elements.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupStructureDOM(destroy) {\n          var strParent = 'parent';\n          var classNameResizeObserverHost = 'os-resize-observer-host';\n          var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\n          var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\n          var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\n          var adoptAttrsMap = {};\n\n          var applyAdoptedAttrs = function applyAdoptedAttrs() {\n            var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\n            each(adoptAttrsMap, function (key, value) {\n              if (type(value) == TYPES.s) {\n                if (key == LEXICON.c) applyAdoptedAttrsElm.addClass(value);else applyAdoptedAttrsElm.attr(key, value);\n              }\n            });\n          };\n\n          var hostElementClassNames = [_classNameHostElement, _classNameHostElementForeign, _classNameHostTextareaElement, _classNameHostResizeDisabled, _classNameHostRTL, _classNameHostScrollbarHorizontalHidden, _classNameHostScrollbarVerticalHidden, _classNameHostTransition, _classNameHostScrolling, _classNameHostOverflow, _classNameHostOverflowX, _classNameHostOverflowY, _classNameThemeNone, _classNameTextareaElement, _classNameTextInherit, _classNameCache].join(_strSpace);\n          var hostElementCSS = {}; //get host element as first element, because that's the most upper element and required for the other elements\n\n          _hostElement = _hostElement || (_isTextarea ? _domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement)) : _targetElement);\n          _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\n          _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\n          _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\n          _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\n          _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined$1); //add this class to workaround class changing issues with UI frameworks especially Vue\n\n          if (_domExists) addClass(_hostElement, _classNameHostElementForeign); //on destroy, remove all generated class names from the host element before collecting the adopted attributes \n          //to prevent adopting generated class names\n\n          if (destroy) removeClass(_hostElement, hostElementClassNames); //collect all adopted attributes\n\n          adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\n\n          if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\n            each(adoptAttrs, function (i, v) {\n              if (type(v) == TYPES.s) {\n                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\n              }\n            });\n          }\n\n          if (!destroy) {\n            if (_isTextarea) {\n              if (!_currentPreparedOptions.sizeAutoCapable) {\n                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\n                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\n              }\n\n              if (!_domExists) _targetElement.addClass(_classNameTextInherit).wrap(_hostElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n              _hostElement = _targetElement[strParent]().css(hostElementCSS);\n            }\n\n            if (!_domExists) {\n              //add the correct class to the target element\n              addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement); //wrap the content into the generated elements to create the required DOM\n\n              _hostElement.wrapInner(_contentElement).wrapInner(_viewportElement).wrapInner(_paddingElement).prepend(_sizeObserverElement); //jQuery clones elements in wrap functions, so we have to select them again\n\n\n              _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\n              _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\n              _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\n\n              if (_isTextarea) {\n                _contentElement.prepend(_textareaCoverElement);\n\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_nativeScrollbarStyling) addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\n            if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y) addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\n            if (_isBody) addClass(_htmlElement, _classNameHTMLElement);\n            _sizeObserverElementNative = _sizeObserverElement[0];\n            _hostElementNative = _hostElement[0];\n            _paddingElementNative = _paddingElement[0];\n            _viewportElementNative = _viewportElement[0];\n            _contentElementNative = _contentElement[0];\n            updateViewportAttrsFromTarget();\n          } else {\n            if (_domExists && _initialized) {\n              //clear size observer\n              _sizeObserverElement.children().remove(); //remove the style property and classes from already generated elements\n\n\n              each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\n                if (elm) {\n                  removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n                }\n              }); //add classes to the host element which was removed previously to match the expected DOM\n\n              addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\n            } else {\n              //remove size observer\n              remove(_sizeObserverElement); //unwrap the content to restore DOM\n\n              _contentElement.contents().unwrap().unwrap().unwrap();\n\n              if (_isTextarea) {\n                _targetElement.unwrap();\n\n                remove(_hostElement);\n                remove(_textareaCoverElement);\n                applyAdoptedAttrs();\n              }\n            }\n\n            if (_isTextarea) _targetElement.removeAttr(LEXICON.s);\n            if (_isBody) removeClass(_htmlElement, _classNameHTMLElement);\n          }\n        }\n        /**\r\n         * Adds or removes all wrapper elements interactivity events.\r\n         * @param destroy Indicates whether the Events shall be added or removed.\r\n         */\n\n\n        function setupStructureEvents() {\n          var textareaKeyDownRestrictedKeyCodes = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, //F1 to F12\n          33, 34, //page up, page down\n          37, 38, 39, 40, //left, up, right, down arrows\n          16, 17, 18, 19, 20, 144 //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\n          ];\n          var textareaKeyDownKeyCodesList = [];\n          var textareaUpdateIntervalID;\n          var scrollStopTimeoutId;\n          var scrollStopDelay = 175;\n          var strFocus = 'focus';\n\n          function updateTextarea(doClearInterval) {\n            textareaUpdate();\n\n            _base.update(_strAuto);\n\n            if (doClearInterval && _autoUpdateRecommended) clearInterval(textareaUpdateIntervalID);\n          }\n\n          function textareaOnScroll(event) {\n            _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\n\n            _targetElement[_strScrollTop](0);\n\n            COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n            return false;\n          }\n\n          function textareaOnDrop(event) {\n            setTimeout(function () {\n              if (!_destroyed) updateTextarea();\n            }, 50);\n          }\n\n          function textareaOnFocus() {\n            _textareaHasFocus = true;\n            addClass(_hostElement, strFocus);\n          }\n\n          function textareaOnFocusout() {\n            _textareaHasFocus = false;\n            textareaKeyDownKeyCodesList = [];\n            removeClass(_hostElement, strFocus);\n            updateTextarea(true);\n          }\n\n          function textareaOnKeyDown(event) {\n            var keyCode = event.keyCode;\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\n                updateTextarea();\n                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\n              }\n\n              if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0) textareaKeyDownKeyCodesList.push(keyCode);\n            }\n          }\n\n          function textareaOnKeyUp(event) {\n            var keyCode = event.keyCode;\n            var index = inArray(keyCode, textareaKeyDownKeyCodesList);\n\n            if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\n              if (index > -1) textareaKeyDownKeyCodesList.splice(index, 1);\n              if (!textareaKeyDownKeyCodesList[LEXICON.l]) updateTextarea(true);\n            }\n          }\n\n          function contentOnTransitionEnd(event) {\n            if (_autoUpdateCache === true) return;\n            event = event.originalEvent || event;\n            if (isSizeAffectingCSSProperty(event.propertyName)) _base.update(_strAuto);\n          }\n\n          function viewportOnScroll(event) {\n            if (!_sleeping) {\n              if (scrollStopTimeoutId !== undefined$1) clearTimeout(scrollStopTimeoutId);else {\n                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n                if (!nativeOverlayScrollbarsAreActive()) addClass(_hostElement, _classNameHostScrolling);\n                dispatchCallback('onScrollStart', event);\n              } //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\n              //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\n              //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\n\n              if (!_scrollbarsHandlesDefineScrollPos) {\n                refreshScrollbarHandleOffset(true);\n                refreshScrollbarHandleOffset(false);\n              }\n\n              dispatchCallback('onScroll', event);\n              scrollStopTimeoutId = setTimeout(function () {\n                if (!_destroyed) {\n                  //OnScrollStop:\n                  clearTimeout(scrollStopTimeoutId);\n                  scrollStopTimeoutId = undefined$1;\n                  if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n                  if (!nativeOverlayScrollbarsAreActive()) removeClass(_hostElement, _classNameHostScrolling);\n                  dispatchCallback('onScrollStop', event);\n                }\n              }, scrollStopDelay);\n            }\n          }\n\n          if (_isTextarea) {\n            if (_msieVersion > 9 || !_autoUpdateRecommended) {\n              addDestroyEventListener(_targetElement, 'input', updateTextarea);\n            } else {\n              addDestroyEventListener(_targetElement, [_strKeyDownEvent, _strKeyUpEvent], [textareaOnKeyDown, textareaOnKeyUp]);\n            }\n\n            addDestroyEventListener(_targetElement, [_strScroll, 'drop', strFocus, strFocus + 'out'], [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\n          } else {\n            addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\n          }\n\n          addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\n        } //==== Scrollbars ====//\n\n        /**\r\n         * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarsDOM(destroy) {\n          var selectOrGenerateScrollbarDOM = function selectOrGenerateScrollbarDOM(isHorizontal) {\n            var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\n            var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\n            var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\n            var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\n\n            if (!_domExists && !destroy) {\n              scrollbar.append(track);\n              track.append(handle);\n            }\n\n            return {\n              _scrollbar: scrollbar,\n              _track: track,\n              _handle: handle\n            };\n          };\n\n          function resetScrollbarDOM(isHorizontal) {\n            var scrollbarVars = getScrollbarVars(isHorizontal);\n            var scrollbar = scrollbarVars._scrollbar;\n            var track = scrollbarVars._track;\n            var handle = scrollbarVars._handle;\n\n            if (_domExists && _initialized) {\n              each([scrollbar, track, handle], function (i, elm) {\n                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n              });\n            } else {\n              remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\n            }\n          }\n\n          var horizontalElements;\n          var verticalElements;\n\n          if (!destroy) {\n            horizontalElements = selectOrGenerateScrollbarDOM(true);\n            verticalElements = selectOrGenerateScrollbarDOM();\n            _scrollbarHorizontalElement = horizontalElements._scrollbar;\n            _scrollbarHorizontalTrackElement = horizontalElements._track;\n            _scrollbarHorizontalHandleElement = horizontalElements._handle;\n            _scrollbarVerticalElement = verticalElements._scrollbar;\n            _scrollbarVerticalTrackElement = verticalElements._track;\n            _scrollbarVerticalHandleElement = verticalElements._handle;\n\n            if (!_domExists) {\n              _paddingElement.after(_scrollbarVerticalElement);\n\n              _paddingElement.after(_scrollbarHorizontalElement);\n            }\n          } else {\n            resetScrollbarDOM(true);\n            resetScrollbarDOM();\n          }\n        }\n        /**\r\n         * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n         * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n         */\n\n\n        function setupScrollbarEvents(isHorizontal) {\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var xy = scrollbarVars._x_y;\n          var XY = scrollbarVars._X_Y;\n          var scroll = _strScroll + scrollbarVars._Left_Top;\n          var strActive = 'active';\n          var strSnapHandle = 'snapHandle';\n          var strClickEvent = 'click';\n          var scrollDurationFactor = 1;\n          var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\n\n          var trackTimeout;\n          var mouseDownScroll;\n          var mouseDownOffset;\n          var mouseDownInvertedScale;\n\n          function getPointerPosition(event) {\n            return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\n          }\n\n          function getPreparedScrollbarsOption(name) {\n            return _currentPreparedOptions.scrollbars[name];\n          }\n\n          function increaseTrackScrollAmount() {\n            scrollDurationFactor = 0.5;\n          }\n\n          function decreaseTrackScrollAmount() {\n            scrollDurationFactor = 1;\n          }\n\n          function stopClickEventPropagation(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          function documentKeyDown(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) increaseTrackScrollAmount();\n          }\n\n          function documentKeyUp(event) {\n            if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1) decreaseTrackScrollAmount();\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || isTouchEvent && !getPreparedScrollbarsOption('touchSupport') ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var trackLength = scrollbarVarsInfo._trackLength;\n              var handleLength = scrollbarVarsInfo._handleLength;\n              var scrollRange = scrollbarVarsInfo._maxScroll;\n              var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\n              var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\n              var scrollDelta = scrollRange * scrollDeltaPercent;\n              scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\n              if (_isRTL && isHorizontal && !_rtlScrollBehavior.i) scrollDelta *= -1;\n\n              _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\n\n              if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\n              if (!_supportPassiveEvents) COMPATIBILITY.prvD(event);\n            } else documentMouseTouchUp(event);\n          }\n\n          function documentMouseTouchUp(event) {\n            event = event || event.originalEvent;\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart], true);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, {\n                _capture: true\n              });\n            });\n            if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, true);\n            _scrollbarsHandlesDefineScrollPos = false;\n            removeClass(_bodyElement, _classNameDragging);\n            removeClass(scrollbarVars._handle, strActive);\n            removeClass(scrollbarVars._track, strActive);\n            removeClass(scrollbarVars._scrollbar, strActive);\n            mouseDownScroll = undefined$1;\n            mouseDownOffset = undefined$1;\n            mouseDownInvertedScale = 1;\n            decreaseTrackScrollAmount();\n\n            if (trackTimeout !== undefined$1) {\n              _base.scrollStop();\n\n              clearTimeout(trackTimeout);\n              trackTimeout = undefined$1;\n            }\n\n            if (event) {\n              var rect = _hostElementNative[LEXICON.bCR]();\n\n              var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom; //if mouse is outside host element\n\n              if (!mouseInsideHost) hostOnMouseLeave();\n              if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n            }\n          }\n\n          function onHandleMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) onHandleMouseTouchDownAction(event);\n          }\n\n          function onHandleMouseTouchDownAction(event) {\n            mouseDownScroll = _viewportElement[scroll]();\n            mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\n            if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL) mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\n            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n            mouseDownOffset = getPointerPosition(event);\n            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n            addClass(_bodyElement, _classNameDragging);\n            addClass(scrollbarVars._handle, strActive);\n            addClass(scrollbarVars._scrollbar, strActive);\n            setupResponsiveEventListener(_documentElement, [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent], [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\n            COMPATIBILITY.rAF()(function () {\n              setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, {\n                _capture: true\n              });\n            });\n            if (_msieVersion || !_documentMixed) COMPATIBILITY.prvD(event);\n            COMPATIBILITY.stpP(event);\n          }\n\n          function onTrackMouseTouchDown(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\n              var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\n              var scrollBaseDuration = 270 * handleToViewportRatio;\n              var scrollFirstIterationDelay = 400 * handleToViewportRatio;\n\n              var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\n\n              var ctrlKey = event.ctrlKey;\n              var instantScroll = event.shiftKey;\n              var instantScrollTransition = instantScroll && ctrlKey;\n              var isFirstIteration = true;\n              var easing = 'linear';\n              var decreaseScroll;\n              var finishedCondition;\n\n              var scrollActionFinsished = function scrollActionFinsished(transition) {\n                if (_scrollbarsHandlesDefineScrollPos) refreshScrollbarHandleOffset(isHorizontal, transition);\n              };\n\n              var scrollActionInstantFinished = function scrollActionInstantFinished() {\n                scrollActionFinsished();\n                onHandleMouseTouchDownAction(event);\n              };\n\n              var scrollAction = function scrollAction() {\n                if (!_destroyed) {\n                  var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\n                  var handleOffset = scrollbarVarsInfo._handleOffset;\n                  var trackLength = scrollbarVarsInfo._trackLength;\n                  var handleLength = scrollbarVarsInfo._handleLength;\n                  var scrollRange = scrollbarVarsInfo._maxScroll;\n                  var currScroll = scrollbarVarsInfo._currentScroll;\n                  var scrollDuration = scrollBaseDuration * scrollDurationFactor;\n                  var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\n                  var instantScrollPosition = scrollRange * ((mouseOffset - handleLength / 2) / (trackLength - handleLength)); // 100% * positionPercent\n\n                  var rtlIsNormal = _isRTL && isHorizontal && (!_rtlScrollBehavior.i && !_rtlScrollBehavior.n || _normalizeRTLCache);\n                  var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\n                  var scrollObj = {};\n                  var animationObj = {\n                    easing: easing,\n                    step: function step(now) {\n                      if (_scrollbarsHandlesDefineScrollPos) {\n                        _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\n\n\n                        refreshScrollbarHandleOffset(isHorizontal, now);\n                      }\n                    }\n                  };\n                  instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\n                  instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition; //_base.scrollStop();\n\n                  if (instantScroll) {\n                    _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\n\n\n                    if (instantScrollTransition) {\n                      //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\n                      //and the animation stops at the correct point\n                      instantScrollPosition = _viewportElement[scroll](); //scroll back to the position before instant scrolling so animation can be performed\n\n                      _viewportElement[scroll](currScroll);\n\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? scrollRange - instantScrollPosition : instantScrollPosition;\n                      instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\n                      scrollObj[xy] = instantScrollPosition;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: 130,\n                        complete: scrollActionInstantFinished\n                      }));\n                    } else scrollActionInstantFinished();\n                  } else {\n                    decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\n                    finishedCondition = rtlIsNormal ? decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset : decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset;\n\n                    if (finishedCondition) {\n                      clearTimeout(trackTimeout);\n\n                      _base.scrollStop();\n\n                      trackTimeout = undefined$1;\n                      scrollActionFinsished(true);\n                    } else {\n                      trackTimeout = setTimeout(scrollAction, timeoutDelay);\n                      scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\n\n                      _base.scroll(scrollObj, extendDeep(animationObj, {\n                        duration: scrollDuration\n                      }));\n                    }\n\n                    isFirstIteration = false;\n                  }\n                }\n              };\n\n              if (ctrlKey) increaseTrackScrollAmount();\n              mouseDownInvertedScale = getHostElementInvertedScale()[xy];\n              mouseDownOffset = COMPATIBILITY.page(event)[xy];\n              _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\n              addClass(_bodyElement, _classNameDragging);\n              addClass(scrollbarVars._track, strActive);\n              addClass(scrollbarVars._scrollbar, strActive);\n              setupResponsiveEventListener(_documentElement, [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent], [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\n              scrollAction();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          }\n\n          function onTrackMouseTouchEnter(event) {\n            //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\n            _scrollbarsHandleHovered = true;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(true);\n          }\n\n          function onTrackMouseTouchLeave(event) {\n            _scrollbarsHandleHovered = false;\n            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove) refreshScrollbarsAutoHide(false);\n          }\n\n          function onScrollbarMouseTouchDown(event) {\n            COMPATIBILITY.stpP(event);\n          }\n\n          addDestroyEventListener(scrollbarVars._handle, _strMouseTouchDownEvent, onHandleMouseTouchDown);\n          addDestroyEventListener(scrollbarVars._track, [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave], [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\n          addDestroyEventListener(scrollbarVars._scrollbar, _strMouseTouchDownEvent, onScrollbarMouseTouchDown);\n\n          if (_supportTransition) {\n            addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\n              if (event.target !== scrollbarVars._scrollbar[0]) return;\n              refreshScrollbarHandleLength(isHorizontal);\n              refreshScrollbarHandleOffset(isHorizontal);\n            });\n          }\n        }\n        /**\r\n         * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n         * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n         * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n         * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n         */\n\n\n        function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\n          var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\n          var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\n          addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\n          addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\n        }\n        /**\r\n         * Autoshows / autohides both scrollbars with.\r\n         * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n         * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n         */\n\n\n        function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\n          clearTimeout(_scrollbarsAutoHideTimeoutId);\n\n          if (shallBeVisible) {\n            //if(_hasOverflowCache.x && _hideOverflowCache.xs)\n            removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden); //if(_hasOverflowCache.y && _hideOverflowCache.ys)\n\n            removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n          } else {\n            var anyActive;\n            var strActive = 'active';\n\n            var hide = function hide() {\n              if (!_scrollbarsHandleHovered && !_destroyed) {\n                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\n                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave)) addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\n              }\n            };\n\n            if (_scrollbarsAutoHideDelay > 0 && delayfree !== true) _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);else hide();\n          }\n        }\n        /**\r\n         * Refreshes the handle length of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         */\n\n\n        function refreshScrollbarHandleLength(isHorizontal) {\n          var handleCSS = {};\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var digit = 1000000; //get and apply intended handle length\n\n          var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\n          handleCSS[scrollbarVars._width_height] = MATH.floor(handleRatio * 100 * digit) / digit + '%'; //the last * digit / digit is for flooring to the 4th digit\n\n          if (!nativeOverlayScrollbarsAreActive()) scrollbarVars._handle.css(handleCSS); //measure the handle length to respect min & max length\n\n          scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\n          scrollbarVarsInfo._handleLengthRatio = handleRatio;\n        }\n        /**\r\n         * Refreshes the handle offset of the given scrollbar.\r\n         * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n         * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n         */\n\n\n        function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\n          var transition = type(scrollOrTransition) == TYPES.b;\n          var transitionDuration = 250;\n          var isRTLisHorizontal = _isRTL && isHorizontal;\n          var scrollbarVars = getScrollbarVars(isHorizontal);\n          var scrollbarVarsInfo = scrollbarVars._info;\n          var strTranslateBrace = 'translate(';\n\n          var strTransform = VENDORS._cssProperty('transform');\n\n          var strTransition = VENDORS._cssProperty('transition');\n\n          var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\n          var currentScroll = scrollOrTransition === undefined$1 || transition ? nativeScroll : scrollOrTransition; //measure the handle length to respect min & max length\n\n          var handleLength = scrollbarVarsInfo._handleLength;\n          var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\n          var handleTrackDiff = trackLength - handleLength;\n          var handleCSS = {};\n          var transformOffset;\n          var translateValue; //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\n          // because its a bit behind during the small delay when content size updates\n          //(delay = mutationObserverContentLag, if its 0 then this var could be used)\n\n          var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\n\n          var getScrollRatio = function getScrollRatio(base) {\n            return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\n          };\n\n          var getHandleOffset = function getHandleOffset(scrollRatio) {\n            var offset = handleTrackDiff * scrollRatio;\n            offset = isNaN(offset) ? 0 : offset;\n            offset = isRTLisHorizontal && !_rtlScrollBehavior.i ? trackLength - handleLength - offset : offset;\n            offset = MATH.max(0, offset);\n            return offset;\n          };\n\n          var scrollRatio = getScrollRatio(nativeScroll);\n          var unsnappedScrollRatio = getScrollRatio(currentScroll);\n          var handleOffset = getHandleOffset(unsnappedScrollRatio);\n          var snappedHandleOffset = getHandleOffset(scrollRatio);\n          scrollbarVarsInfo._maxScroll = maxScroll;\n          scrollbarVarsInfo._currentScroll = nativeScroll;\n          scrollbarVarsInfo._currentScrollRatio = scrollRatio;\n\n          if (_supportTransform) {\n            transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\n            //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\n\n            translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\n            handleCSS[strTransform] = translateValue; //apply or clear up transition\n\n            if (_supportTransition) handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\n          } else handleCSS[scrollbarVars._left_top] = handleOffset; //only apply css if offset has changed and overflow exists.\n\n\n          if (!nativeOverlayScrollbarsAreActive()) {\n            scrollbarVars._handle.css(handleCSS); //clear up transition\n\n\n            if (_supportTransform && _supportTransition && transition) {\n              scrollbarVars._handle.one(_strTransitionEndEvent, function () {\n                if (!_destroyed) scrollbarVars._handle.css(strTransition, _strEmpty);\n              });\n            }\n          }\n\n          scrollbarVarsInfo._handleOffset = handleOffset;\n          scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\n          scrollbarVarsInfo._trackLength = trackLength;\n        }\n        /**\r\n         * Refreshes the interactivity of the given scrollbar element.\r\n         * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n         * @param value True for interactivity false for no interactivity.\r\n         */\n\n\n        function refreshScrollbarsInteractive(isTrack, value) {\n          var action = value ? 'removeClass' : 'addClass';\n          var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\n          var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\n          var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\n          element1[action](className);\n          element2[action](className);\n        }\n        /**\r\n         * Returns a object which is used for fast access for specific variables.\r\n         * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n         * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n         */\n\n\n        function getScrollbarVars(isHorizontal) {\n          return {\n            _width_height: isHorizontal ? _strWidth : _strHeight,\n            _Width_Height: isHorizontal ? 'Width' : 'Height',\n            _left_top: isHorizontal ? _strLeft : _strTop,\n            _Left_Top: isHorizontal ? 'Left' : 'Top',\n            _x_y: isHorizontal ? _strX : _strY,\n            _X_Y: isHorizontal ? 'X' : 'Y',\n            _w_h: isHorizontal ? 'w' : 'h',\n            _l_t: isHorizontal ? 'l' : 't',\n            _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\n            _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\n            _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\n            _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\n          };\n        } //==== Scrollbar Corner ====//\n\n        /**\r\n         * Builds or destroys the scrollbar corner DOM element.\r\n         * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n         */\n\n\n        function setupScrollbarCornerDOM(destroy) {\n          _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\n\n          if (!destroy) {\n            if (!_domExists) {\n              _hostElement.append(_scrollbarCornerElement);\n            }\n          } else {\n            if (_domExists && _initialized) {\n              removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\n            } else {\n              remove(_scrollbarCornerElement);\n            }\n          }\n        }\n        /**\r\n         * Initializes all scrollbar corner interactivity events.\r\n         */\n\n\n        function setupScrollbarCornerEvents() {\n          var insideIFrame = _windowElementNative.top !== _windowElementNative;\n          var mouseDownPosition = {};\n          var mouseDownSize = {};\n          var mouseDownInvertedScale = {};\n          var reconnectMutationObserver;\n\n          function documentDragMove(event) {\n            if (onMouseTouchDownContinue(event)) {\n              var pageOffset = getCoordinates(event);\n              var hostElementCSS = {};\n              if (_resizeHorizontal || _resizeBoth) hostElementCSS[_strWidth] = mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x;\n              if (_resizeVertical || _resizeBoth) hostElementCSS[_strHeight] = mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y;\n\n              _hostElement.css(hostElementCSS);\n\n              COMPATIBILITY.stpP(event);\n            } else {\n              documentMouseTouchUp(event);\n            }\n          }\n\n          function documentMouseTouchUp(event) {\n            var eventIsTrusted = event !== undefined$1;\n            setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp], true);\n            removeClass(_bodyElement, _classNameDragging);\n            if (_scrollbarCornerElement.releaseCapture) _scrollbarCornerElement.releaseCapture();\n\n            if (eventIsTrusted) {\n              if (reconnectMutationObserver) connectMutationObservers();\n\n              _base.update(_strAuto);\n            }\n\n            reconnectMutationObserver = false;\n          }\n\n          function onMouseTouchDownContinue(event) {\n            var originalEvent = event.originalEvent || event;\n            var isTouchEvent = originalEvent.touches !== undefined$1;\n            return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\n          }\n\n          function getCoordinates(event) {\n            return _msieVersion && insideIFrame ? {\n              x: event.screenX,\n              y: event.screenY\n            } : COMPATIBILITY.page(event);\n          }\n\n          addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\n            if (onMouseTouchDownContinue(event) && !_resizeNone) {\n              if (_mutationObserversConnected) {\n                reconnectMutationObserver = true;\n                disconnectMutationObservers();\n              }\n\n              mouseDownPosition = getCoordinates(event);\n              mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\n              mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\n              mouseDownInvertedScale = getHostElementInvertedScale();\n              setupResponsiveEventListener(_documentElement, [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent], [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\n              addClass(_bodyElement, _classNameDragging);\n              if (_scrollbarCornerElement.setCapture) _scrollbarCornerElement.setCapture();\n              COMPATIBILITY.prvD(event);\n              COMPATIBILITY.stpP(event);\n            }\n          });\n        } //==== Utils ====//\n\n        /**\r\n         * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n         * @param name The name of the target which shall be called.\r\n         * @param args The args with which the callback shall be called.\r\n         * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n         */\n\n\n        function dispatchCallback(name, args, dependent) {\n          if (dependent === false) return;\n\n          if (_initialized) {\n            var callback = _currentPreparedOptions.callbacks[name];\n            var extensionOnName = name;\n            var ext;\n            if (extensionOnName.substr(0, 2) === 'on') extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\n            if (type(callback) == TYPES.f) callback.call(_base, args);\n            each(_extensions, function () {\n              ext = this;\n              if (type(ext.on) == TYPES.f) ext.on(extensionOnName, args);\n            });\n          } else if (!_destroyed) _callbacksInitQeueue.push({\n            n: name,\n            a: args\n          });\n        }\n        /**\r\n         * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n         * @param targetCSSObject The css object to which the values shall be applied.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n         * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n         */\n\n\n        function setTopRightBottomLeft(targetCSSObject, prefix, values) {\n          prefix = prefix || _strEmpty;\n          values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\n          targetCSSObject[prefix + _strTop] = values[0];\n          targetCSSObject[prefix + _strRight] = values[1];\n          targetCSSObject[prefix + _strBottom] = values[2];\n          targetCSSObject[prefix + _strLeft] = values[3];\n        }\n        /**\r\n         * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n         * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n         * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n         * @param zeroX True if the x axis shall be 0.\r\n         * @param zeroY True if the y axis shall be 0.\r\n         * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n         */\n\n\n        function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\n          suffix = suffix || _strEmpty;\n          prefix = prefix || _strEmpty;\n          return {\n            t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\n            r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\n            b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\n            l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\n          };\n        }\n        /**\r\n         * Returns the computed CSS transition string from the given element.\r\n         * @param element The element from which the transition string shall be returned.\r\n         * @returns {string} The CSS transition string from the given element.\r\n         */\n\n\n        function getCSSTransitionString(element) {\n          var transitionStr = VENDORS._cssProperty('transition');\n\n          var assembledValue = element.css(transitionStr);\n          if (assembledValue) return assembledValue;\n          var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\n          var regExpMain = new RegExp(regExpString);\n          var regExpValidate = new RegExp('^(' + regExpString + ')+$');\n          var properties = 'property duration timing-function delay'.split(' ');\n          var result = [];\n          var strResult;\n          var valueArray;\n          var i = 0;\n          var j;\n\n          var splitCssStyleByComma = function splitCssStyleByComma(str) {\n            strResult = [];\n            if (!str.match(regExpValidate)) return str;\n\n            while (str.match(regExpMain)) {\n              strResult.push(RegExp.$1);\n              str = str.replace(regExpMain, _strEmpty);\n            }\n\n            return strResult;\n          };\n\n          for (; i < properties[LEXICON.l]; i++) {\n            valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\n\n            for (j = 0; j < valueArray[LEXICON.l]; j++) {\n              result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\n            }\n          }\n\n          return result.join(', ');\n        }\n        /**\r\n         * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n         * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n         * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n         */\n\n\n        function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\n          var i;\n          var split;\n          var appendix;\n\n          var appendClasses = function appendClasses(classes, condition) {\n            appendix = '';\n\n            if (condition && _typeof(classes) == TYPES.s) {\n              split = classes.split(_strSpace);\n\n              for (i = 0; i < split[LEXICON.l]; i++) {\n                appendix += '|' + split[i] + '$';\n              } // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\n\n            }\n\n            return appendix;\n          };\n\n          return new RegExp('(^' + _classNameHostElement + '([-_].+|)$)' + appendClasses(_classNameCache, withCurrClassNameOption) + appendClasses(_oldClassName, withOldClassNameOption), 'g');\n        }\n        /**\r\n         * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n         * @returns {{x: number, y: number}} The scale of the host-element.\r\n         */\n\n\n        function getHostElementInvertedScale() {\n          var rect = _paddingElementNative[LEXICON.bCR]();\n\n          return {\n            x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\n            y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\n          };\n        }\n        /**\r\n         * Checks whether the given object is a HTMLElement.\r\n         * @param o The object which shall be checked.\r\n         * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n         */\n\n\n        function isHTMLElement(o) {\n          var strOwnerDocument = 'ownerDocument';\n          var strHTMLElement = 'HTMLElement';\n          var wnd = o && o[strOwnerDocument] ? o[strOwnerDocument].parentWindow || window : window;\n          return _typeof(wnd[strHTMLElement]) == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\n          o && _typeof(o) == TYPES.o && o !== null && o.nodeType === 1 && _typeof(o.nodeName) == TYPES.s;\n        }\n        /**\r\n         * Compares 2 arrays and returns the differences between them as a array.\r\n         * @param a1 The first array which shall be compared.\r\n         * @param a2 The second array which shall be compared.\r\n         * @returns {Array} The differences between the two arrays.\r\n         */\n\n\n        function getArrayDifferences(a1, a2) {\n          var a = [];\n          var diff = [];\n          var i;\n          var k;\n\n          for (i = 0; i < a1.length; i++) {\n            a[a1[i]] = true;\n          }\n\n          for (i = 0; i < a2.length; i++) {\n            if (a[a2[i]]) delete a[a2[i]];else a[a2[i]] = true;\n          }\n\n          for (k in a) {\n            diff.push(k);\n          }\n\n          return diff;\n        }\n        /**\r\n         * Returns Zero or the number to which the value can be parsed.\r\n         * @param value The value which shall be parsed.\r\n         * @param toFloat Indicates whether the number shall be parsed to a float.\r\n         */\n\n\n        function parseToZeroOrNumber(value, toFloat) {\n          var num = toFloat ? parseFloat(value) : parseInt(value, 10);\n          return isNaN(num) ? 0 : num;\n        }\n        /**\r\n         * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n         * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n         */\n\n\n        function getTextareaInfo() {\n          //read needed values\n          var textareaCursorPosition = _targetElementNative.selectionStart;\n          if (textareaCursorPosition === undefined$1) return;\n\n          var textareaValue = _targetElement.val();\n\n          var textareaLength = textareaValue[LEXICON.l];\n          var textareaRowSplit = textareaValue.split('\\n');\n          var textareaLastRow = textareaRowSplit[LEXICON.l];\n          var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\n          var widestRow = 0;\n          var textareaLastCol = 0;\n          var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\n          var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\n          var rowCols;\n          var i; //get widest Row and the last column of the textarea\n\n          for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\n            rowCols = textareaRowSplit[i][LEXICON.l];\n\n            if (rowCols > textareaLastCol) {\n              widestRow = i + 1;\n              textareaLastCol = rowCols;\n            }\n          }\n\n          return {\n            _cursorRow: cursorRow,\n            //cursorRow\n            _cursorColumn: cursorCol,\n            //cursorCol\n            _rows: textareaLastRow,\n            //rows\n            _columns: textareaLastCol,\n            //cols\n            _widestRow: widestRow,\n            //wRow\n            _cursorPosition: textareaCursorPosition,\n            //pos\n            _cursorMax: textareaLength //max\n\n          };\n        }\n        /**\r\n         * Determines whether native overlay scrollbars are active.\r\n         * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n         */\n\n\n        function nativeOverlayScrollbarsAreActive() {\n          return _ignoreOverlayScrollbarHidingCache && _nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y;\n        }\n        /**\r\n         * Gets the element which is used to measure the content size.\r\n         * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n         */\n\n\n        function getContentMeasureElement() {\n          return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\n        }\n        /**\r\n         * Generates a string which represents a HTML div with the given classes or attributes.\r\n         * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n         * @param content The content of the div as string.\r\n         * @returns {string} The concated string which represents a HTML div and its content.\r\n         */\n\n\n        function generateDiv(classesOrAttrs, content) {\n          return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ? 'class=\"' + classesOrAttrs + '\"' : function () {\n            var key;\n            var attrs = _strEmpty;\n\n            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\n              for (key in classesOrAttrs) {\n                attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\n              }\n            }\n\n            return attrs;\n          }() : _strEmpty) + '>' + (content || _strEmpty) + '</div>';\n        }\n        /**\r\n         * Selects or generates a div with the given class attribute.\r\n         * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n         * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n         * If its a boolean it decides whether only the children of the host element shall be selected.\r\n         * @returns {*} The generated or selected element.\r\n         */\n\n\n        function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\n          var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\n          var selectParent = onlyChildren ? _hostElement : selectParentOrOnlyChildren || _hostElement;\n          return _domExists && !selectParent[LEXICON.l] ? null : _domExists ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0) : FRAMEWORK(generateDiv(className));\n        }\n        /**\r\n         * Gets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be got.\r\n         * @param path The property of which the value shall be got.\r\n         * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n         */\n\n\n        function getObjectPropVal(obj, path) {\n          var splits = path.split(_strDot);\n          var i = 0;\n          var val;\n\n          for (; i < splits.length; i++) {\n            if (!obj[LEXICON.hOP](splits[i])) return;\n            val = obj[splits[i]];\n            if (i < splits.length && type(val) == TYPES.o) obj = val;\n          }\n\n          return val;\n        }\n        /**\r\n         * Sets the value of the given property from the given object.\r\n         * @param obj The object from which the property value shall be set.\r\n         * @param path The property of which the value shall be set.\r\n         * @param val The value of the property which shall be set.\r\n         */\n\n\n        function setObjectPropVal(obj, path, val) {\n          var splits = path.split(_strDot);\n          var splitsLength = splits.length;\n          var i = 0;\n          var extendObj = {};\n          var extendObjRoot = extendObj;\n\n          for (; i < splitsLength; i++) {\n            extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\n          }\n\n          FRAMEWORK.extend(obj, extendObjRoot, true);\n        }\n        /**\t\r\n         * Runs a action for each selector inside the updateOnLoad option.\t\r\n         * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n         */\n\n\n        function eachUpdateOnLoad(action) {\n          var updateOnLoad = _currentPreparedOptions.updateOnLoad;\n          updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\n\n          if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\n            each(updateOnLoad, action);\n          }\n        } //==== Utils Cache ====//\n\n        /**\r\n         * Compares two values or objects and returns true if they aren't equal.\r\n         * @param current The first value or object which shall be compared.\r\n         * @param cache The second value or object which shall be compared.\r\n         * @param force If true the returned value is always true.\r\n         * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n         */\n\n\n        function checkCache(current, cache, force) {\n          if (force) return force;\n\n          if (type(current) == TYPES.o && type(cache) == TYPES.o) {\n            for (var prop in current) {\n              if (prop !== 'c') {\n                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\n                  if (checkCache(current[prop], cache[prop])) return true;\n                } else {\n                  return true;\n                }\n              }\n            }\n          } else {\n            return current !== cache;\n          }\n\n          return false;\n        } //==== Shortcuts ====//\n\n        /**\r\n         * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n         */\n\n\n        function extendDeep() {\n          return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\n        }\n        /**\r\n         * jQuery addClass method shortcut.\r\n         */\n\n\n        function addClass(el, classes) {\n          return _frameworkProto.addClass.call(el, classes);\n        }\n        /**\r\n         * jQuery removeClass method shortcut.\r\n         */\n\n\n        function removeClass(el, classes) {\n          return _frameworkProto.removeClass.call(el, classes);\n        }\n        /**\r\n         * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n         */\n\n\n        function addRemoveClass(el, classes, doAdd) {\n          return doAdd ? addClass(el, classes) : removeClass(el, classes);\n        }\n        /**\r\n         * jQuery remove method shortcut.\r\n         */\n\n\n        function remove(el) {\n          return _frameworkProto.remove.call(el);\n        }\n        /**\r\n         * Finds the first child element with the given selector of the given element.\r\n         * @param el The root element from which the selector shall be valid.\r\n         * @param selector The selector of the searched element.\r\n         * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n         */\n\n\n        function findFirst(el, selector) {\n          return _frameworkProto.find.call(el, selector).eq(0);\n        } //==== API ====//\n\n        /**\r\n         * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n         * This behavior can be reset by calling the update method.\r\n         */\n\n\n        _base.sleep = function () {\n          _sleeping = true;\n        };\n        /**\r\n         * Updates the plugin and DOM to the current options.\r\n         * This method should only be called if a update is 100% required.\r\n         * @param force True if every property shall be updated and the cache shall be ignored.\r\n         * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n         * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n         * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n         * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n         * @returns {boolean|undefined} \r\n         * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n         * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n         * undefined otherwise.\r\n         */\n\n\n        _base.update = function (force) {\n          if (_destroyed) return;\n          var attrsChanged;\n          var contentSizeC;\n          var isString = type(force) == TYPES.s;\n          var doUpdateAuto;\n          var mutHost;\n          var mutContent;\n\n          if (isString) {\n            if (force === _strAuto) {\n              attrsChanged = meaningfulAttrsChanged();\n              contentSizeC = updateAutoContentSizeChanged();\n              doUpdateAuto = attrsChanged || contentSizeC;\n\n              if (doUpdateAuto) {\n                update({\n                  _contentSizeChanged: contentSizeC,\n                  _changedOptions: _initialized ? undefined$1 : _currentPreparedOptions\n                });\n              }\n            } else if (force === _strSync) {\n              if (_mutationObserversConnected) {\n                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\n                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\n              } else {\n                mutHost = _base.update(_strAuto);\n              }\n            } else if (force === 'zoom') {\n              update({\n                _hostSizeChanged: true,\n                _contentSizeChanged: true\n              });\n            }\n          } else {\n            force = _sleeping || force;\n            _sleeping = false;\n            if (!_base.update(_strSync) || force) update({\n              _force: force\n            });\n          }\n\n          updateElementsOnLoad();\n          return doUpdateAuto || mutHost || mutContent;\n        };\n        /**\r\n         Gets or sets the current options. The update method will be called automatically if new options were set.\r\n         * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n         * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n         * @returns {*}\r\n         */\n\n\n        _base.options = function (newOptions, value) {\n          var option = {};\n          var changedOps; //return current options if newOptions are undefined or empty\n\n          if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\n            if (type(newOptions) == TYPES.s) {\n              if (arguments.length > 1) {\n                setObjectPropVal(option, newOptions, value);\n                changedOps = setOptions(option);\n              } else return getObjectPropVal(_currentOptions, newOptions);\n            } else return _currentOptions;\n          } else {\n            changedOps = setOptions(newOptions);\n          }\n\n          if (!FRAMEWORK.isEmptyObject(changedOps)) {\n            update({\n              _changedOptions: changedOps\n            });\n          }\n        };\n        /**\r\n         * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n         */\n\n\n        _base.destroy = function () {\n          if (_destroyed) return; //remove this instance from auto update loop\n\n          autoUpdateLoop.remove(_base); //disconnect all mutation observers\n\n          disconnectMutationObservers(); //remove all resize observers\n\n          setupResizeObserver(_sizeObserverElement);\n          setupResizeObserver(_sizeAutoObserverElement); //remove all extensions\n\n          for (var extName in _extensions) {\n            _base.removeExt(extName);\n          } //remove all 'destroy' events\n\n\n          while (_destroyEvents[LEXICON.l] > 0) {\n            _destroyEvents.pop()();\n          } //remove all events from host element\n\n\n          setupHostMouseTouchEvents(true); //remove all helper / detection elements\n\n          if (_contentGlueElement) remove(_contentGlueElement);\n          if (_contentArrangeElement) remove(_contentArrangeElement);\n          if (_sizeAutoObserverAdded) remove(_sizeAutoObserverElement); //remove all generated DOM\n\n          setupScrollbarsDOM(true);\n          setupScrollbarCornerDOM(true);\n          setupStructureDOM(true); //remove all generated image load events\n\n          for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++) {\n            FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\n          }\n\n          _updateOnLoadElms = undefined$1;\n          _destroyed = true;\n          _sleeping = true; //remove this instance from the instances list\n\n          INSTANCES(pluginTargetElement, 0);\n          dispatchCallback('onDestroyed'); //remove all properties and methods\n          //for (var property in _base)\n          //    delete _base[property];\n          //_base = undefined;\n        };\n        /**\r\n         * Scrolls to a given position or element.\r\n         * @param coordinates\r\n         * 1. Can be \"coordinates\" which looks like:\r\n         *    { x : ?, y : ? } OR          Object with x and y properties\r\n         *    { left : ?, top : ? } OR     Object with left and top properties\r\n         *    { l : ?, t : ? } OR          Object with l and t properties\r\n         *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n         *    ?                            A single value which stays for both axis\r\n         *    A value can be a number, a string or a calculation.\r\n         *\r\n         *    Operators:\r\n         *    [NONE]  The current scroll will be overwritten by the value.\r\n         *    '+='    The value will be added to the current scroll offset\r\n         *    '-='    The value will be subtracted from the current scroll offset\r\n         *    '*='    The current scroll wil be multiplicated by the value.\r\n         *    '/='    The current scroll wil be divided by the value.\r\n         *\r\n         *    Units:\r\n         *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n         *    'px'    Same as none\r\n         *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n         *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n         *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n         *\r\n         *    example final values:\r\n         *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n         *\r\n         * 2. Can be a HTML or jQuery element:\r\n         *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n         *\r\n         * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n         *    {\r\n         *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n         *      scroll : [string, array, object],               Default value is 'always'.\r\n         *      block : [string, array, object],                Default value is 'begin'.\r\n         *      margin : [number, boolean, array, object]       Default value is false.\r\n         *    }\r\n         *\r\n         *    Possible scroll settings are:\r\n         *    'always'      Scrolls always.\r\n         *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n         *    'never'       Scrolls never.\r\n         *\r\n         *    Possible block settings are:\r\n         *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n         *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n         *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n         *    'nearest' The element will be docked to the nearest edge(s).\r\n         *\r\n         *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n         *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n         *    [NUMBER]                                          The margin will be used for all edges.\r\n         *\r\n         * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n         * @param easing The animation easing.\r\n         * @param complete The animation complete callback.\r\n         * @returns {{\r\n         *   position: {x: number, y: number},\r\n         *   ratio: {x: number, y: number},\r\n         *   max: {x: number, y: number},\r\n         *   handleOffset: {x: number, y: number},\r\n         *   handleLength: {x: number, y: number},\r\n         *   handleLengthRatio: {x: number, y: number}, t\r\n         *   rackLength: {x: number, y: number},\r\n         *   isRTL: boolean,\r\n         *   isRTLNormalized: boolean\r\n         *  }}\r\n         */\n\n\n        _base.scroll = function (coordinates, duration, easing, complete) {\n          if (arguments.length === 0 || coordinates === undefined$1) {\n            var infoX = _scrollHorizontalInfo;\n            var infoY = _scrollVerticalInfo;\n            var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\n            var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\n            var scrollX = infoX._currentScroll;\n            var scrollXRatio = infoX._currentScrollRatio;\n            var maxScrollX = infoX._maxScroll;\n            scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\n            scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\n            scrollX *= normalizeNegate ? -1 : 1;\n            maxScrollX *= normalizeNegate ? -1 : 1;\n            return {\n              position: {\n                x: scrollX,\n                y: infoY._currentScroll\n              },\n              ratio: {\n                x: scrollXRatio,\n                y: infoY._currentScrollRatio\n              },\n              max: {\n                x: maxScrollX,\n                y: infoY._maxScroll\n              },\n              handleOffset: {\n                x: infoX._handleOffset,\n                y: infoY._handleOffset\n              },\n              handleLength: {\n                x: infoX._handleLength,\n                y: infoY._handleLength\n              },\n              handleLengthRatio: {\n                x: infoX._handleLengthRatio,\n                y: infoY._handleLengthRatio\n              },\n              trackLength: {\n                x: infoX._trackLength,\n                y: infoY._trackLength\n              },\n              snappedHandleOffset: {\n                x: infoX._snappedHandleOffset,\n                y: infoY._snappedHandleOffset\n              },\n              isRTL: _isRTL,\n              isRTLNormalized: _normalizeRTLCache\n            };\n          }\n\n          _base.update(_strSync);\n\n          var normalizeRTL = _normalizeRTLCache;\n          var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\n          var coordinatesYAxisProps = [_strY, _strTop, 't'];\n          var coordinatesOperators = ['+=', '-=', '*=', '/='];\n          var durationIsObject = type(duration) == TYPES.o;\n          var completeCallback = durationIsObject ? duration.complete : complete;\n          var i;\n          var finalScroll = {};\n          var specialEasing = {};\n          var doScrollLeft;\n          var doScrollTop;\n          var animationOptions;\n          var strEnd = 'end';\n          var strBegin = 'begin';\n          var strCenter = 'center';\n          var strNearest = 'nearest';\n          var strAlways = 'always';\n          var strNever = 'never';\n          var strIfNeeded = 'ifneeded';\n          var strLength = LEXICON.l;\n          var settingsAxis;\n          var settingsScroll;\n          var settingsBlock;\n          var settingsMargin;\n          var finalElement;\n          var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\n          var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\n          var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\n          var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\n          var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\n          var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\n          var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\n\n          var updateScrollbarInfos = function updateScrollbarInfos() {\n            if (doScrollLeft) refreshScrollbarHandleOffset(true);\n            if (doScrollTop) refreshScrollbarHandleOffset(false);\n          };\n\n          var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined$1 : function () {\n            updateScrollbarInfos();\n            completeCallback();\n          };\n\n          function checkSettingsStringValue(currValue, allowedValues) {\n            for (i = 0; i < allowedValues[strLength]; i++) {\n              if (currValue === allowedValues[i]) return true;\n            }\n\n            return false;\n          }\n\n          function getRawScroll(isX, coordinates) {\n            var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\n            coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\n            if (COMPATIBILITY.isA(coordinates)) return isX ? coordinates[0] : coordinates[1];else if (type(coordinates) == TYPES.o) {\n              //decides RTL normalization \"hack\" with .n\n              //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \n              for (i = 0; i < coordinateProps[strLength]; i++) {\n                if (coordinateProps[i] in coordinates) return coordinates[coordinateProps[i]];\n              }\n            }\n          }\n\n          function getFinalScroll(isX, rawScroll) {\n            var isString = type(rawScroll) == TYPES.s;\n            var operator;\n            var amount;\n            var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\n            var currScroll = scrollInfo._currentScroll;\n            var maxScroll = scrollInfo._maxScroll;\n            var mult = ' * ';\n            var finalValue;\n            var isRTLisX = _isRTL && isX;\n            var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\n            var strReplace = 'replace';\n            var evalFunc = eval;\n            var possibleOperator;\n\n            if (isString) {\n              //check operator\n              if (rawScroll[strLength] > 2) {\n                possibleOperator = rawScroll.substr(0, 2);\n                if (inArray(possibleOperator, coordinatesOperators) > -1) operator = possibleOperator;\n              } //calculate units and shortcuts\n\n\n              rawScroll = operator ? rawScroll.substr(2) : rawScroll;\n              rawScroll = rawScroll[strReplace](/min/g, 0) //'min' = 0%\n              [strReplace](/</g, 0) //'<'   = 0%\n              [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'max' = 100%\n              [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent) //'>'   = 100%\n              [strReplace](/px/g, _strEmpty)[strReplace](/%/g, mult + maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0)[strReplace](/vw/g, mult + _viewportSize.w)[strReplace](/vh/g, mult + _viewportSize.h);\n              amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\n            } else {\n              amount = rawScroll;\n            }\n\n            if (amount !== undefined$1 && !isNaN(amount) && type(amount) == TYPES.n) {\n              var normalizeIsRTLisX = normalizeRTL && isRTLisX;\n              var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\n              var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\n              var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\n              operatorCurrScroll = invert ? maxScroll - operatorCurrScroll : operatorCurrScroll;\n\n              switch (operator) {\n                case '+=':\n                  finalValue = operatorCurrScroll + amount;\n                  break;\n\n                case '-=':\n                  finalValue = operatorCurrScroll - amount;\n                  break;\n\n                case '*=':\n                  finalValue = operatorCurrScroll * amount;\n                  break;\n\n                case '/=':\n                  finalValue = operatorCurrScroll / amount;\n                  break;\n\n                default:\n                  finalValue = amount;\n                  break;\n              }\n\n              finalValue = invert ? maxScroll - finalValue : finalValue;\n              finalValue *= negate ? -1 : 1;\n              finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\n            }\n\n            return finalValue === currScroll ? undefined$1 : finalValue;\n          }\n\n          function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\n            var resultDefault = [defaultValue, defaultValue];\n            var valueType = type(value);\n            var valueArrLength;\n            var valueArrItem; //value can be [ string, or array of two strings ]\n\n            if (valueType == valueInternalType) {\n              value = [value, value];\n            } else if (valueType == TYPES.a) {\n              valueArrLength = value[strLength];\n              if (valueArrLength > 2 || valueArrLength < 1) value = resultDefault;else {\n                if (valueArrLength === 1) value[1] = defaultValue;\n\n                for (i = 0; i < valueArrLength; i++) {\n                  valueArrItem = value[i];\n\n                  if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\n                    value = resultDefault;\n                    break;\n                  }\n                }\n              }\n            } else if (valueType == TYPES.o) value = [value[_strX] || defaultValue, value[_strY] || defaultValue];else value = resultDefault;\n\n            return {\n              x: value[0],\n              y: value[1]\n            };\n          }\n\n          function generateMargin(marginTopRightBottomLeftArray) {\n            var result = [];\n            var currValue;\n            var currValueType;\n            var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\n\n            for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\n              if (i === valueDirections[strLength]) break;\n              currValue = marginTopRightBottomLeftArray[i];\n              currValueType = type(currValue);\n              if (currValueType == TYPES.b) result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);else result.push(currValueType == TYPES.n ? currValue : 0);\n            }\n\n            return result;\n          }\n\n          if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\n            //get settings\n            var margin = coordinatesIsElementObj ? coordinates.margin : 0;\n            var axis = coordinatesIsElementObj ? coordinates.axis : 0;\n            var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\n            var block = coordinatesIsElementObj ? coordinates.block : 0;\n            var marginDefault = [0, 0, 0, 0];\n            var marginType = type(margin);\n            var marginLength;\n            finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\n\n            if (finalElement[strLength] > 0) {\n              //margin can be [ boolean, number, array of 2, array of 4, object ]\n              if (marginType == TYPES.n || marginType == TYPES.b) margin = generateMargin([margin, margin, margin, margin]);else if (marginType == TYPES.a) {\n                marginLength = margin[strLength];\n                if (marginLength === 2) margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);else if (marginLength >= 4) margin = generateMargin(margin);else margin = marginDefault;\n              } else if (marginType == TYPES.o) margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);else margin = marginDefault; //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\n\n              settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\n              settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\n              settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\n              settingsMargin = margin;\n              var viewportScroll = {\n                l: _scrollHorizontalInfo._currentScroll,\n                t: _scrollVerticalInfo._currentScroll\n              }; // use padding element instead of viewport element because padding element has never padding, margin or position applied.\n\n              var viewportOffset = _paddingElement.offset(); //get coordinates\n\n\n              var elementOffset = finalElement.offset();\n              var doNotScroll = {\n                x: settingsScroll.x == strNever || settingsAxis == _strY,\n                y: settingsScroll.y == strNever || settingsAxis == _strX\n              };\n              elementOffset[_strTop] -= settingsMargin[0];\n              elementOffset[_strLeft] -= settingsMargin[3];\n              var elementScrollCoordinates = {\n                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\n                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\n              };\n\n              if (_isRTL) {\n                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\n                if (_rtlScrollBehavior.n && normalizeRTL) elementScrollCoordinates.x *= -1;\n                if (_rtlScrollBehavior.i && normalizeRTL) elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\n              } //measuring is required\n\n\n              if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\n                var measuringElm = finalElement[0];\n                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\n                  width: measuringElm[LEXICON.oW],\n                  height: measuringElm[LEXICON.oH]\n                };\n                var elementSize = {\n                  w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\n                  h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\n                };\n\n                var finalizeBlock = function finalizeBlock(isX) {\n                  var vars = getScrollbarVars(isX);\n                  var wh = vars._w_h;\n                  var lt = vars._left_top;\n                  var xy = vars._x_y;\n                  var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\n                  var blockIsCenter = settingsBlock[xy] == strCenter;\n                  var blockIsNearest = settingsBlock[xy] == strNearest;\n                  var scrollNever = settingsScroll[xy] == strNever;\n                  var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\n                  var vpSize = _viewportSize[wh];\n                  var vpOffset = viewportOffset[lt];\n                  var elSize = elementSize[wh];\n                  var elOffset = elementOffset[lt];\n                  var divide = blockIsCenter ? 2 : 1;\n                  var elementCenterOffset = elOffset + elSize / 2;\n                  var viewportCenterOffset = vpOffset + vpSize / 2;\n                  var isInView = elSize <= vpSize && elOffset >= vpOffset && elOffset + elSize <= vpOffset + vpSize;\n                  if (scrollNever) doNotScroll[xy] = true;else if (!doNotScroll[xy]) {\n                    if (blockIsNearest || scrollIfNeeded) {\n                      doNotScroll[xy] = scrollIfNeeded ? isInView : false;\n                      blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\n                    }\n\n                    elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? (vpSize / divide - elSize / divide) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\n                  }\n                };\n\n                finalizeBlock(true);\n                finalizeBlock(false);\n              }\n\n              if (doNotScroll.y) delete elementScrollCoordinates.y;\n              if (doNotScroll.x) delete elementScrollCoordinates.x;\n              coordinates = elementScrollCoordinates;\n            }\n          }\n\n          finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\n          finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\n          doScrollLeft = finalScroll[_strScrollLeft] !== undefined$1;\n          doScrollTop = finalScroll[_strScrollTop] !== undefined$1;\n\n          if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\n            if (durationIsObject) {\n              duration.complete = proxyCompleteCallback;\n\n              _viewportElement.animate(finalScroll, duration);\n            } else {\n              animationOptions = {\n                duration: duration,\n                complete: proxyCompleteCallback\n              };\n\n              if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\n                specialEasing[_strScrollLeft] = easing[0] || easing.x;\n                specialEasing[_strScrollTop] = easing[1] || easing.y;\n                animationOptions.specialEasing = specialEasing;\n              } else {\n                animationOptions.easing = easing;\n              }\n\n              _viewportElement.animate(finalScroll, animationOptions);\n            }\n          } else {\n            if (doScrollLeft) _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\n            if (doScrollTop) _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\n            updateScrollbarInfos();\n          }\n        };\n        /**\r\n         * Stops all scroll animations.\r\n         * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n         */\n\n\n        _base.scrollStop = function (param1, param2, param3) {\n          _viewportElement.stop(param1, param2, param3);\n\n          return _base;\n        };\n        /**\r\n         * Returns all relevant elements.\r\n         * @param elementName The name of the element which shall be returned.\r\n         * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n         */\n\n\n        _base.getElements = function (elementName) {\n          var obj = {\n            target: _targetElementNative,\n            host: _hostElementNative,\n            padding: _paddingElementNative,\n            viewport: _viewportElementNative,\n            content: _contentElementNative,\n            scrollbarHorizontal: {\n              scrollbar: _scrollbarHorizontalElement[0],\n              track: _scrollbarHorizontalTrackElement[0],\n              handle: _scrollbarHorizontalHandleElement[0]\n            },\n            scrollbarVertical: {\n              scrollbar: _scrollbarVerticalElement[0],\n              track: _scrollbarVerticalTrackElement[0],\n              handle: _scrollbarVerticalHandleElement[0]\n            },\n            scrollbarCorner: _scrollbarCornerElement[0]\n          };\n          return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\n        };\n        /**\r\n         * Returns a object which describes the current state of this instance.\r\n         * @param stateProperty A specific property from the state object which shall be returned.\r\n         * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n         */\n\n\n        _base.getState = function (stateProperty) {\n          function prepare(obj) {\n            if (!FRAMEWORK.isPlainObject(obj)) return obj;\n            var extended = extendDeep({}, obj);\n\n            var changePropertyName = function changePropertyName(from, to) {\n              if (extended[LEXICON.hOP](from)) {\n                extended[to] = extended[from];\n                delete extended[from];\n              }\n            };\n\n            changePropertyName('w', _strWidth); //change w to width\n\n            changePropertyName('h', _strHeight); //change h to height\n\n            delete extended.c; //delete c (the 'changed' prop)\n\n            return extended;\n          }\n\n          var obj = {\n            destroyed: !!prepare(_destroyed),\n            sleeping: !!prepare(_sleeping),\n            autoUpdate: prepare(!_mutationObserversConnected),\n            widthAuto: prepare(_widthAutoCache),\n            heightAuto: prepare(_heightAutoCache),\n            padding: prepare(_cssPaddingCache),\n            overflowAmount: prepare(_overflowAmountCache),\n            hideOverflow: prepare(_hideOverflowCache),\n            hasOverflow: prepare(_hasOverflowCache),\n            contentScrollSize: prepare(_contentScrollSizeCache),\n            viewportSize: prepare(_viewportSize),\n            hostSize: prepare(_hostSizeCache),\n            documentMixed: prepare(_documentMixed)\n          };\n          return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\n        };\n        /**\r\n         * Gets all or specific extension instance.\r\n         * @param extName The name of the extension from which the instance shall be got.\r\n         * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n         */\n\n\n        _base.ext = function (extName) {\n          var result;\n\n          var privateMethods = _extensionsPrivateMethods.split(' ');\n\n          var i = 0;\n\n          if (type(extName) == TYPES.s) {\n            if (_extensions[LEXICON.hOP](extName)) {\n              result = extendDeep({}, _extensions[extName]);\n\n              for (; i < privateMethods.length; i++) {\n                delete result[privateMethods[i]];\n              }\n            }\n          } else {\n            result = {};\n\n            for (i in _extensions) {\n              result[i] = extendDeep({}, _base.ext(i));\n            }\n          }\n\n          return result;\n        };\n        /**\r\n         * Adds a extension to this instance.\r\n         * @param extName The name of the extension which shall be added.\r\n         * @param extensionOptions The extension options which shall be used.\r\n         * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n         */\n\n\n        _base.addExt = function (extName, extensionOptions) {\n          var registeredExtensionObj = _plugin.extension(extName);\n\n          var instance;\n          var instanceAdded;\n          var instanceContract;\n          var contractResult;\n          var contractFulfilled = true;\n\n          if (registeredExtensionObj) {\n            if (!_extensions[LEXICON.hOP](extName)) {\n              instance = registeredExtensionObj.extensionFactory.call(_base, extendDeep({}, registeredExtensionObj.defaultOptions), FRAMEWORK, COMPATIBILITY);\n\n              if (instance) {\n                instanceContract = instance.contract;\n\n                if (type(instanceContract) == TYPES.f) {\n                  contractResult = instanceContract(window);\n                  contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\n                }\n\n                if (contractFulfilled) {\n                  _extensions[extName] = instance;\n                  instanceAdded = instance.added;\n                  if (type(instanceAdded) == TYPES.f) instanceAdded(extensionOptions);\n                  return _base.ext(extName);\n                }\n              }\n            } else return _base.ext(extName);\n          } else console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\n        };\n        /**\r\n         * Removes a extension from this instance.\r\n         * @param extName The name of the extension which shall be removed.\r\n         * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n         */\n\n\n        _base.removeExt = function (extName) {\n          var instance = _extensions[extName];\n          var instanceRemoved;\n\n          if (instance) {\n            delete _extensions[extName];\n            instanceRemoved = instance.removed;\n            if (type(instanceRemoved) == TYPES.f) instanceRemoved();\n            return true;\n          }\n\n          return false;\n        };\n        /**\r\n         * Constructs the plugin.\r\n         * @param targetElement The element to which the plugin shall be applied.\r\n         * @param options The initial options of the plugin.\r\n         * @param extensions The extension(s) which shall be added right after the initialization.\r\n         * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n         */\n\n\n        function construct(targetElement, options, extensions) {\n          _defaultOptions = globals.defaultOptions;\n          _nativeScrollbarStyling = globals.nativeScrollbarStyling;\n          _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\n          _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\n          _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\n          _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior); //parse & set options but don't update\n\n          setOptions(extendDeep({}, _defaultOptions, options));\n          _cssCalc = globals.cssCalc;\n          _msieVersion = globals.msie;\n          _autoUpdateRecommended = globals.autoUpdateRecommended;\n          _supportTransition = globals.supportTransition;\n          _supportTransform = globals.supportTransform;\n          _supportPassiveEvents = globals.supportPassiveEvents;\n          _supportResizeObserver = globals.supportResizeObserver;\n          _supportMutationObserver = globals.supportMutationObserver;\n          _documentElement = FRAMEWORK(targetElement.ownerDocument);\n          _documentElementNative = _documentElement[0];\n          _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\n          _windowElementNative = _windowElement[0];\n          _htmlElement = findFirst(_documentElement, 'html');\n          _bodyElement = findFirst(_htmlElement, 'body');\n          _targetElement = FRAMEWORK(targetElement);\n          _targetElementNative = _targetElement[0];\n          _isTextarea = _targetElement.is('textarea');\n          _isBody = _targetElement.is('body');\n          _documentMixed = _documentElementNative !== document;\n          /* On a div Element The if checks only whether:\r\n           * - the targetElement has the class \"os-host\"\r\n           * - the targetElement has a a child with the class \"os-padding\"\r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-host\" element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding\">\r\n           *          <div class=\"os-viewport\">\r\n           *              <div class=\"os-content\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           *\r\n           * =====================================================================================\r\n           * \r\n           * On a Textarea Element The if checks only whether:\r\n           * - the targetElement has the class \"os-textarea\" \r\n           * - the targetElement is inside a element with the class \"os-content\" \r\n           * \r\n           * If that's the case, its assumed the DOM has already the following structure:\r\n           * (The \".os-textarea\" (textarea) element is the targetElement)\r\n           *\r\n           *  <div class=\"os-host-textarea\">\r\n           *      <div class=\"os-resize-observer-host\"></div>\r\n           *      <div class=\"os-padding os-text-inherit\">\r\n           *          <div class=\"os-viewport os-text-inherit\">\r\n           *              <div class=\"os-content os-text-inherit\">\r\n           *                  <div class=\"os-textarea-cover\"></div>\r\n           *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n           *              </div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n           *          <div class=\"os-scrollbar-track\">\r\n           *              <div class=\"os-scrollbar-handle\"></div>\r\n           *          </div>\r\n           *      </div>\r\n           *      <div class=\"os-scrollbar-corner\"></div>\r\n           *  </div>\r\n           */\n\n          _domExists = _isTextarea ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement) : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\n          var initBodyScroll;\n\n          var _bodyMouseTouchDownListener; //check if the plugin hasn't to be initialized\n\n\n          if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\n            dispatchCallback('onInitializationWithdrawn');\n\n            if (_domExists) {\n              setupStructureDOM(true);\n              setupScrollbarsDOM(true);\n              setupScrollbarCornerDOM(true);\n            }\n\n            _destroyed = true;\n            _sleeping = true;\n            return _base;\n          }\n\n          if (_isBody) {\n            initBodyScroll = {};\n            initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\n            initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\n\n            _bodyMouseTouchDownListener = function bodyMouseTouchDownListener() {\n              _viewportElement.removeAttr(LEXICON.ti);\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, true, true);\n            };\n          } //build OverlayScrollbars DOM\n\n\n          setupStructureDOM();\n          setupScrollbarsDOM();\n          setupScrollbarCornerDOM(); //create OverlayScrollbars events\n\n          setupStructureEvents();\n          setupScrollbarEvents(true);\n          setupScrollbarEvents(false);\n          setupScrollbarCornerEvents(); //create mutation observers\n\n          createMutationObservers(); //build resize observer for the host element\n\n          setupResizeObserver(_sizeObserverElement, hostOnResized);\n\n          if (_isBody) {\n            //apply the body scroll to handle it right in the update method\n            _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t); //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\n\n\n            if (document.activeElement == targetElement && _viewportElementNative.focus) {\n              //set a tabindex to make the viewportElement focusable\n              _viewportElement.attr(LEXICON.ti, '-1');\n\n              _viewportElementNative.focus();\n              /* the tabindex has to be removed due to;\r\n               * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n               * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n               */\n\n\n              setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, _bodyMouseTouchDownListener, false, true);\n            }\n          } //update for the first time & initialize cache\n\n\n          _base.update(_strAuto); //the plugin is initialized now!\n\n\n          _initialized = true;\n          dispatchCallback('onInitialized'); //call all callbacks which would fire before the initialized was complete\n\n          each(_callbacksInitQeueue, function (index, value) {\n            dispatchCallback(value.n, value.a);\n          });\n          _callbacksInitQeueue = []; //add extensions\n\n          if (type(extensions) == TYPES.s) extensions = [extensions];\n          if (COMPATIBILITY.isA(extensions)) each(extensions, function (index, value) {\n            _base.addExt(value);\n          });else if (FRAMEWORK.isPlainObject(extensions)) each(extensions, function (key, value) {\n            _base.addExt(key, value);\n          }); //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\n\n          setTimeout(function () {\n            if (_supportTransition && !_destroyed) addClass(_hostElement, _classNameHostTransition);\n          }, 333);\n          return _base;\n        }\n\n        if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\n          INSTANCES(pluginTargetElement, _base);\n        }\n\n        return _base;\n      }\n      /**\r\n       * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n       * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n       * @param options The custom options with which the plugin shall be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*}\r\n       */\n\n\n      _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\n        if (arguments[LEXICON.l] === 0) return this;\n        var arr = [];\n        var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\n        var inst;\n        var result; //pluginTargetElements is null or undefined\n\n        if (!pluginTargetElements) return optsIsPlainObj || !options ? result : arr;\n        /*\r\n           pluginTargetElements will be converted to:\r\n           1. A jQueryElement Array\r\n           2. A HTMLElement Array\r\n           3. A Array with a single HTML Element\r\n           so pluginTargetElements is always a array.\r\n        */\n\n        pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined$1 ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\n        initOverlayScrollbarsStatics();\n\n        if (pluginTargetElements[LEXICON.l] > 0) {\n          if (optsIsPlainObj) {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = v;\n              if (inst !== undefined$1) arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\n            });\n          } else {\n            FRAMEWORK.each(pluginTargetElements, function (i, v) {\n              inst = INSTANCES(v);\n              if (options === '!' && _plugin.valid(inst) || COMPATIBILITY.type(options) == TYPES.f && options(v, inst)) arr.push(inst);else if (options === undefined$1) arr.push(inst);\n            });\n          }\n\n          result = arr[LEXICON.l] === 1 ? arr[0] : arr;\n        }\n\n        return result;\n      };\n      /**\r\n       * Returns a object which contains global information about the plugin and each instance of it.\r\n       * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n       */\n\n\n      _plugin.globals = function () {\n        initOverlayScrollbarsStatics();\n        var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\n        delete globals['msie'];\n        return globals;\n      };\n      /**\r\n       * Gets or Sets the default options for each new plugin initialization.\r\n       * @param newDefaultOptions The object with which the default options shall be extended.\r\n       */\n\n\n      _plugin.defaultOptions = function (newDefaultOptions) {\n        initOverlayScrollbarsStatics();\n        var currDefaultOptions = _pluginsGlobals.defaultOptions;\n        if (newDefaultOptions === undefined$1) return FRAMEWORK.extend(true, {}, currDefaultOptions); //set the new default options\n\n        _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\n      };\n      /**\r\n       * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n       * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n       * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n       */\n\n\n      _plugin.valid = function (osInstance) {\n        return osInstance instanceof _plugin && !osInstance.getState().destroyed;\n      };\n      /**\r\n       * Registers, Unregisters or returns a extension.\r\n       * Register: Pass the name and the extension. (defaultOptions is optional)\r\n       * Unregister: Pass the name and anything except a function as extension parameter.\r\n       * Get extension: Pass the name of the extension which shall be got.\r\n       * Get all extensions: Pass no arguments.\r\n       * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n       * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n       * @param defaultOptions The default options which shall be used for the registered extension.\r\n       */\n\n\n      _plugin.extension = function (extensionName, extension, defaultOptions) {\n        var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\n        var argLen = arguments[LEXICON.l];\n        var i = 0;\n\n        if (argLen < 1 || !extNameTypeString) {\n          //return a copy of all extension objects\n          return FRAMEWORK.extend(true, {\n            length: _pluginsExtensions[LEXICON.l]\n          }, _pluginsExtensions);\n        } else if (extNameTypeString) {\n          if (COMPATIBILITY.type(extension) == TYPES.f) {\n            //register extension\n            _pluginsExtensions.push({\n              name: extensionName,\n              extensionFactory: extension,\n              defaultOptions: defaultOptions\n            });\n          } else {\n            for (; i < _pluginsExtensions[LEXICON.l]; i++) {\n              if (_pluginsExtensions[i].name === extensionName) {\n                if (argLen > 1) _pluginsExtensions.splice(i, 1); //remove extension\n                else return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\n              }\n            }\n          }\n        }\n      };\n\n      return _plugin;\n    }();\n\n    if (JQUERY && JQUERY.fn) {\n      /**\r\n       * The jQuery initialization interface.\r\n       * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n       * @param extensions The extension(s) which shall be added right after initialization.\r\n       * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n       */\n      JQUERY.fn.overlayScrollbars = function (options, extensions) {\n        var _elements = this;\n\n        if (JQUERY.isPlainObject(options)) {\n          JQUERY.each(_elements, function () {\n            PLUGIN(this, options, extensions);\n          });\n          return _elements;\n        } else return PLUGIN(_elements, options);\n      };\n    }\n\n    return PLUGIN;\n  });\n})(OverlayScrollbars$1);\n\nvar OverlayScrollbars = OverlayScrollbars$1.exports;\n/**\n * Using overlayscrollbars-react component results use the esm modules\n * which doesn't go through babel leading to IE 11 uncompatibility\n * A PR is submitted that may fix this:\n * https://github.com/KingSora/OverlayScrollbars/pull/218\n * */\n\nvar OverlayScrollbarsComponent = function OverlayScrollbarsComponent(_a) {\n  var _a$options = _a.options,\n      options = _a$options === void 0 ? {} : _a$options,\n      extensions = _a.extensions,\n      className = _a.className,\n      children = _a.children,\n      rest = __rest(_a, [\"options\", \"extensions\", \"className\", \"children\"]);\n\n  var osTargetRef = useRef();\n  var osInstance = useRef();\n  useEffect(function () {\n    osInstance.current = OverlayScrollbars(osTargetRef.current, options, extensions);\n    mergeHostClassNames(osInstance.current, className);\n    return function () {\n      if (OverlayScrollbars.valid(osInstance.current)) {\n        osInstance.current.destroy();\n        osInstance.current = null;\n      }\n    };\n  }, []);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      osInstance.current.options(options);\n    }\n  }, [options]);\n  useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      mergeHostClassNames(osInstance.current, className);\n    }\n  }, [className]);\n  return React__default.createElement(\"div\", Object.assign({\n    className: \"os-host\"\n  }, rest, {\n    ref: osTargetRef\n  }), React__default.createElement(\"div\", {\n    className: \"os-resize-observer-host\"\n  }), React__default.createElement(\"div\", {\n    className: \"os-padding\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-viewport\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-content\"\n  }, children))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-horizontal \"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-vertical\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, React__default.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), React__default.createElement(\"div\", {\n    className: \"os-scrollbar-corner\"\n  }));\n};\n\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    var _osInstance$getElemen = osInstance.getElements(),\n        host = _osInstance$getElemen.host;\n\n    var regex = new RegExp(\"(^os-host([-_].+|)$)|\".concat(osInstance.options().className.replace(/\\s/g, '$|'), \"$\"), 'g');\n    var osClassNames = host.className.split(' ').filter(function (name) {\n      return name.match(regex);\n    }).join(' ');\n    host.className = \"\".concat(osClassNames, \" \").concat(className || '');\n  }\n}\n\nexport { OverlayScrollbarsComponent, OverlayScrollbarsComponent as default };\n"],"names":["useRef","useEffect"],"mappings":"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"}