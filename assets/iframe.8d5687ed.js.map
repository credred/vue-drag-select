{"version":3,"file":"iframe.8d5687ed.js","sources":["../../vite/modulepreload-polyfill","../../.storybook/preview.js","../../src/DragSelectCommon.ts","../../src/utils/clipNumber.ts","../../src/utils/toRect.ts","../../src/utils/noop.ts","../../src/utils/tryOnScopeDispose.ts","../../src/hooks/useEventListener.ts","../../src/hooks/useDrag.ts","../../src/hooks/useDragPoints.ts","../../src/hooks/useDragRect.ts","../../src/utils/rectIsIntersect.ts","../../src/DragSelectHook.ts","../../src/utils/setIsEqual.ts","../../../../../../../virtual:/@storybook/builder-vite/vite-app.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","export const parameters = {\n  actions: { argTypesRegex: \"^on[A-Z].*\" },\n  controls: {\n    matchers: {\n      color: /(background|color)$/i,\n      date: /Date$/,\n    },\n  },\n}","import { InjectionKey } from 'vue';\nimport { MaybeRef } from './typings/internal';\n\nexport interface DragSelectProps<T = unknown> {\n  /**\n   * binding value\n   * @alias v-model\n   */\n  modelValue?: MaybeRef<T>;\n  /**\n   * whether DragSelect is disabled\n   * @default false\n   */\n  disabled?: boolean;\n  /**\n   * can draggable when dragstart event target on DragSelectOption\n   */\n  draggableOnOption?: boolean;\n  /**\n   * the class names of drag area\n   */\n  dragAreaClass?: string;\n  /**\n   * the class styles of drag area\n   */\n  dragAreaStyle?: Record<string, unknown>;\n  /**\n   * background color of drag area, 'none' represent hide this style to avoid override background color of class\n   */\n  background?: string;\n  /**\n   * the class names of selected DragSelectOption\n   */\n  selectedOptionClass?: string;\n  /**\n   * the selected styles of selected DragSelectOption\n   */\n  selectedOptionStyle?: Record<string, unknown>;\n}\n\nexport type InnerDragSelectProps<T = unknown> = DragSelectProps<T> & Required<Omit<DragSelectProps<T>, 'modelValue'>>;\n\nexport type OptionValue = unknown;\n\nexport interface Option<T = OptionValue> {\n  dom: HTMLElement;\n  value: T;\n  disabled: boolean;\n}\n\ninterface ForOptionAction {\n  selectedOptionClass: MaybeRef<string>;\n  has: (option: MaybeRef<Option>) => boolean;\n  isSelected: (option: MaybeRef<Option>) => boolean;\n  add: (option: MaybeRef<Option>) => void;\n  delete: (option: MaybeRef<Option>) => void;\n  onClick: (option: MaybeRef<Option>) => void;\n  onPointerDown: () => void;\n}\n\nexport const forOptionActionKey: InjectionKey<ForOptionAction> = Symbol();\n","export const clipNumber = (target: number, min = 0, max = Infinity): number => Math.max(min, Math.min(target, max));\n","import { Position, Rect } from '../typings/internal';\n\nexport function toRect([x1, y1]: Position, [x2, y2]: Position): Rect {\n  return {\n    left: Math.min(x1, x2),\n    top: Math.min(y1, y2),\n    width: Math.abs(x1 - x2),\n    height: Math.abs(y1 - y2),\n  };\n}\n","// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const noop = () => {};\n","import { getCurrentScope, onScopeDispose } from 'vue';\nimport { Fn } from '../typings/internal';\n\n/**\n * copy form vueuse\n *\n * Call onScopeDispose() if it's inside a effect scope lifecycle, if not, do nothing\n *\n * @param fn\n */\nexport function tryOnScopeDispose(fn: Fn) {\n  if (getCurrentScope()) {\n    onScopeDispose(fn);\n    return true;\n  }\n  return false;\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-argument */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { unref, watch } from 'vue';\nimport { noop } from '../utils/noop';\nimport { tryOnScopeDispose } from '../utils/tryOnScopeDispose';\nimport { Fn, MaybeNullableRef } from '../typings/internal';\n\nexport interface InferEventTarget<Events> {\n  addEventListener(event: Events, fn?: any, options?: any): any;\n  removeEventListener(event: Events, fn?: any, options?: any): any;\n}\n\nexport type GeneralEventListener<E = Event> = {\n  (evt: E): void;\n};\n\nexport function useEventListener<E extends keyof WindowEventMap>(\n  target: Window,\n  event: E,\n  listener: (this: Window, ev: WindowEventMap[E]) => any,\n  options?: boolean | AddEventListenerOptions\n): Fn;\nexport function useEventListener<E extends keyof DocumentEventMap>(\n  target: Document,\n  event: E,\n  listener: (this: Document, ev: DocumentEventMap[E]) => any,\n  options?: boolean | AddEventListenerOptions\n): Fn;\nexport function useEventListener<E extends keyof HTMLElementEventMap>(\n  target: MaybeNullableRef<HTMLElement>,\n  event: E,\n  listener: (this: Window, ev: HTMLElementEventMap[E]) => any,\n  options?: boolean | AddEventListenerOptions\n): Fn;\nexport function useEventListener<E extends keyof SVGElementEventMap>(\n  target: MaybeNullableRef<SVGElement>,\n  event: E,\n  listener: (this: Window, ev: SVGElementEventMap[E]) => any,\n  options?: boolean | AddEventListenerOptions\n): Fn;\nexport function useEventListener<EventType = Event>(\n  target: MaybeNullableRef<EventTarget>,\n  event: string,\n  listener: GeneralEventListener<EventType>,\n  options?: boolean | AddEventListenerOptions\n): Fn;\nexport function useEventListener(\n  target: MaybeNullableRef<Window | Document | HTMLElement | SVGElement> | MaybeNullableRef<EventTarget>,\n  event: string,\n  listener: any,\n  options?: boolean | AddEventListenerOptions\n): Fn {\n  let cleanup = noop;\n  const stopWatch = watch(\n    () => unref(target),\n    (el) => {\n      cleanup();\n      if (!el) return;\n\n      el.addEventListener(event, listener, options);\n\n      cleanup = () => {\n        el.removeEventListener(event, listener, options);\n      };\n    },\n    { immediate: true, flush: 'post' }\n  );\n\n  let stopImpl = () => {\n    stopWatch();\n    cleanup();\n    stopImpl = noop;\n  };\n\n  const stop = () => {\n    stopImpl();\n  };\n\n  tryOnScopeDispose(stop);\n\n  return stop;\n}\n","import { unref } from 'vue';\nimport { useEventListener } from './useEventListener';\nimport { MaybeNullableRef, MaybeRef, PointerType } from '../typings/internal';\nimport { noop } from '../utils/noop';\nimport { tryOnScopeDispose } from '../utils/tryOnScopeDispose';\n\nexport interface UseDragOptions {\n  /**\n   * Only start the dragging when click on the element directly\n   *\n   * @default false\n   */\n  exact?: MaybeRef<boolean>;\n\n  /**\n   * Prevent events defaults\n   *\n   * @default false\n   */\n  preventDefault?: MaybeRef<boolean>;\n\n  /**\n   * Element to attach `pointermove` and `pointerup` events to.\n   *\n   * @default window\n   */\n  draggingElement?: MaybeRef<HTMLElement | SVGElement | Window | Document | null>;\n\n  /**\n   * Pointer types that listen to.\n   *\n   * @default ['mouse', 'touch', 'pen']\n   */\n  pointerTypes?: PointerType[];\n\n  /**\n   * Callback when the dragging starts. Return `false` to prevent dragging.\n   */\n  onStart?: (event: PointerEvent) => void | false;\n\n  /**\n   * Callback during dragging.\n   */\n  onMove?: (event: PointerEvent) => void;\n\n  /**\n   * Callback when dragging end.\n   */\n  onEnd?: (event: PointerEvent) => void;\n}\n\n/**\n * Make elements draggable.\n *\n * @param target\n * @param options\n */\nexport function useDrag(target: MaybeNullableRef<HTMLElement | SVGElement>, options: UseDragOptions = {}) {\n  const draggingElement = options.draggingElement ?? window;\n  const filterEvent = (e: PointerEvent) => {\n    if (!e.isPrimary) return false;\n    if (options.pointerTypes) return options.pointerTypes.includes(e.pointerType as PointerType);\n    return true;\n  };\n  const preventDefault = (e: PointerEvent) => {\n    if (unref(options.preventDefault)) e.preventDefault();\n  };\n  const start = (e: PointerEvent) => {\n    if (!filterEvent(e)) return;\n    if (unref(options.exact) && e.target !== unref(target)) return;\n\n    if (options.onStart?.(e) === false) return;\n\n    lastMouseEvent = e;\n    stopPointermove = useEventListener(draggingElement, 'pointermove', move, true);\n    stopPointerup = useEventListener(draggingElement, 'pointerup', end, true);\n    stopScroll = useEventListener(draggingElement, 'scroll', scroll, true);\n    preventDefault(e);\n  };\n  const move = (e: PointerEvent) => {\n    lastMouseEvent = e;\n    if (!filterEvent(e)) return;\n\n    options.onMove?.(e);\n\n    preventDefault(e);\n  };\n  const end = (e: PointerEvent) => {\n    if (!filterEvent(e)) return;\n\n    options.onEnd?.(e);\n\n    stopPointermove();\n    stopPointerup();\n    stopScroll();\n    preventDefault(e);\n  };\n\n  /** for scroll event */\n  let lastMouseEvent: PointerEvent;\n  const scroll = () => {\n    move(lastMouseEvent);\n  };\n\n  const stopPointerdown = useEventListener(target, 'pointerdown', start);\n  let stopPointermove = noop;\n  let stopPointerup = noop;\n  let stopScroll = noop;\n\n  let stopImpl = () => {\n    stopPointerdown();\n    stopPointermove();\n    stopPointerup();\n    stopScroll();\n    stopImpl = noop;\n  };\n\n  const stop = () => {\n    stopImpl();\n  };\n\n  tryOnScopeDispose(stop);\n\n  return stop;\n}\n","import { ref, computed, unref } from 'vue';\nimport { MaybeNullableRef, Position } from '../typings/internal';\nimport { useDrag, UseDragOptions } from './useDrag';\n\ntype DragStatus = 'start' | 'ing' | 'end';\n\nexport interface UseDragPointsOptions extends Omit<UseDragOptions, 'preventDefault' | 'onStart'> {\n  /**\n   * Callback when the dragging starts. Return `false` to prevent dragging.\n   */\n  onStart?: (event: PointerEvent, fromPoint: Position) => void | false;\n}\n\nexport function useDragPoints(target: MaybeNullableRef<HTMLElement | SVGElement>, options: UseDragPointsOptions = {}) {\n  const dragStatus = ref<DragStatus>('end');\n\n  // only working for single pointer\n  const fromPoint = ref<Position>([0, 0]);\n  const fromPosition = ref<Position>([0, 0]);\n  const toPostion = ref<Position>([0, 0]);\n  const toPoint = computed<Position>(() => [\n    unref(toPostion)[0] - unref(fromPosition)[0] + unref(fromPoint)[0],\n    unref(toPostion)[1] - unref(fromPosition)[1] + unref(fromPoint)[1],\n  ]);\n\n  const stop = useDrag(target, {\n    ...options,\n    preventDefault: true,\n    onStart(e) {\n      if (dragStatus.value !== 'end') return false;\n      const targetDOM = unref(target);\n      if (!targetDOM) return false;\n      const rect = targetDOM.getBoundingClientRect();\n      const _fromPoint: Position = [\n        e.clientX - rect.left - targetDOM.clientLeft + targetDOM.scrollLeft,\n        e.clientY - rect.top - targetDOM.clientTop + targetDOM.scrollTop,\n      ];\n      if (options.onStart?.(e, _fromPoint) === false) {\n        return false;\n      }\n      fromPoint.value = _fromPoint;\n      fromPosition.value = _fromPoint;\n      toPostion.value = _fromPoint;\n    },\n    onMove(e) {\n      options.onMove?.(e);\n      dragStatus.value = 'ing';\n      const targetDOM = unref(target);\n      if (!targetDOM) return;\n      const rect = targetDOM.getBoundingClientRect();\n      toPostion.value = [\n        e.clientX - rect.left - targetDOM.clientLeft + targetDOM.scrollLeft,\n        e.clientY - rect.top - targetDOM.clientTop + targetDOM.scrollTop,\n      ];\n    },\n    onEnd(e) {\n      options.onEnd?.(e);\n      dragStatus.value = 'end';\n      fromPoint.value = [0, 0];\n      fromPosition.value = [0, 0];\n      toPostion.value = [0, 0];\n    },\n  });\n\n  return { fromPoint, toPoint, dragStatus, stop };\n}\n","import { unref, computed, CSSProperties } from 'vue';\nimport { MaybeNullableRef, MaybeRef, Position, Rect } from '../typings/internal';\nimport { clipNumber } from '../utils/clipNumber';\nimport { toRect } from '../utils/toRect';\nimport { useDragPoints, UseDragPointsOptions } from './useDragPoints';\n\nfunction pointInRect(contentRef: MaybeNullableRef<HTMLElement | SVGElement>, pointRef: MaybeRef<Position>): boolean {\n  const [content, [x, y]] = [unref(contentRef), unref(pointRef)];\n  if (!content) {\n    return false;\n  }\n  const { clientLeft, scrollWidth, clientTop, scrollHeight } = content;\n  return 0 < x && clientLeft + scrollWidth > x && 0 < y && clientTop + scrollHeight > y;\n}\n\nfunction limitPoint(contentRef: MaybeNullableRef<HTMLElement | SVGElement>, pointRef: MaybeRef<Position>): Position {\n  const [content, [x, y]] = [unref(contentRef), unref(pointRef)];\n  if (!content) {\n    return [0, 0];\n  }\n  const { scrollWidth, scrollHeight } = content;\n  return [clipNumber(scrollWidth, 0, x), clipNumber(scrollHeight, 0, y)];\n}\n\nexport interface UseDragRectOptions extends Omit<UseDragPointsOptions, 'onStart'> {\n  /**\n   * Callback when the dragging starts. Return `false` to prevent dragging.\n   */\n  onStart?: (event: PointerEvent) => void | false;\n}\n\nexport function useDragRect(contentRef: MaybeNullableRef<HTMLElement | SVGElement>, options: UseDragRectOptions = {}) {\n  const { fromPoint, toPoint, dragStatus, stop } = useDragPoints(contentRef, {\n    ...options,\n    onStart(e, fromPoint) {\n      if (!pointInRect(contentRef, fromPoint)) {\n        return false;\n      }\n      if (options.onStart?.(e) === false) {\n        return false;\n      }\n    },\n  });\n\n  const rect = computed<Rect | undefined>(() => {\n    if (dragStatus.value === 'ing') {\n      return toRect(unref(fromPoint), limitPoint(contentRef, toPoint));\n    } else {\n      return undefined;\n    }\n  });\n\n  const style = computed<CSSProperties>(() => {\n    if (dragStatus.value === 'ing' && rect.value) {\n      const { left, top, width, height } = rect.value;\n      return {\n        position: 'absolute',\n        boxSizing: 'border-box',\n        touchAction: 'none',\n        top: 0,\n        left: 0,\n        transform: `translate(${left}px, ${top}px)`,\n        width: `${width}px`,\n        height: `${height}px`,\n      };\n    } else {\n      return {\n        display: 'none',\n      };\n    }\n  });\n\n  return { fromPoint, toPoint, style, rect, dragStatus, stop };\n}\n","import { Rect } from '../typings/internal';\n\nexport function rectIsIntersect(r1: Rect, r2: Rect): boolean {\n  return (\n    r1.left <= r2.left + r2.width &&\n    r2.left <= r1.left + r1.width &&\n    r1.top <= r2.top + r2.height &&\n    r2.top <= r1.top + r1.height\n  );\n}\n","import { watch, ref, unref } from 'vue';\nimport { Option } from './DragSelectCommon';\nimport { useDragRect } from './hooks/useDragRect';\nimport { MaybeNullableRef, MaybeRef } from './typings/internal';\nimport { rectIsIntersect } from './utils/rectIsIntersect';\n\ninterface UseDragToSelectConfig {\n  contentRef: MaybeNullableRef<HTMLElement>;\n  options: Set<Option>;\n  onChange: (selectedOptions: Set<unknown>) => void;\n  draggableOnOption: MaybeRef<boolean>;\n  consumePointerDownedOnOption: () => boolean;\n}\n\nexport function useDragToSelect({\n  contentRef,\n  options,\n  onChange,\n  draggableOnOption,\n  consumePointerDownedOnOption,\n}: UseDragToSelectConfig) {\n  const dragged = ref(false);\n  const {\n    rect: areaRect,\n    style: areaStyle,\n    stop,\n  } = useDragRect(contentRef, {\n    onStart() {\n      dragged.value = false;\n      if (!unref(draggableOnOption) && consumePointerDownedOnOption()) {\n        return false;\n      }\n    },\n    onMove() {\n      dragged.value = true;\n    },\n  });\n\n  watch(areaRect, () => {\n    const newSelectedOptions = new Set();\n    if (!areaRect.value) return;\n    for (const { dom, value, disabled } of options) {\n      if (\n        disabled ||\n        rectIsIntersect(areaRect.value, {\n          left: dom.offsetLeft,\n          top: dom.offsetTop,\n          width: dom.clientWidth,\n          height: dom.clientHeight,\n        })\n      ) {\n        newSelectedOptions.add(value);\n      }\n    }\n    onChange(newSelectedOptions);\n  });\n\n  return { dragged, areaStyle, stop };\n}\n\ninterface UseClickToSelectConfig {\n  onChange: (selectedOptions: Set<unknown>) => void;\n  isDisableClick: () => boolean;\n}\n\nexport function useClickToSelect({ onChange, isDisableClick }: UseClickToSelectConfig) {\n  const onClickToSelect = (option: Option) => {\n    if (isDisableClick()) return;\n\n    const newSelectedOptions = new Set([option.value]);\n    onChange(newSelectedOptions);\n  };\n\n  return onClickToSelect;\n}\n","export const setIsEqual = (set1: Set<unknown>, set2: Set<unknown>) => {\n  if (set1.size !== set2.size) {\n    return false;\n  }\n  for (const value of set1) {\n    if (!set2.has(value)) {\n      return false;\n    }\n  }\n  return true;\n};\n","import { configure } from '@storybook/vue3';\n    /* // preview entry\nimport '/home/qiufan/front/github/vue-drag-select-v2/node_modules/@storybook/core-client/dist/esm/globals/polyfills.js';\n// preview entry\nimport '/home/qiufan/front/github/vue-drag-select-v2/node_modules/@storybook/core-client/dist/esm/globals/globals.js'; */\n\n    import { addDecorator, addParameters, addLoader, addArgTypesEnhancer, addArgsEnhancer } from '@storybook/client-api';\n    import { logger } from '@storybook/client-logger';\n    import * as config_0 from '/@fs//home/qiufan/front/github/vue-drag-select-v2/node_modules/@storybook/addon-docs/dist/esm/frameworks/common/config.js'\nimport * as config_1 from '/@fs//home/qiufan/front/github/vue-drag-select-v2/node_modules/@storybook/addon-docs/dist/esm/frameworks/vue3/config.js'\nimport * as config_2 from '/@fs//home/qiufan/front/github/vue-drag-select-v2/node_modules/@storybook/vue3/dist/esm/client/preview/config'\nimport * as config_3 from '/@fs//home/qiufan/front/github/vue-drag-select-v2/node_modules/@storybook/addon-links/dist/esm/preset/addDecorator.js'\nimport * as config_4 from '/@fs//home/qiufan/front/github/vue-drag-select-v2/node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js'\nimport * as config_5 from '/@fs//home/qiufan/front/github/vue-drag-select-v2/node_modules/@storybook/addon-actions/dist/esm/preset/addArgs.js'\nimport * as config_6 from '/@fs//home/qiufan/front/github/vue-drag-select-v2/node_modules/@storybook/addon-backgrounds/dist/esm/preset/addDecorator.js'\nimport * as config_7 from '/@fs//home/qiufan/front/github/vue-drag-select-v2/node_modules/@storybook/addon-backgrounds/dist/esm/preset/addParameter.js'\nimport * as config_8 from '/@fs//home/qiufan/front/github/vue-drag-select-v2/node_modules/@storybook/addon-measure/dist/esm/preset/addDecorator.js'\nimport * as config_9 from '/@fs//home/qiufan/front/github/vue-drag-select-v2/node_modules/@storybook/addon-outline/dist/esm/preset/addDecorator.js'\nimport * as config_10 from '/@fs//home/qiufan/front/github/vue-drag-select-v2/.storybook/preview.js'\n    import * as story_0 from '/@fs//home/qiufan/front/github/vue-drag-select-v2/stories/aBase.stories.tsx'\nimport * as story_1 from '/@fs//home/qiufan/front/github/vue-drag-select-v2/stories/bdvance.stories.tsx'\n      \n    const configs = [config_0,config_1,config_2,config_3,config_4,config_5,config_6,config_7,config_8,config_9,config_10]\n    configs.forEach(config => {\n      Object.keys(config).forEach((key) => {\n        const value = config[key];\n        switch (key) {\n          case 'args':\n          case 'argTypes': {\n            return logger.warn('Invalid args/argTypes in config, ignoring.', JSON.stringify(value));\n          }\n          case 'decorators': {\n            return value.forEach((decorator) => addDecorator(decorator, false));\n          }\n          case 'loaders': {\n            return value.forEach((loader) => addLoader(loader, false));\n          }\n          case 'parameters': {\n            return addParameters({ ...value }, false);\n          }\n          case 'argTypesEnhancers': {\n            return value.forEach((enhancer) => addArgTypesEnhancer(enhancer));\n          }\n          case 'argsEnhancers': {\n            return value.forEach((enhancer) => addArgsEnhancer(enhancer))\n          }\n          case 'globals':\n          case 'globalTypes': {\n            const v = {};\n            v[key] = value;\n            return addParameters(v, false);\n          }\n          case 'decorateStory':\n          case 'renderToDOM': {\n            return null; // This key is not handled directly in v6 mode.\n          }\n          default: {\n            // eslint-disable-next-line prefer-template\n            return console.log(key + ' was not supported :( !');\n          }\n        }\n      });\n    })\n    \n    /* TODO: not quite sure what to do with this, to fix HMR\n    if (import.meta.hot) {\n        import.meta.hot.accept();    \n    }\n    */\n    \n    configure(() => [story_0,story_1].filter(el => el.default), { hot: import.meta.hot }, false); // not sure if the import.meta.hot thing is correct"],"names":[],"mappings":"yvBAAA,KAAM,IAAI,UAAoB,CAC1B,KAAM,GAAU,SAAS,cAAc,QAAQ,QAC/C,GAAI,GAAW,EAAQ,UAAY,EAAQ,SAAS,iBAChD,OAEJ,SAAW,KAAQ,UAAS,iBAAiB,6BACzC,EAAe,GAEnB,GAAI,kBAAiB,AAAC,GAAc,CAChC,SAAW,KAAY,GACnB,GAAI,EAAS,OAAS,YAGtB,SAAW,KAAQ,GAAS,WACxB,AAAI,EAAK,UAAY,QAAU,EAAK,MAAQ,iBACxC,EAAe,KAG5B,QAAQ,SAAU,CAAE,UAAW,GAAM,QAAS,KACjD,WAAsB,EAAQ,CAC1B,KAAM,GAAY,GAClB,MAAI,GAAO,WACP,GAAU,UAAY,EAAO,WAC7B,EAAO,gBACP,GAAU,eAAiB,EAAO,gBACtC,AAAI,EAAO,cAAgB,kBACvB,EAAU,YAAc,UACvB,AAAI,EAAO,cAAgB,YAC5B,EAAU,YAAc,OAExB,EAAU,YAAc,cACrB,EAEX,WAAwB,EAAM,CAC1B,GAAI,EAAK,GAEL,OACJ,EAAK,GAAK,GAEV,KAAM,GAAY,EAAa,GAC/B,MAAM,EAAK,KAAM,KAEvB,AAAoB,KC1Cf,KAAM,IAAa,CACxB,QAAS,CAAE,cAAe,cAC1B,SAAU,CACR,SAAU,CACR,MAAO,uBACP,KAAM,mGCuDC,IAAoD,SC5DpD,GAAa,CAAC,EAAgB,EAAM,EAAG,EAAM,MAAqB,KAAK,IAAI,EAAK,KAAK,IAAI,EAAQ,gBCEvF,CAAC,EAAI,GAAe,CAAC,EAAI,GAAqB,OAC5D,CACL,KAAM,KAAK,IAAI,EAAI,GACnB,IAAK,KAAK,IAAI,EAAI,GAClB,MAAO,KAAK,IAAI,EAAK,GACrB,OAAQ,KAAK,IAAI,EAAK,SCNb,GAAO,IAAM,eCSQ,EAAQ,OACpC,UACa,GACR,IAEF,cCiCP,EACA,EACA,EACA,EACI,IACA,GAAU,OACR,GAAY,EAChB,IAAM,EAAM,GACZ,AAAC,GAAO,KAEF,EAAC,MAEF,iBAAiB,EAAO,EAAU,KAE3B,IAAM,GACX,oBAAoB,EAAO,EAAU,MAG5C,CAAE,UAAW,GAAM,MAAO,YAGxB,GAAW,IAAM,WAGR,QAGP,GAAO,IAAM,gBAID,GAEX,cCxBe,EAAoD,EAA0B,GAAI,YAClG,GAAkB,KAAQ,kBAAR,OAA2B,OAC7C,EAAc,AAAC,GACd,EAAE,UACH,EAAQ,aAAqB,EAAQ,aAAa,SAAS,EAAE,aAC1D,GAFkB,GAIrB,EAAiB,AAAC,GAAoB,CACtC,EAAM,EAAQ,mBAAmB,kBAEjC,EAAQ,AAAC,GAAoB,OAC7B,CAAC,EAAY,IACb,EAAM,EAAQ,QAAU,EAAE,SAAW,EAAM,IAE3C,MAAQ,UAAR,qBAAkB,MAAO,OAEZ,IACC,EAAiB,EAAiB,cAAe,EAAM,MACzD,EAAiB,EAAiB,YAAa,EAAK,MACvD,EAAiB,EAAiB,SAAU,EAAQ,MAClD,KAEX,EAAO,AAAC,GAAoB,SACf,EACb,EAAC,EAAY,UAET,wBAAS,KAEF,KAEX,EAAM,AAAC,GAAoB,OAC3B,CAAC,EAAY,UAET,uBAAQ,iBAKD,QAIb,QACE,GAAS,IAAM,GACd,IAGD,EAAkB,EAAiB,EAAQ,cAAe,MAC5D,GAAkB,EAClB,EAAgB,EAChB,EAAa,EAEb,EAAW,IAAM,mBAKR,QAGP,GAAO,IAAM,gBAID,GAEX,cC9GqB,EAAoD,EAAgC,GAAI,MAC9G,GAAa,EAAgB,OAG7B,EAAY,EAAc,CAAC,EAAG,IAC9B,EAAe,EAAc,CAAC,EAAG,IACjC,EAAY,EAAc,CAAC,EAAG,IAC9B,EAAU,EAAmB,IAAM,CACvC,EAAM,GAAW,GAAK,EAAM,GAAc,GAAK,EAAM,GAAW,GAChE,EAAM,GAAW,GAAK,EAAM,GAAc,GAAK,EAAM,GAAW,KAG5D,EAAO,GAAQ,EAAQ,OACxB,GADwB,CAE3B,eAAgB,GAChB,QAAQ,EAAG,UACL,EAAW,QAAU,YAAc,QACjC,GAAY,EAAM,MACpB,CAAC,QAAkB,QACjB,GAAO,EAAU,wBACjB,EAAuB,CAC3B,EAAE,QAAU,EAAK,KAAO,EAAU,WAAa,EAAU,WACzD,EAAE,QAAU,EAAK,IAAM,EAAU,UAAY,EAAU,cAErD,MAAQ,UAAR,qBAAkB,EAAG,MAAgB,SAChC,KAEC,MAAQ,IACL,MAAQ,IACX,MAAQ,GAEpB,OAAO,EAAG,YACA,wBAAS,KACN,MAAQ,WACb,GAAY,EAAM,MACpB,CAAC,cACC,GAAO,EAAU,0BACb,MAAQ,CAChB,EAAE,QAAU,EAAK,KAAO,EAAU,WAAa,EAAU,WACzD,EAAE,QAAU,EAAK,IAAM,EAAU,UAAY,EAAU,YAG3D,MAAM,EAAG,YACC,uBAAQ,KACL,MAAQ,QACT,MAAQ,CAAC,EAAG,KACT,MAAQ,CAAC,EAAG,KACf,MAAQ,CAAC,EAAG,aAInB,CAAE,YAAW,UAAS,aAAY,QC1D3C,YAAqB,EAAwD,EAAuC,MAC5G,CAAC,EAAS,CAAC,EAAG,IAAM,CAAC,EAAM,GAAa,EAAM,OAChD,CAAC,QACI,QAEH,CAAE,aAAY,cAAa,YAAW,gBAAiB,QACtD,GAAI,GAAK,EAAa,EAAc,GAAK,EAAI,GAAK,EAAY,EAAe,EAGtF,YAAoB,EAAwD,EAAwC,MAC5G,CAAC,EAAS,CAAC,EAAG,IAAM,CAAC,EAAM,GAAa,EAAM,OAChD,CAAC,QACI,CAAC,EAAG,QAEP,CAAE,cAAa,gBAAiB,QAC/B,CAAC,GAAW,EAAa,EAAG,GAAI,GAAW,EAAc,EAAG,gBAUzC,EAAwD,EAA8B,GAAI,MAC9G,CAAE,YAAW,UAAS,aAAY,QAAS,GAAc,EAAY,OACtE,GADsE,CAEzE,QAAQ,EAAG,EAAW,UAChB,CAAC,GAAY,EAAY,IAGzB,MAAQ,UAAR,qBAAkB,MAAO,SACpB,OAKP,EAAO,EAA2B,IAAM,IACxC,EAAW,QAAU,YAChB,IAAO,EAAM,GAAY,GAAW,EAAY,MAMrD,EAAQ,EAAwB,IAAM,IACtC,EAAW,QAAU,OAAS,EAAK,MAAO,MACtC,CAAE,OAAM,MAAK,QAAO,UAAW,EAAK,YACnC,CACL,SAAU,WACV,UAAW,aACX,YAAa,OACb,IAAK,EACL,KAAM,EACN,UAAW,aAAa,QAAW,OACnC,MAAO,GAAG,MACV,OAAQ,GAAG,kBAGN,CACL,QAAS,gBAKR,CAAE,YAAW,UAAS,QAAO,OAAM,aAAY,oBCtExB,EAAU,EAAmB,OAEzD,GAAG,MAAQ,EAAG,KAAO,EAAG,OACxB,EAAG,MAAQ,EAAG,KAAO,EAAG,OACxB,EAAG,KAAO,EAAG,IAAM,EAAG,QACtB,EAAG,KAAO,EAAG,IAAM,EAAG,mBCOM,CAC9B,aACA,UACA,WACA,oBACA,gCACwB,MAClB,GAAU,EAAI,IACd,CACJ,KAAM,EACN,MAAO,EACP,QACE,GAAY,EAAY,CAC1B,SAAU,MACA,MAAQ,GACZ,CAAC,EAAM,IAAsB,UACxB,IAGX,QAAS,GACC,MAAQ,eAId,EAAU,IAAM,MACd,GAAqB,GAAI,QAC3B,EAAC,EAAS,gBACH,CAAE,MAAK,QAAO,aAAc,GAEnC,IACA,GAAgB,EAAS,MAAO,CAC9B,KAAM,EAAI,WACV,IAAK,EAAI,UACT,MAAO,EAAI,YACX,OAAQ,EAAI,mBAGK,IAAI,KAGlB,MAGJ,CAAE,UAAS,YAAW,oBAQE,CAAE,WAAU,kBAA0C,OAC7D,AAAC,IAAmB,IACtC,gBAEE,GAAqB,GAAI,KAAI,CAAC,EAAO,UAClC,SCtEA,IAAa,CAAC,EAAoB,IAAuB,IAChE,EAAK,OAAS,EAAK,WACd,YAEE,KAAS,MACd,CAAC,EAAK,IAAI,SACL,SAGJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;m5BCaL,KAAM,IAAU,CAAC,GAAS,GAAS,GAAS,GAAS,GAAS,GAAS,GAAS,GAAS,GAAS,GAAS,IAC3G,GAAQ,QAAQ,GAAU,CACxB,OAAO,KAAK,GAAQ,QAAQ,AAAC,GAAQ,CACnC,KAAM,GAAQ,EAAO,GACrB,OAAQ,OACD,WACA,WACH,MAAO,IAAO,KAAK,6CAA8C,KAAK,UAAU,QAE7E,aACH,MAAO,GAAM,QAAQ,AAAC,GAAc,GAAa,EAAW,SAEzD,UACH,MAAO,GAAM,QAAQ,AAAC,GAAW,GAAU,EAAQ,SAEhD,aACH,MAAO,GAAc,KAAK,GAAS,QAEhC,oBACH,MAAO,GAAM,QAAQ,AAAC,GAAa,GAAoB,QAEpD,gBACH,MAAO,GAAM,QAAQ,AAAC,GAAa,GAAgB,QAEhD,cACA,cAAe,CAClB,KAAM,GAAI,GACV,SAAE,GAAO,EACF,EAAc,EAAG,QAErB,oBACA,cACH,MAAO,cAIP,MAAO,SAAQ,IAAI,EAAM,gCAYjC,GAAU,IAAM,CAAC,GAAQ,IAAS,OAAO,GAAM,EAAG,SAAU,CAAE,IAAK,IAAmB"}